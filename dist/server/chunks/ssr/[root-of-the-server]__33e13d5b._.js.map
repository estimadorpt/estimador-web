{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/lib/utils/probability-calculator.ts"],"sourcesContent":["import { SeatData } from '@/types';\n\n// Calculate bloc majority probability\nexport function calculateBlocMajorityProbability(\n  simulationData: SeatData[], \n  blocParties: string[], \n  threshold: number\n): number {\n  if (!simulationData || simulationData.length === 0) return 0;\n  \n  let successCount = 0;\n  for (const simulation of simulationData) {\n    const blocTotal = blocParties.reduce((sum, party) => sum + (simulation[party] || 0), 0);\n    if (blocTotal >= threshold) successCount++;\n  }\n  \n  return successCount / simulationData.length;\n}\n\n// Calculate party most seats probability  \nexport function calculatePartyMostSeatsProbability(\n  simulationData: SeatData[],\n  targetParty: string,\n  competitorParties: string[]\n): number {\n  if (!simulationData || simulationData.length === 0) return 0;\n  \n  let successCount = 0;\n  for (const simulation of simulationData) {\n    const targetSeats = simulation[targetParty] || 0;\n    const isWinning = competitorParties.every(competitor => \n      targetSeats > (simulation[competitor] || 0)\n    );\n    if (isWinning) successCount++;\n  }\n  \n  return successCount / simulationData.length;\n}\n\n// Calculate bloc A greater than bloc B probability\nexport function calculateBlocAGreaterThanBlocBProbability(\n  simulationData: SeatData[],\n  blocAParties: string[],\n  blocBParties: string[]\n): number {\n  if (!simulationData || simulationData.length === 0) return 0;\n  \n  let successCount = 0;\n  for (const simulation of simulationData) {\n    const blocATotal = blocAParties.reduce((sum, party) => sum + (simulation[party] || 0), 0);\n    const blocBTotal = blocBParties.reduce((sum, party) => sum + (simulation[party] || 0), 0);\n    if (blocATotal > blocBTotal) successCount++;\n  }\n  \n  return successCount / simulationData.length;\n}\n\n// Format probability as percentage\nexport function formatProbabilityPercent(probability: number): string {\n  return `${Math.round(probability * 100)}%`;\n}"],"names":[],"mappings":";;;;;;;;;;AAGO,SAAS,iCACd,cAA0B,EAC1B,WAAqB,EACrB,SAAiB;IAEjB,IAAI,CAAC,kBAAkB,eAAe,MAAM,KAAK,GAAG,OAAO;IAE3D,IAAI,eAAe;IACnB,KAAK,MAAM,cAAc,eAAgB;QACvC,MAAM,YAAY,YAAY,MAAM,CAAC,CAAC,KAAK,QAAU,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,GAAG;QACrF,IAAI,aAAa,WAAW;IAC9B;IAEA,OAAO,eAAe,eAAe,MAAM;AAC7C;AAGO,SAAS,mCACd,cAA0B,EAC1B,WAAmB,EACnB,iBAA2B;IAE3B,IAAI,CAAC,kBAAkB,eAAe,MAAM,KAAK,GAAG,OAAO;IAE3D,IAAI,eAAe;IACnB,KAAK,MAAM,cAAc,eAAgB;QACvC,MAAM,cAAc,UAAU,CAAC,YAAY,IAAI;QAC/C,MAAM,YAAY,kBAAkB,KAAK,CAAC,CAAA,aACxC,cAAc,CAAC,UAAU,CAAC,WAAW,IAAI,CAAC;QAE5C,IAAI,WAAW;IACjB;IAEA,OAAO,eAAe,eAAe,MAAM;AAC7C;AAGO,SAAS,0CACd,cAA0B,EAC1B,YAAsB,EACtB,YAAsB;IAEtB,IAAI,CAAC,kBAAkB,eAAe,MAAM,KAAK,GAAG,OAAO;IAE3D,IAAI,eAAe;IACnB,KAAK,MAAM,cAAc,eAAgB;QACvC,MAAM,aAAa,aAAa,MAAM,CAAC,CAAC,KAAK,QAAU,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,GAAG;QACvF,MAAM,aAAa,aAAa,MAAM,CAAC,CAAC,KAAK,QAAU,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,GAAG;QACvF,IAAI,aAAa,YAAY;IAC/B;IAEA,OAAO,eAAe,eAAe,MAAM;AAC7C;AAGO,SAAS,yBAAyB,WAAmB;IAC1D,OAAO,GAAG,KAAK,KAAK,CAAC,cAAc,KAAK,CAAC,CAAC;AAC5C","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/lib/config/blocs.ts"],"sourcesContent":["export const leftBlocParties = [\"PS\", \"BE\", \"CDU\", \"L\"];\nexport const rightBlocParties = [\"AD\", \"IL\"];\nexport const majorityThreshold = 116;\n\nexport const rightPlusParties = [\"AD\", \"IL\"];\nexport const leftPlusScenarioParties = [\"PS\", \"L\", \"PAN\", \"BE\", \"CDU\"];"],"names":[],"mappings":";;;;;;;;;;;;AAAO,MAAM,kBAAkB;IAAC;IAAM;IAAM;IAAO;CAAI;AAChD,MAAM,mBAAmB;IAAC;IAAM;CAAK;AACrC,MAAM,oBAAoB;AAE1B,MAAM,mBAAmB;IAAC;IAAM;CAAK;AACrC,MAAM,0BAA0B;IAAC;IAAM;IAAK;IAAO;IAAM;CAAM","debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/lib/config/colors.ts"],"sourcesContent":["export const partyColors = {\n  \"AD\": \"#FF8C00\",  // Dark Orange\n  \"PS\": \"#E57373\",  // Muted Pink\n  \"CH\": \"#377EB8\",  // Blue\n  \"IL\": \"#A6CEE3\",  // Light Blue \n  \"BE\": \"#000000\",  // Black\n  \"CDU\": \"#E41A1C\", // Red\n  \"L\":  \"#90EE90\",  // Light Green\n  \"PAN\": \"#4CAF50\", // Green for PAN\n  \"OTH\": \"#A65628\"  // Brown\n};\n\nexport const partyOrder = [\"AD\", \"PS\", \"CH\", \"IL\", \"BE\", \"CDU\", \"L\", \"PAN\", \"OTH\"];\n\nexport const partyNames = {\n  \"AD\": \"Aliança Democrática\",\n  \"PS\": \"Partido Socialista\", \n  \"CH\": \"Chega\",\n  \"IL\": \"Iniciativa Liberal\",\n  \"BE\": \"Bloco de Esquerda\",\n  \"CDU\": \"CDU\",\n  \"L\": \"Livre\",\n  \"PAN\": \"PAN\",\n  \"OTH\": \"Others\"\n};"],"names":[],"mappings":";;;;;;;;AAAO,MAAM,cAAc;IACzB,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,OAAO;IACP,KAAM;IACN,OAAO;IACP,OAAO,UAAW,QAAQ;AAC5B;AAEO,MAAM,aAAa;IAAC;IAAM;IAAM;IAAM;IAAM;IAAM;IAAO;IAAK;IAAO;CAAM;AAE3E,MAAM,aAAa;IACxB,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,OAAO;IACP,KAAK;IACL,OAAO;IACP,OAAO;AACT","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/lib/utils/data-loader.ts"],"sourcesContent":["import { promises as fs } from 'fs';\nimport path from 'path';\nimport { SeatData, TrendData, DistrictForecast, ContestedSeat } from '@/types';\n\n// Load data from the public directory\nexport async function loadJsonData<T>(filename: string): Promise<T> {\n  const filePath = path.join(process.cwd(), 'public', 'data', filename);\n  const fileContents = await fs.readFile(filePath, 'utf8');\n  return JSON.parse(fileContents);\n}\n\nexport async function loadForecastData() {\n  try {\n    const [seatData, nationalTrends, districtForecast, contestedSeats, houseEffects] = await Promise.all([\n      loadJsonData<SeatData[]>('seat_forecast_simulations.json'),\n      loadJsonData<TrendData[]>('national_trends.json'),\n      loadJsonData<any[]>('district_forecast.json'),\n      loadJsonData<any>('contested_summary.json'),\n      loadJsonData<any[]>('house_effects.json').catch(() => [])\n    ]);\n\n    return {\n      seatData,\n      nationalTrends, \n      districtForecast,\n      contestedSeats,\n      houseEffects\n    };\n  } catch (error) {\n    console.error('Error loading forecast data:', error);\n    return {\n      seatData: [] as SeatData[],\n      nationalTrends: [] as TrendData[],\n      districtForecast: [] as any[],\n      contestedSeats: {} as any,\n      houseEffects: [] as any[]\n    };\n  }\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAIO,eAAe,aAAgB,QAAgB;IACpD,MAAM,WAAW,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU,QAAQ;IAC5D,MAAM,eAAe,MAAM,yGAAE,CAAC,QAAQ,CAAC,UAAU;IACjD,OAAO,KAAK,KAAK,CAAC;AACpB;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,CAAC,UAAU,gBAAgB,kBAAkB,gBAAgB,aAAa,GAAG,MAAM,QAAQ,GAAG,CAAC;YACnG,aAAyB;YACzB,aAA0B;YAC1B,aAAoB;YACpB,aAAkB;YAClB,aAAoB,sBAAsB,KAAK,CAAC,IAAM,EAAE;SACzD;QAED,OAAO;YACL;YACA;YACA;YACA;YACA;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO;YACL,UAAU,EAAE;YACZ,gBAAgB,EAAE;YAClB,kBAAkB,EAAE;YACpB,gBAAgB,CAAC;YACjB,cAAc,EAAE;QAClB;IACF;AACF","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/PollingChart.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const PollingChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call PollingChart() from the server but PollingChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/PollingChart.tsx <module evaluation>\",\n    \"PollingChart\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,wEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/PollingChart.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const PollingChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call PollingChart() from the server but PollingChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/PollingChart.tsx\",\n    \"PollingChart\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,oDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/SeatChart.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const SeatChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call SeatChart() from the server but SeatChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/SeatChart.tsx <module evaluation>\",\n    \"SeatChart\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,qEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/SeatChart.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const SeatChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call SeatChart() from the server but SeatChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/SeatChart.tsx\",\n    \"SeatChart\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,iDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/DistrictSummary.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DistrictSummary = registerClientReference(\n    function() { throw new Error(\"Attempted to call DistrictSummary() from the server but DistrictSummary is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/DistrictSummary.tsx <module evaluation>\",\n    \"DistrictSummary\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/DistrictSummary.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DistrictSummary = registerClientReference(\n    function() { throw new Error(\"Attempted to call DistrictSummary() from the server but DistrictSummary is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/DistrictSummary.tsx\",\n    \"DistrictSummary\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,uDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/HouseEffects.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const HouseEffects = registerClientReference(\n    function() { throw new Error(\"Attempted to call HouseEffects() from the server but HouseEffects is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/HouseEffects.tsx <module evaluation>\",\n    \"HouseEffects\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,wEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/HouseEffects.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const HouseEffects = registerClientReference(\n    function() { throw new Error(\"Attempted to call HouseEffects() from the server but HouseEffects is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/HouseEffects.tsx\",\n    \"HouseEffects\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,oDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/app/forecast/page.tsx"],"sourcesContent":["import Link from \"next/link\";\nimport { \n  calculateBlocMajorityProbability, \n  calculatePartyMostSeatsProbability,\n  formatProbabilityPercent \n} from \"@/lib/utils/probability-calculator\";\nimport { leftBlocParties, rightBlocParties, majorityThreshold } from \"@/lib/config/blocs\";\nimport { partyColors, partyNames } from \"@/lib/config/colors\";\nimport { loadForecastData } from \"@/lib/utils/data-loader\";\nimport { ArrowLeft, Calendar, BarChart3, TrendingUp, Users, Map } from \"lucide-react\";\nimport { PollingChart } from \"@/components/charts/PollingChart\";\nimport { SeatChart } from \"@/components/charts/SeatChart\";\nimport { DistrictSummary } from \"@/components/charts/DistrictSummary\";\nimport { HouseEffects } from \"@/components/charts/HouseEffects\";\nimport { CoalitionDotPlot } from \"@/components/charts/CoalitionDotPlot\";\n\nexport default async function ForecastPage() {\n  const { seatData, nationalTrends, districtForecast, contestedSeats, houseEffects } = await loadForecastData();\n  \n  // Calculate probabilities\n  const probLeftMajority = calculateBlocMajorityProbability(seatData, leftBlocParties, majorityThreshold);\n  const probRightMajority = calculateBlocMajorityProbability(seatData, rightBlocParties, majorityThreshold);\n  const probAdMostSeats = calculatePartyMostSeatsProbability(seatData, 'AD', ['PS', 'CH']);\n  const probPsMostSeats = calculatePartyMostSeatsProbability(seatData, 'PS', ['AD', 'CH']);\n  \n  // Get latest polling data\n  const latest = nationalTrends\n    .filter(d => d.metric === 'vote_share_mean')\n    .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n    .reduce((acc, d) => {\n      if (!acc[d.party]) acc[d.party] = d;\n      return acc;\n    }, {} as any);\n\n  const parties = Object.values(latest).sort((a: any, b: any) => b.value - a.value);\n  const lastUpdate = new Date(parties[0].date).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long', \n    day: 'numeric'\n  });\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      {/* Header */}\n      <header className=\"border-b border-gray-200 bg-white sticky top-0 z-10\">\n        <div className=\"max-w-7xl mx-auto px-4 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-4\">\n              <Link \n                href=\"/\" \n                className=\"inline-flex items-center text-sm text-gray-600 hover:text-gray-900\"\n              >\n                <ArrowLeft className=\"w-4 h-4 mr-1\" />\n                Back to home\n              </Link>\n              <div className=\"border-l pl-4\">\n                <h1 className=\"text-xl font-bold text-gray-900\">Full Election Forecast</h1>\n                <p className=\"text-sm text-gray-600\">Portugal Parliamentary Elections</p>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-1 text-xs text-gray-500\">\n              <Calendar className=\"w-3 h-3\" />\n              <span>Updated {lastUpdate}</span>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Summary Stats */}\n      <section className=\"bg-gray-50 border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 py-8\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n            <div className=\"bg-white p-4 rounded-lg border border-gray-200 text-center\">\n              <div className=\"text-2xl font-bold text-gray-900 mb-1\">\n                {formatProbabilityPercent(probAdMostSeats)}\n              </div>\n              <div className=\"text-sm text-gray-600\">AD most seats</div>\n            </div>\n            <div className=\"bg-white p-4 rounded-lg border border-gray-200 text-center\">\n              <div className=\"text-2xl font-bold text-gray-900 mb-1\">\n                {formatProbabilityPercent(probPsMostSeats)}\n              </div>\n              <div className=\"text-sm text-gray-600\">PS most seats</div>\n            </div>\n            <div className=\"bg-white p-4 rounded-lg border border-gray-200 text-center\">\n              <div className=\"text-2xl font-bold text-gray-900 mb-1\">\n                {formatProbabilityPercent(probRightMajority)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Right majority</div>\n            </div>\n            <div className=\"bg-white p-4 rounded-lg border border-gray-200 text-center\">\n              <div className=\"text-2xl font-bold text-gray-900 mb-1\">\n                {formatProbabilityPercent(probLeftMajority)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Left majority</div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Main Charts Grid */}\n      <section className=\"py-8\">\n        <div className=\"max-w-7xl mx-auto px-4 space-y-8\">\n          \n          {/* Polling Trends */}\n          <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n            <div className=\"flex items-center gap-3 mb-6\">\n              <TrendingUp className=\"w-5 h-5 text-blue-600\" />\n              <h2 className=\"text-xl font-semibold text-gray-900\">Polling trends</h2>\n            </div>\n            <PollingChart data={nationalTrends} height={400} />\n            <p className=\"text-sm text-gray-600 mt-4\">\n              Smoothed polling averages based on {nationalTrends.length} data points. \n              Lines show estimated vote share over time with uncertainty bands.\n            </p>\n          </div>\n\n          {/* Seat Projections */}\n          <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n            <div className=\"flex items-center gap-3 mb-6\">\n              <BarChart3 className=\"w-5 h-5 text-green-600\" />\n              <h2 className=\"text-xl font-semibold text-gray-900\">Seat projections</h2>\n            </div>\n            <SeatChart data={seatData} height={350} />\n            <p className=\"text-sm text-gray-600 mt-4\">\n              Based on {seatData.length.toLocaleString()} Monte Carlo simulations. \n              Dots show mean projections, bands show 50% and 80% confidence intervals.\n            </p>\n          </div>\n\n          {/* District Analysis */}\n          <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n            <div className=\"flex items-center gap-3 mb-6\">\n              <Map className=\"w-5 h-5 text-purple-600\" />\n              <h2 className=\"text-xl font-semibold text-gray-900\">District Analysis</h2>\n            </div>\n            <DistrictSummary districtData={districtForecast} contestedData={contestedSeats} />\n          </div>\n\n          {/* Coalition Analysis */}\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Left-wing coalition</h3>\n              <div className=\"space-y-3\">\n                {leftBlocParties.map(party => {\n                  const partyData = parties.find((p: any) => p.party === party);\n                  return (\n                    <div key={party} className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-3\">\n                        <div \n                          className=\"w-3 h-3 rounded\"\n                          style={{ backgroundColor: partyColors[party as keyof typeof partyColors] }}\n                        />\n                        <span className=\"text-sm font-medium text-gray-900\">\n                          {partyNames[party as keyof typeof partyNames]}\n                        </span>\n                      </div>\n                      <span className=\"text-sm font-bold text-gray-900\">\n                        {partyData ? (partyData.value * 100).toFixed(1) : '0.0'}%\n                      </span>\n                    </div>\n                  );\n                })}\n                <div className=\"border-t pt-3 mt-3\">\n                  <div className=\"flex items-center justify-between font-semibold\">\n                    <span className=\"text-sm text-gray-900\">Majority chance</span>\n                    <span className=\"text-lg text-gray-900\">\n                      {formatProbabilityPercent(probLeftMajority)}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Right-wing coalition</h3>\n              <div className=\"space-y-3\">\n                {rightBlocParties.map(party => {\n                  const partyData = parties.find((p: any) => p.party === party);\n                  return (\n                    <div key={party} className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-3\">\n                        <div \n                          className=\"w-3 h-3 rounded\"\n                          style={{ backgroundColor: partyColors[party as keyof typeof partyColors] }}\n                        />\n                        <span className=\"text-sm font-medium text-gray-900\">\n                          {partyNames[party as keyof typeof partyNames]}\n                        </span>\n                      </div>\n                      <span className=\"text-sm font-bold text-gray-900\">\n                        {partyData ? (partyData.value * 100).toFixed(1) : '0.0'}%\n                      </span>\n                    </div>\n                  );\n                })}\n                <div className=\"border-t pt-3 mt-3\">\n                  <div className=\"flex items-center justify-between font-semibold\">\n                    <span className=\"text-sm text-gray-900\">Majority chance</span>\n                    <span className=\"text-lg text-gray-900\">\n                      {formatProbabilityPercent(probRightMajority)}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Polling Analysis */}\n          <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n            <div className=\"flex items-center gap-3 mb-6\">\n              <Users className=\"w-5 h-5 text-indigo-600\" />\n              <h2 className=\"text-xl font-semibold text-gray-900\">Polling house effects</h2>\n            </div>\n            <HouseEffects data={houseEffects} height={280} />\n          </div>\n\n          {/* Model Details */}\n          <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">About this model</h3>\n            <div className=\"grid md:grid-cols-3 gap-6 text-sm text-gray-600\">\n              <div>\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <Users className=\"w-4 h-4\" />\n                  <span className=\"font-medium\">Data sources</span>\n                </div>\n                <p>\n                  Polling data from major Portuguese polling firms, weighted by reliability \n                  and recency. Historical election results and demographic data.\n                </p>\n              </div>\n              <div>\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <BarChart3 className=\"w-4 h-4\" />\n                  <span className=\"font-medium\">Methodology</span>\n                </div>\n                <p>\n                  Monte Carlo simulation accounting for polling uncertainty, district-level \n                  variations, and D'Hondt seat allocation system.\n                </p>\n              </div>\n              <div>\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <TrendingUp className=\"w-4 h-4\" />\n                  <span className=\"font-medium\">Updates</span>\n                </div>\n                <p>\n                  Model is updated as new polling data becomes available. \n                  Uncertainty decreases as election day approaches.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}