{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/lib/utils/probability-calculator.ts"],"sourcesContent":["import { SeatData } from '@/types';\n\n// Calculate bloc majority probability\nexport function calculateBlocMajorityProbability(\n  simulationData: SeatData[], \n  blocParties: string[], \n  threshold: number\n): number {\n  if (!simulationData || simulationData.length === 0) return 0;\n  \n  let successCount = 0;\n  for (const simulation of simulationData) {\n    const blocTotal = blocParties.reduce((sum, party) => sum + (simulation[party] || 0), 0);\n    if (blocTotal >= threshold) successCount++;\n  }\n  \n  return successCount / simulationData.length;\n}\n\n// Calculate party most seats probability  \nexport function calculatePartyMostSeatsProbability(\n  simulationData: SeatData[],\n  targetParty: string,\n  competitorParties: string[]\n): number {\n  if (!simulationData || simulationData.length === 0) return 0;\n  \n  let successCount = 0;\n  for (const simulation of simulationData) {\n    const targetSeats = simulation[targetParty] || 0;\n    const isWinning = competitorParties.every(competitor => \n      targetSeats > (simulation[competitor] || 0)\n    );\n    if (isWinning) successCount++;\n  }\n  \n  return successCount / simulationData.length;\n}\n\n// Calculate bloc A greater than bloc B probability\nexport function calculateBlocAGreaterThanBlocBProbability(\n  simulationData: SeatData[],\n  blocAParties: string[],\n  blocBParties: string[]\n): number {\n  if (!simulationData || simulationData.length === 0) return 0;\n  \n  let successCount = 0;\n  for (const simulation of simulationData) {\n    const blocATotal = blocAParties.reduce((sum, party) => sum + (simulation[party] || 0), 0);\n    const blocBTotal = blocBParties.reduce((sum, party) => sum + (simulation[party] || 0), 0);\n    if (blocATotal > blocBTotal) successCount++;\n  }\n  \n  return successCount / simulationData.length;\n}\n\n// Format probability as percentage\nexport function formatProbabilityPercent(probability: number): string {\n  return `${Math.round(probability * 100)}%`;\n}"],"names":[],"mappings":";;;;;;;;;;AAGO,SAAS,iCACd,cAA0B,EAC1B,WAAqB,EACrB,SAAiB;IAEjB,IAAI,CAAC,kBAAkB,eAAe,MAAM,KAAK,GAAG,OAAO;IAE3D,IAAI,eAAe;IACnB,KAAK,MAAM,cAAc,eAAgB;QACvC,MAAM,YAAY,YAAY,MAAM,CAAC,CAAC,KAAK,QAAU,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,GAAG;QACrF,IAAI,aAAa,WAAW;IAC9B;IAEA,OAAO,eAAe,eAAe,MAAM;AAC7C;AAGO,SAAS,mCACd,cAA0B,EAC1B,WAAmB,EACnB,iBAA2B;IAE3B,IAAI,CAAC,kBAAkB,eAAe,MAAM,KAAK,GAAG,OAAO;IAE3D,IAAI,eAAe;IACnB,KAAK,MAAM,cAAc,eAAgB;QACvC,MAAM,cAAc,UAAU,CAAC,YAAY,IAAI;QAC/C,MAAM,YAAY,kBAAkB,KAAK,CAAC,CAAA,aACxC,cAAc,CAAC,UAAU,CAAC,WAAW,IAAI,CAAC;QAE5C,IAAI,WAAW;IACjB;IAEA,OAAO,eAAe,eAAe,MAAM;AAC7C;AAGO,SAAS,0CACd,cAA0B,EAC1B,YAAsB,EACtB,YAAsB;IAEtB,IAAI,CAAC,kBAAkB,eAAe,MAAM,KAAK,GAAG,OAAO;IAE3D,IAAI,eAAe;IACnB,KAAK,MAAM,cAAc,eAAgB;QACvC,MAAM,aAAa,aAAa,MAAM,CAAC,CAAC,KAAK,QAAU,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,GAAG;QACvF,MAAM,aAAa,aAAa,MAAM,CAAC,CAAC,KAAK,QAAU,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,GAAG;QACvF,IAAI,aAAa,YAAY;IAC/B;IAEA,OAAO,eAAe,eAAe,MAAM;AAC7C;AAGO,SAAS,yBAAyB,WAAmB;IAC1D,OAAO,GAAG,KAAK,KAAK,CAAC,cAAc,KAAK,CAAC,CAAC;AAC5C","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/lib/config/blocs.ts"],"sourcesContent":["export const leftBlocParties = [\"PS\", \"BE\", \"CDU\", \"L\"];\nexport const rightBlocParties = [\"AD\", \"IL\"];\nexport const majorityThreshold = 116;\n\nexport const rightPlusParties = [\"AD\", \"IL\"];\nexport const leftPlusScenarioParties = [\"PS\", \"L\", \"PAN\", \"BE\", \"CDU\"];"],"names":[],"mappings":";;;;;;;;;;;;AAAO,MAAM,kBAAkB;IAAC;IAAM;IAAM;IAAO;CAAI;AAChD,MAAM,mBAAmB;IAAC;IAAM;CAAK;AACrC,MAAM,oBAAoB;AAE1B,MAAM,mBAAmB;IAAC;IAAM;CAAK;AACrC,MAAM,0BAA0B;IAAC;IAAM;IAAK;IAAO;IAAM;CAAM","debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/lib/config/colors.ts"],"sourcesContent":["export const partyColors = {\n  \"AD\": \"#FF8C00\",  // Dark Orange\n  \"PS\": \"#E57373\",  // Muted Pink\n  \"CH\": \"#377EB8\",  // Blue\n  \"IL\": \"#A6CEE3\",  // Light Blue \n  \"BE\": \"#000000\",  // Black\n  \"CDU\": \"#E41A1C\", // Red\n  \"L\":  \"#90EE90\",  // Light Green\n  \"PAN\": \"#4CAF50\", // Green for PAN\n  \"OTH\": \"#A65628\"  // Brown\n};\n\nexport const partyOrder = [\"AD\", \"PS\", \"CH\", \"IL\", \"BE\", \"CDU\", \"L\", \"PAN\", \"OTH\"];\n\nexport const partyNames = {\n  \"AD\": \"Aliança Democrática\",\n  \"PS\": \"Partido Socialista\", \n  \"CH\": \"Chega\",\n  \"IL\": \"Iniciativa Liberal\",\n  \"BE\": \"Bloco de Esquerda\",\n  \"CDU\": \"CDU\",\n  \"L\": \"Livre\",\n  \"PAN\": \"PAN\",\n  \"OTH\": \"Others\"\n};"],"names":[],"mappings":";;;;;;;;AAAO,MAAM,cAAc;IACzB,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,OAAO;IACP,KAAM;IACN,OAAO;IACP,OAAO,UAAW,QAAQ;AAC5B;AAEO,MAAM,aAAa;IAAC;IAAM;IAAM;IAAM;IAAM;IAAM;IAAO;IAAK;IAAO;CAAM;AAE3E,MAAM,aAAa;IACxB,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,OAAO;IACP,KAAK;IACL,OAAO;IACP,OAAO;AACT","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/lib/utils/data-loader.ts"],"sourcesContent":["import { promises as fs } from 'fs';\nimport path from 'path';\nimport { SeatData, TrendData, DistrictForecast, ContestedSeat } from '@/types';\n\n// Load data from the public directory\nexport async function loadJsonData<T>(filename: string): Promise<T> {\n  const filePath = path.join(process.cwd(), 'public', 'data', filename);\n  const fileContents = await fs.readFile(filePath, 'utf8');\n  return JSON.parse(fileContents);\n}\n\nexport async function loadForecastData() {\n  try {\n    const [seatData, nationalTrends, districtForecast, contestedSeats, houseEffects] = await Promise.all([\n      loadJsonData<SeatData[]>('seat_forecast_simulations.json'),\n      loadJsonData<TrendData[]>('national_trends.json'),\n      loadJsonData<any[]>('district_forecast.json'),\n      loadJsonData<any>('contested_summary.json'),\n      loadJsonData<any[]>('house_effects.json').catch(() => [])\n    ]);\n\n    return {\n      seatData,\n      nationalTrends, \n      districtForecast,\n      contestedSeats,\n      houseEffects\n    };\n  } catch (error) {\n    console.error('Error loading forecast data:', error);\n    return {\n      seatData: [] as SeatData[],\n      nationalTrends: [] as TrendData[],\n      districtForecast: [] as any[],\n      contestedSeats: {} as any,\n      houseEffects: [] as any[]\n    };\n  }\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAIO,eAAe,aAAgB,QAAgB;IACpD,MAAM,WAAW,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU,QAAQ;IAC5D,MAAM,eAAe,MAAM,yGAAE,CAAC,QAAQ,CAAC,UAAU;IACjD,OAAO,KAAK,KAAK,CAAC;AACpB;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,CAAC,UAAU,gBAAgB,kBAAkB,gBAAgB,aAAa,GAAG,MAAM,QAAQ,GAAG,CAAC;YACnG,aAAyB;YACzB,aAA0B;YAC1B,aAAoB;YACpB,aAAkB;YAClB,aAAoB,sBAAsB,KAAK,CAAC,IAAM,EAAE;SACzD;QAED,OAAO;YACL;YACA;YACA;YACA;YACA;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO;YACL,UAAU,EAAE;YACZ,gBAAgB,EAAE;YAClB,kBAAkB,EAAE;YACpB,gBAAgB,CAAC;YACjB,cAAc,EAAE;QAClB;IACF;AACF","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/PollingChart.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const PollingChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call PollingChart() from the server but PollingChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/PollingChart.tsx <module evaluation>\",\n    \"PollingChart\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,wEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/PollingChart.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const PollingChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call PollingChart() from the server but PollingChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/PollingChart.tsx\",\n    \"PollingChart\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,oDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/SeatChart.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const SeatChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call SeatChart() from the server but SeatChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/SeatChart.tsx <module evaluation>\",\n    \"SeatChart\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,qEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/SeatChart.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const SeatChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call SeatChart() from the server but SeatChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/SeatChart.tsx\",\n    \"SeatChart\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,iDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/DistrictSummary.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DistrictSummary = registerClientReference(\n    function() { throw new Error(\"Attempted to call DistrictSummary() from the server but DistrictSummary is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/DistrictSummary.tsx <module evaluation>\",\n    \"DistrictSummary\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/DistrictSummary.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DistrictSummary = registerClientReference(\n    function() { throw new Error(\"Attempted to call DistrictSummary() from the server but DistrictSummary is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/DistrictSummary.tsx\",\n    \"DistrictSummary\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,uDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/HouseEffects.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const HouseEffects = registerClientReference(\n    function() { throw new Error(\"Attempted to call HouseEffects() from the server but HouseEffects is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/HouseEffects.tsx <module evaluation>\",\n    \"HouseEffects\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,wEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/HouseEffects.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const HouseEffects = registerClientReference(\n    function() { throw new Error(\"Attempted to call HouseEffects() from the server but HouseEffects is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/HouseEffects.tsx\",\n    \"HouseEffects\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,oDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/CoalitionDotPlot.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const CoalitionDotPlot = registerClientReference(\n    function() { throw new Error(\"Attempted to call CoalitionDotPlot() from the server but CoalitionDotPlot is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/CoalitionDotPlot.tsx <module evaluation>\",\n    \"CoalitionDotPlot\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,4EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/CoalitionDotPlot.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const CoalitionDotPlot = registerClientReference(\n    function() { throw new Error(\"Attempted to call CoalitionDotPlot() from the server but CoalitionDotPlot is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/CoalitionDotPlot.tsx\",\n    \"CoalitionDotPlot\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,wDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/Header.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Header = registerClientReference(\n    function() { throw new Error(\"Attempted to call Header() from the server but Header is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Header.tsx <module evaluation>\",\n    \"Header\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,SAAS,IAAA,wQAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,2DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/Header.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Header = registerClientReference(\n    function() { throw new Error(\"Attempted to call Header() from the server but Header is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Header.tsx\",\n    \"Header\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,SAAS,IAAA,wQAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,uCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}