{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/lib/config/colors.ts"],"sourcesContent":["export const partyColors = {\n  \"AD\": \"#FF8C00\",  // Dark Orange\n  \"PS\": \"#E57373\",  // Muted Pink\n  \"CH\": \"#377EB8\",  // Blue\n  \"IL\": \"#A6CEE3\",  // Light Blue \n  \"BE\": \"#000000\",  // Black\n  \"CDU\": \"#E41A1C\", // Red\n  \"L\":  \"#90EE90\",  // Light Green\n  \"PAN\": \"#4CAF50\", // Green for PAN\n  \"OTH\": \"#A65628\"  // Brown\n};\n\nexport const partyOrder = [\"AD\", \"PS\", \"CH\", \"IL\", \"BE\", \"CDU\", \"L\", \"PAN\", \"OTH\"];\n\nexport const partyNames = {\n  \"AD\": \"Aliança Democrática\",\n  \"PS\": \"Partido Socialista\", \n  \"CH\": \"Chega\",\n  \"IL\": \"Iniciativa Liberal\",\n  \"BE\": \"Bloco de Esquerda\",\n  \"CDU\": \"CDU\",\n  \"L\": \"Livre\",\n  \"PAN\": \"PAN\",\n  \"OTH\": \"Others\"\n};"],"names":[],"mappings":";;;;;;;;AAAO,MAAM,cAAc;IACzB,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,OAAO;IACP,KAAM;IACN,OAAO;IACP,OAAO,UAAW,QAAQ;AAC5B;AAEO,MAAM,aAAa;IAAC;IAAM;IAAM;IAAM;IAAM;IAAM;IAAO;IAAK;IAAO;CAAM;AAE3E,MAAM,aAAa;IACxB,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,OAAO;IACP,KAAK;IACL,OAAO;IACP,OAAO;AACT","debugId":null}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/PollingChart.tsx"],"sourcesContent":["\"use client\";\n\nimport * as Plot from \"@observablehq/plot\";\nimport { useEffect, useRef } from \"react\";\nimport { partyColors } from \"@/lib/config/colors\";\n\ninterface TrendData {\n  date: string;\n  party: string;\n  metric: string;\n  value: number;\n}\n\ninterface PollingChartProps {\n  data: TrendData[];\n}\n\nexport function PollingChart({ data }: PollingChartProps) {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!data || data.length === 0 || !containerRef.current) return;\n\n    // Get actual container width for truly responsive sizing\n    const containerWidth = containerRef.current.offsetWidth || 900;\n    const containerHeight = 450; // Good height for the space\n\n    // Filter for vote share data only\n    const voteShareData = data.filter(d => d.metric === 'vote_share_mean');\n    \n    // Filter to recent time period - show all parties\n    const cutoffDate = new Date();\n    cutoffDate.setFullYear(cutoffDate.getFullYear() - 2); // Last 2 years only\n    \n    const filteredData = voteShareData.filter(d => new Date(d.date) >= cutoffDate);\n    \n    // Get latest values for all parties\n    const latestData = filteredData\n      .filter(d => {\n        const maxDate = new Date(Math.max(...filteredData.map(dd => new Date(dd.date).getTime())));\n        return new Date(d.date).getTime() === maxDate.getTime();\n      })\n      .sort((a, b) => b.value - a.value);\n    \n    const plot = Plot.plot({\n      width: containerWidth,\n      height: containerHeight,\n      marginLeft: 60,\n      marginRight: 120, // Space for labels\n      marginTop: 20,\n      marginBottom: 50, // Reasonable space for x-axis labels\n      style: {\n        backgroundColor: \"transparent\",\n        fontSize: \"12px\",\n        fontFamily: \"Inter, system-ui, sans-serif\"\n      },\n      x: {\n        type: \"time\",\n        label: null,\n        tickFormat: \"%b %Y\",\n        grid: true,\n        ticks: 4\n      },\n      y: {\n        label: \"Vote share (%)\",\n        domain: [0, 0.5],\n        tickFormat: d => `${(d * 100).toFixed(0)}%`,\n        grid: true\n      },\n      color: {\n        type: \"categorical\",\n        domain: Object.keys(partyColors),\n        range: Object.values(partyColors)\n      },\n      marks: [\n        // Background grid\n        Plot.gridY({ stroke: \"#f3f4f6\", strokeWidth: 1 }),\n        Plot.gridX({ stroke: \"#f3f4f6\", strokeWidth: 1 }),\n        \n        // Lines for each party\n        Plot.line(filteredData, {\n          x: d => new Date(d.date),\n          y: \"value\",\n          stroke: \"party\",\n          strokeWidth: 2.5,\n          curve: \"catmull-rom\"\n        }),\n        \n        // Points for latest values\n        Plot.dot(latestData, {\n          x: d => new Date(d.date),\n          y: \"value\",\n          fill: \"party\",\n          r: 4,\n          stroke: \"white\",\n          strokeWidth: 2\n        }),\n        \n        // Major parties - label at line end\n        Plot.text(latestData.filter(d => d.value > 0.1), {\n          x: d => new Date(d.date),\n          y: \"value\",\n          text: d => `${d.party} ${(d.value * 100).toFixed(1)}%`,\n          fill: \"party\",\n          dx: 8,\n          fontSize: 11,\n          fontWeight: \"600\",\n          textAnchor: \"start\"\n        }),\n        \n        // Minor parties - sorted bottom to top to match visual order\n        Plot.text(latestData.filter(d => d.value <= 0.1).sort((a, b) => a.value - b.value), Plot.dodgeY({\n          x: d => new Date(d.date),\n          y: \"value\",\n          text: d => `${d.party} ${(d.value * 100).toFixed(1)}%`,\n          fill: \"party\",\n          dx: 8,\n          dy: -3, // Move labels slightly up\n          fontSize: 10,\n          fontWeight: \"500\",\n          textAnchor: \"start\",\n          padding: 4 // Increase spacing between dodged labels\n        }))\n      ]\n    });\n\n    if (containerRef.current) {\n      containerRef.current.replaceChildren(plot);\n    }\n\n    return () => plot.remove();\n  }, [data]);\n\n  // Add resize observer for responsive behavior\n  useEffect(() => {\n    if (!containerRef.current) return;\n    \n    const resizeObserver = new ResizeObserver(() => {\n      // Re-render chart when container size changes\n      if (containerRef.current && data && data.length > 0) {\n        // Small delay to ensure container has final dimensions\n        setTimeout(() => {\n          if (!containerRef.current) return;\n          \n          const containerWidth = containerRef.current.offsetWidth || 900;\n          const containerHeight = 450;\n\n          // Filter for vote share data only\n          const voteShareData = data.filter(d => d.metric === 'vote_share_mean');\n          \n          // Filter to recent time period - show all parties\n          const cutoffDate = new Date();\n          cutoffDate.setFullYear(cutoffDate.getFullYear() - 2);\n          \n          const filteredData = voteShareData.filter(d => new Date(d.date) >= cutoffDate);\n          \n          // Get latest values for all parties\n          const latestData = filteredData\n            .filter(d => {\n              const maxDate = new Date(Math.max(...filteredData.map(dd => new Date(dd.date).getTime())));\n              return new Date(d.date).getTime() === maxDate.getTime();\n            })\n            .sort((a, b) => b.value - a.value);\n          \n          const plot = Plot.plot({\n            width: containerWidth,\n            height: containerHeight,\n            marginLeft: 60,\n            marginRight: 120,\n            marginTop: 20,\n            marginBottom: 50,\n            style: {\n              backgroundColor: \"transparent\",\n              fontSize: \"12px\",\n              fontFamily: \"Inter, system-ui, sans-serif\"\n            },\n            x: {\n              type: \"time\",\n              label: null,\n              tickFormat: \"%b %Y\",\n              grid: true,\n              ticks: 4\n            },\n            y: {\n              label: \"Vote share (%)\",\n              domain: [0, 0.5],\n              tickFormat: d => `${(d * 100).toFixed(0)}%`,\n              grid: true\n            },\n            color: {\n              type: \"categorical\",\n              domain: Object.keys(partyColors),\n              range: Object.values(partyColors)\n            },\n            marks: [\n              Plot.gridY({ stroke: \"#f3f4f6\", strokeWidth: 1 }),\n              Plot.gridX({ stroke: \"#f3f4f6\", strokeWidth: 1 }),\n              \n              Plot.line(filteredData, {\n                x: d => new Date(d.date),\n                y: \"value\",\n                stroke: \"party\",\n                strokeWidth: 2.5,\n                curve: \"catmull-rom\"\n              }),\n              \n              Plot.dot(latestData, {\n                x: d => new Date(d.date),\n                y: \"value\",\n                fill: \"party\",\n                r: 4,\n                stroke: \"white\",\n                strokeWidth: 2\n              }),\n              \n              Plot.text(latestData.filter(d => d.value > 0.1), {\n                x: d => new Date(d.date),\n                y: \"value\",\n                text: d => `${d.party} ${(d.value * 100).toFixed(1)}%`,\n                fill: \"party\",\n                dx: 8,\n                fontSize: 11,\n                fontWeight: \"600\",\n                textAnchor: \"start\"\n              }),\n              \n              Plot.text(latestData.filter(d => d.value <= 0.1).sort((a, b) => a.value - b.value), Plot.dodgeY({\n                x: d => new Date(d.date),\n                y: \"value\",\n                text: d => `${d.party} ${(d.value * 100).toFixed(1)}%`,\n                fill: \"party\",\n                dx: 8,\n                dy: -3,\n                fontSize: 10,\n                fontWeight: \"500\",\n                textAnchor: \"start\",\n                padding: 4\n              }))\n            ]\n          });\n\n          containerRef.current.replaceChildren(plot);\n        }, 100);\n      }\n    });\n    \n    resizeObserver.observe(containerRef.current);\n    \n    return () => resizeObserver.disconnect();\n  }, [data]);\n\n  return (\n    <div className=\"w-full\">\n      <div ref={containerRef} className=\"overflow-x-auto\" />\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/lib/config/blocs.ts"],"sourcesContent":["export const leftBlocParties = [\"PS\", \"BE\", \"CDU\", \"L\"];\nexport const rightBlocParties = [\"AD\", \"IL\"];\nexport const majorityThreshold = 116;\n\nexport const rightPlusParties = [\"AD\", \"IL\"];\nexport const leftPlusScenarioParties = [\"PS\", \"L\", \"PAN\", \"BE\", \"CDU\"];"],"names":[],"mappings":";;;;;;;;;;;;AAAO,MAAM,kBAAkB;IAAC;IAAM;IAAM;IAAO;CAAI;AAChD,MAAM,mBAAmB;IAAC;IAAM;CAAK;AACrC,MAAM,oBAAoB;AAE1B,MAAM,mBAAmB;IAAC;IAAM;CAAK;AACrC,MAAM,0BAA0B;IAAC;IAAM;IAAK;IAAO;IAAM;CAAM","debugId":null}},
    {"offset": {"line": 373, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/CoalitionDotPlot.tsx"],"sourcesContent":["\"use client\";\n\nimport * as Plot from \"@observablehq/plot\";\nimport * as d3 from \"d3\";\nimport { useEffect, useRef } from \"react\";\nimport { leftBlocParties, rightBlocParties, majorityThreshold } from \"@/lib/config/blocs\";\n\ninterface SeatData {\n  [party: string]: number;\n}\n\ninterface CoalitionDotPlotProps {\n  data: SeatData[];\n}\n\nexport function CoalitionDotPlot({ data }: CoalitionDotPlotProps) {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!data || data.length === 0 || !containerRef.current) {\n      console.log(\"CoalitionDotPlot: No data available\");\n      return;\n    }\n    \n    // Get actual container width for responsive sizing\n    const containerWidth = containerRef.current.offsetWidth || 1000;\n    const containerHeight = 350;\n    \n    console.log(`CoalitionDotPlot: Processing ${data.length} data points, container width: ${containerWidth}`);\n    console.log('First 3 data points:', data.slice(0, 3));\n\n    // Calculate coalition seats for each simulation\n    const blocDrawData = data.flatMap((simulation, index) => {\n      const leftSeats = leftBlocParties.reduce((sum, party) => sum + (simulation[party] || 0), 0);\n      const rightSeats = rightBlocParties.reduce((sum, party) => sum + (simulation[party] || 0), 0);\n      \n      return [\n        { draw: index, bloc: \"Left coalition\", totalSeats: leftSeats },\n        { draw: index, bloc: \"Right coalition\", totalSeats: rightSeats }\n      ];\n    });\n\n    // Calculate medians\n    const blocMedians = Array.from(\n      d3.rollup(blocDrawData, v => d3.median(v, d => d.totalSeats), d => d.bloc),\n      ([bloc, medianSeats]) => ({ bloc, medianSeats })\n    );\n\n    // Sample data for performance - increase for better density\n    const sampleSize = Math.min(1600, blocDrawData.length);\n    const sampledData = d3.shuffle(blocDrawData.slice()).slice(0, sampleSize);\n    \n    console.log(`CoalitionDotPlot: ${blocDrawData.length} coalition data points, sampling ${sampledData.length}`);\n    console.log('Sample of blocDrawData:', blocDrawData.slice(0, 5));\n    console.log('Sample of sampledData:', sampledData.slice(0, 5));\n    console.log('Bloc medians:', blocMedians);\n\n    const plot = Plot.plot({\n      width: containerWidth,\n      height: containerHeight,\n      marginLeft: 140,\n      marginRight: 60,\n      marginTop: 30,\n      marginBottom: 50,\n      style: {\n        backgroundColor: \"transparent\",\n        fontSize: \"12px\",\n        fontFamily: \"Inter, system-ui, sans-serif\"\n      },\n      x: {\n        label: \"Projected seats\",\n        domain: [40, 140],\n        grid: true,\n        ticks: [50, 75, 100, majorityThreshold, 125]\n      },\n      fy: {\n        domain: [\"Left coalition\", \"Right coalition\"],\n        label: null,\n        axis: \"left\",\n        padding: 0.1\n      },\n      color: {\n        domain: [\"Left coalition\", \"Right coalition\"],\n        range: [\"#10b981\", \"#f59e0b\"]\n      },\n      marks: [\n        // Majority line (spans across facets)\n        Plot.ruleX([majorityThreshold], { \n          stroke: \"#dc2626\", \n          strokeWidth: 2, \n          strokeDasharray: \"4,2\",\n          facet: \"exclude\"\n        }),\n        \n        // Dodged dots with slight horizontal jitter\n        Plot.dotX(sampledData, Plot.dodgeY({\n          x: d => d.totalSeats + (Math.random() - 0.5) * 1.5, // Add small horizontal jitter\n          fy: \"bloc\",\n          fill: \"bloc\",\n          fillOpacity: 0.7,\n          r: 1.2,\n          anchor: \"middle\"\n        })),\n        \n        // Median lines\n        Plot.ruleX(blocMedians, {\n          x: \"medianSeats\",\n          fy: \"bloc\",\n          stroke: \"black\",\n          strokeWidth: 2,\n          strokeDasharray: \"2,2\"\n        }),\n        \n        // Median labels\n        Plot.text(blocMedians, {\n          x: \"medianSeats\",\n          fy: \"bloc\",\n          text: d => Math.round(d.medianSeats).toString(),\n          dy: -8,\n          dx: 5,\n          fontSize: 11,\n          fontWeight: \"bold\",\n          fill: \"black\"\n        }),\n        \n        // Majority label\n        Plot.text([{ x: majorityThreshold, fy: \"Left coalition\" }], {\n          x: \"x\",\n          fy: \"fy\",\n          text: `Majority (${majorityThreshold})`,\n          dx: 5,\n          dy: -10,\n          fontSize: 11,\n          fill: \"#dc2626\",\n          fontWeight: \"600\"\n        })\n      ]\n    });\n\n    if (containerRef.current) {\n      containerRef.current.replaceChildren(plot);\n    }\n\n    return () => plot.remove();\n  }, [data]);\n\n  // Add resize observer for responsive behavior\n  useEffect(() => {\n    if (!containerRef.current) return;\n    \n    const resizeObserver = new ResizeObserver(() => {\n      // Re-render chart when container size changes\n      if (containerRef.current && data && data.length > 0) {\n        // Small delay to ensure container has final dimensions\n        setTimeout(() => {\n          if (!containerRef.current) return;\n          \n          const containerWidth = containerRef.current.offsetWidth || 1000;\n          const containerHeight = 350;\n\n          // Calculate coalition seats for each simulation\n          const blocDrawData = data.flatMap((simulation, index) => {\n            const leftSeats = leftBlocParties.reduce((sum, party) => sum + (simulation[party] || 0), 0);\n            const rightSeats = rightBlocParties.reduce((sum, party) => sum + (simulation[party] || 0), 0);\n            \n            return [\n              { draw: index, bloc: \"Left coalition\", totalSeats: leftSeats },\n              { draw: index, bloc: \"Right coalition\", totalSeats: rightSeats }\n            ];\n          });\n\n          // Calculate medians\n          const blocMedians = Array.from(\n            d3.rollup(blocDrawData, v => d3.median(v, d => d.totalSeats), d => d.bloc),\n            ([bloc, medianSeats]) => ({ bloc, medianSeats })\n          );\n\n          // Sample data for performance\n          const sampleSize = Math.min(1600, blocDrawData.length);\n          const sampledData = d3.shuffle(blocDrawData.slice()).slice(0, sampleSize);\n\n          const plot = Plot.plot({\n            width: containerWidth,\n            height: containerHeight,\n            marginLeft: 140,\n            marginRight: 60,\n            marginTop: 30,\n            marginBottom: 50,\n            style: {\n              backgroundColor: \"transparent\",\n              fontSize: \"12px\",\n              fontFamily: \"Inter, system-ui, sans-serif\"\n            },\n            x: {\n              label: \"Projected seats\",\n              domain: [40, 140],\n              grid: true,\n              ticks: [50, 75, 100, majorityThreshold, 125]\n            },\n            fy: {\n              domain: [\"Left coalition\", \"Right coalition\"],\n              label: null,\n              axis: \"left\",\n              padding: 0.1\n            },\n            color: {\n              domain: [\"Left coalition\", \"Right coalition\"],\n              range: [\"#10b981\", \"#f59e0b\"]\n            },\n            marks: [\n              // Majority line (spans across facets)\n              Plot.ruleX([majorityThreshold], { \n                stroke: \"#dc2626\", \n                strokeWidth: 2, \n                strokeDasharray: \"4,2\",\n                facet: \"exclude\"\n              }),\n              \n              // Dodged dots with slight horizontal jitter\n              Plot.dotX(sampledData, Plot.dodgeY({\n                x: d => d.totalSeats + (Math.random() - 0.5) * 1.5, // Add small horizontal jitter\n                fy: \"bloc\",\n                fill: \"bloc\",\n                fillOpacity: 0.7,\n                r: 1.2,\n                anchor: \"middle\"\n              })),\n              \n              // Median lines\n              Plot.ruleX(blocMedians, {\n                x: \"medianSeats\",\n                fy: \"bloc\",\n                stroke: \"black\",\n                strokeWidth: 2,\n                strokeDasharray: \"2,2\"\n              }),\n              \n              // Median labels\n              Plot.text(blocMedians, {\n                x: \"medianSeats\",\n                fy: \"bloc\",\n                text: d => Math.round(d.medianSeats).toString(),\n                dy: -8,\n                dx: 5,\n                fontSize: 11,\n                fontWeight: \"bold\",\n                fill: \"black\"\n              }),\n              \n              // Majority label\n              Plot.text([{ x: majorityThreshold, fy: \"Left coalition\" }], {\n                x: \"x\",\n                fy: \"fy\",\n                text: `Majority (${majorityThreshold})`,\n                dx: 5,\n                dy: -10,\n                fontSize: 11,\n                fill: \"#dc2626\",\n                fontWeight: \"600\"\n              })\n            ]\n          });\n\n          containerRef.current.replaceChildren(plot);\n        }, 100);\n      }\n    });\n    \n    resizeObserver.observe(containerRef.current);\n    \n    return () => resizeObserver.disconnect();\n  }, [data]);\n\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"w-full h-64 flex items-center justify-center text-gray-500\">\n        <p>Loading coalition data...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <div ref={containerRef} className=\"overflow-x-auto\" />\n      <div className=\"text-xs text-gray-500 mt-2\">\n        Showing {data.length} simulation outcomes\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 743, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/i18n/routing.ts"],"sourcesContent":["import {createLocalizedPathnamesNavigation} from 'next-intl/navigation';\n \nexport const locales = ['en', 'pt'] as const;\nexport const defaultLocale = 'pt' as const;\n\n// Define the pathnames for each locale\nexport const pathnames = {\n  '/': '/',\n  '/forecast': '/forecast',\n  '/about': '/about', \n  '/articles': '/articles',\n  '/methodology': '/methodology'\n} as const;\n\nexport const {Link, redirect, usePathname, useRouter} =\n  createLocalizedPathnamesNavigation({\n    locales,\n    pathnames,\n    defaultLocale\n  });"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;;AAEO,MAAM,UAAU;IAAC;IAAM;CAAK;AAC5B,MAAM,gBAAgB;AAGtB,MAAM,YAAY;IACvB,KAAK;IACL,aAAa;IACb,UAAU;IACV,aAAa;IACb,gBAAgB;AAClB;AAEO,MAAM,EAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAC,GACnD,IAAA,iOAAkC,EAAC;IACjC;IACA;IACA;AACF","debugId":null}},
    {"offset": {"line": 782, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/Header.tsx"],"sourcesContent":["'use client';\n\nimport { useTranslations, useLocale } from 'next-intl';\nimport { Link, usePathname } from '@/i18n/routing';\nimport { Calendar, Globe } from \"lucide-react\";\n\ninterface HeaderProps {\n  lastUpdate?: string;\n}\n\nexport function Header({ lastUpdate }: HeaderProps) {\n  const t = useTranslations();\n  const locale = useLocale();\n  const pathname = usePathname();\n\n  const getPageTitle = () => {\n    if (pathname === '/forecast') return t('forecast.title');\n    if (pathname === '/about') return t('about.title');\n    if (pathname === '/articles') return t('articles.title');\n    if (pathname === '/methodology') return t('methodology.title');\n    return '';\n  };\n\n  const navigationItems = [\n    { href: '/', label: t('nav.home') },\n    { href: '/forecast', label: t('nav.forecast') },\n    { href: '/articles', label: t('nav.analysis') },\n    { href: '/about', label: t('nav.about') },\n  ];\n\n  return (\n    <header className=\"border-b border-green-medium bg-green-pale sticky top-0 z-50\">\n      <div className=\"max-w-7xl mx-auto px-4 py-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-4\">\n            <div>\n              <Link href=\"/\" className=\"text-2xl font-bold text-green-dark hover:text-green-medium\">\n                estimador.pt\n              </Link>\n              <p className=\"text-sm text-green-dark/70\">{t('homepage.tagline')}</p>\n            </div>\n            {pathname !== '/' && (\n              <div className=\"border-l border-green-medium pl-4\">\n                <h1 className=\"text-xl font-bold text-green-dark\">{getPageTitle()}</h1>\n                {pathname === '/forecast' && (\n                  <p className=\"text-sm text-green-dark/70\">{t('forecast.subtitle')}</p>\n                )}\n              </div>\n            )}\n          </div>\n          \n          <div className=\"flex items-center gap-6\">\n            <nav className=\"hidden md:flex gap-6\">\n              {navigationItems.map((item) => (\n                <Link\n                  key={item.href}\n                  href={item.href}\n                  className={`font-medium transition-colors ${\n                    pathname === item.href\n                      ? 'text-green-dark'\n                      : 'text-green-dark/70 hover:text-green-dark'\n                  }`}\n                >\n                  {item.label}\n                </Link>\n              ))}\n            </nav>\n            \n            <div className=\"flex items-center gap-4\">\n              {/* Language Switcher */}\n              <div className=\"flex items-center gap-2\">\n                <Globe className=\"w-4 h-4 text-green-dark/70\" />\n                <select \n                  value={locale}\n                  onChange={(e) => {\n                    const newLocale = e.target.value;\n                    // This will be handled by next-intl routing\n                    window.location.href = `/${newLocale}${pathname === '/' ? '' : pathname}`;\n                  }}\n                  className=\"text-sm text-green-dark/70 bg-transparent border-none focus:outline-none cursor-pointer\"\n                >\n                  <option value=\"pt\">PT</option>\n                  <option value=\"en\">EN</option>\n                </select>\n              </div>\n              \n              {lastUpdate && (\n                <div className=\"flex items-center gap-1 text-xs text-green-dark/70\">\n                  <Calendar className=\"w-3 h-3\" />\n                  <span>{t('common.updated')} {lastUpdate}</span>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AAAA;AACA;AACA;AAAA;AAJA;;;;;AAUO,SAAS,OAAO,EAAE,UAAU,EAAe;IAChD,MAAM,IAAI,IAAA,yNAAe;IACzB,MAAM,SAAS,IAAA,+KAAS;IACxB,MAAM,WAAW,IAAA,qIAAW;IAE5B,MAAM,eAAe;QACnB,IAAI,aAAa,aAAa,OAAO,EAAE;QACvC,IAAI,aAAa,UAAU,OAAO,EAAE;QACpC,IAAI,aAAa,aAAa,OAAO,EAAE;QACvC,IAAI,aAAa,gBAAgB,OAAO,EAAE;QAC1C,OAAO;IACT;IAEA,MAAM,kBAAkB;QACtB;YAAE,MAAM;YAAK,OAAO,EAAE;QAAY;QAClC;YAAE,MAAM;YAAa,OAAO,EAAE;QAAgB;QAC9C;YAAE,MAAM;YAAa,OAAO,EAAE;QAAgB;QAC9C;YAAE,MAAM;YAAU,OAAO,EAAE;QAAa;KACzC;IAED,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC,8HAAI;wCAAC,MAAK;wCAAI,WAAU;kDAA6D;;;;;;kDAGtF,8OAAC;wCAAE,WAAU;kDAA8B,EAAE;;;;;;;;;;;;4BAE9C,aAAa,qBACZ,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAG,WAAU;kDAAqC;;;;;;oCAClD,aAAa,6BACZ,8OAAC;wCAAE,WAAU;kDAA8B,EAAE;;;;;;;;;;;;;;;;;;kCAMrD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACZ,gBAAgB,GAAG,CAAC,CAAC,qBACpB,8OAAC,8HAAI;wCAEH,MAAM,KAAK,IAAI;wCACf,WAAW,CAAC,8BAA8B,EACxC,aAAa,KAAK,IAAI,GAClB,oBACA,4CACJ;kDAED,KAAK,KAAK;uCARN,KAAK,IAAI;;;;;;;;;;0CAapB,8OAAC;gCAAI,WAAU;;kDAEb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,6MAAK;gDAAC,WAAU;;;;;;0DACjB,8OAAC;gDACC,OAAO;gDACP,UAAU,CAAC;oDACT,MAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oDAChC,4CAA4C;oDAC5C,OAAO,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,YAAY,aAAa,MAAM,KAAK,UAAU;gDAC3E;gDACA,WAAU;;kEAEV,8OAAC;wDAAO,OAAM;kEAAK;;;;;;kEACnB,8OAAC;wDAAO,OAAM;kEAAK;;;;;;;;;;;;;;;;;;oCAItB,4BACC,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,sNAAQ;gDAAC,WAAU;;;;;;0DACpB,8OAAC;;oDAAM,EAAE;oDAAkB;oDAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS/C","debugId":null}}]
}