(globalThis.TURBOPACK || (globalThis.TURBOPACK = [])).push([typeof document === "object" ? document.currentScript : undefined,
"[project]/node_modules/@observablehq/plot/src/defined.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "ascendingDefined",
    ()=>ascendingDefined,
    "defined",
    ()=>defined,
    "descendingDefined",
    ()=>descendingDefined,
    "finite",
    ()=>finite,
    "negative",
    ()=>negative,
    "nonempty",
    ()=>nonempty,
    "positive",
    ()=>positive
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$ascending$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ascending$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/ascending.js [app-client] (ecmascript) <export default as ascending>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$descending$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__descending$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/descending.js [app-client] (ecmascript) <export default as descending>");
;
function defined(x) {
    return x != null && !Number.isNaN(x);
}
function ascendingDefined(a, b) {
    return +defined(b) - +defined(a) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$ascending$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ascending$3e$__["ascending"])(a, b);
}
function descendingDefined(a, b) {
    return +defined(b) - +defined(a) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$descending$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__descending$3e$__["descending"])(a, b);
}
function nonempty(x) {
    return x != null && "".concat(x) !== "";
}
function finite(x) {
    return isFinite(x) ? x : NaN;
}
function positive(x) {
    return x > 0 && isFinite(x) ? x : NaN;
}
function negative(x) {
    return x < 0 && isFinite(x) ? x : NaN;
}
}),
"[project]/node_modules/@observablehq/plot/src/order.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "orderof",
    ()=>orderof
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$descending$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__descending$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/descending.js [app-client] (ecmascript) <export default as descending>");
;
function orderof(values) {
    if (values == null) return;
    const first = values[0];
    const last = values[values.length - 1];
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$descending$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__descending$3e$__["descending"])(first, last);
}
}),
"[project]/node_modules/@observablehq/plot/src/time.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "generalizeTimeInterval",
    ()=>generalizeTimeInterval,
    "inferTimeFormat",
    ()=>inferTimeFormat,
    "intervalDuration",
    ()=>intervalDuration,
    "intervalType",
    ()=>intervalType,
    "parseTimeInterval",
    ()=>parseTimeInterval,
    "timeInterval",
    ()=>timeInterval,
    "utcInterval",
    ()=>utcInterval
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$bisector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__bisector$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/bisector.js [app-client] (ecmascript) <export default as bisector>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/max.js [app-client] (ecmascript) <export default as max>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$pairs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__pairs$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/pairs.js [app-client] (ecmascript) <export default as pairs>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2d$format$2f$src$2f$defaultLocale$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-time-format/src/defaultLocale.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$second$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__second__as__utcSecond$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-time/src/second.js [app-client] (ecmascript) <export second as utcSecond>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$minute$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-time/src/minute.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$hour$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-time/src/hour.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$day$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-time/src/day.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$week$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__utcSunday__as__utcWeek$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-time/src/week.js [app-client] (ecmascript) <export utcSunday as utcWeek>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$month$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-time/src/month.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$year$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-time/src/year.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$week$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-time/src/week.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$second$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__second__as__timeSecond$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-time/src/second.js [app-client] (ecmascript) <export second as timeSecond>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$week$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__timeSunday__as__timeWeek$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-time/src/week.js [app-client] (ecmascript) <export timeSunday as timeWeek>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/order.js [app-client] (ecmascript)");
;
;
;
;
;
;
const durationSecond = 1000;
const durationMinute = durationSecond * 60;
const durationHour = durationMinute * 60;
const durationDay = durationHour * 24;
const durationWeek = durationDay * 7;
const durationMonth = durationDay * 30;
const durationYear = durationDay * 365;
// See https://github.com/d3/d3-time/blob/9e8dc940f38f78d7588aad68a54a25b1f0c2d97b/src/ticks.js#L14-L33
const tickIntervals = [
    [
        "millisecond",
        1
    ],
    [
        "2 milliseconds",
        2
    ],
    [
        "5 milliseconds",
        5
    ],
    [
        "10 milliseconds",
        10
    ],
    [
        "20 milliseconds",
        20
    ],
    [
        "50 milliseconds",
        50
    ],
    [
        "100 milliseconds",
        100
    ],
    [
        "200 milliseconds",
        200
    ],
    [
        "500 milliseconds",
        500
    ],
    [
        "second",
        durationSecond
    ],
    [
        "5 seconds",
        5 * durationSecond
    ],
    [
        "15 seconds",
        15 * durationSecond
    ],
    [
        "30 seconds",
        30 * durationSecond
    ],
    [
        "minute",
        durationMinute
    ],
    [
        "5 minutes",
        5 * durationMinute
    ],
    [
        "15 minutes",
        15 * durationMinute
    ],
    [
        "30 minutes",
        30 * durationMinute
    ],
    [
        "hour",
        durationHour
    ],
    [
        "3 hours",
        3 * durationHour
    ],
    [
        "6 hours",
        6 * durationHour
    ],
    [
        "12 hours",
        12 * durationHour
    ],
    [
        "day",
        durationDay
    ],
    [
        "2 days",
        2 * durationDay
    ],
    [
        "week",
        durationWeek
    ],
    [
        "2 weeks",
        2 * durationWeek
    ],
    [
        "month",
        durationMonth
    ],
    [
        "3 months",
        3 * durationMonth
    ],
    [
        "6 months",
        6 * durationMonth
    ],
    [
        "year",
        durationYear
    ],
    [
        "2 years",
        2 * durationYear
    ],
    [
        "5 years",
        5 * durationYear
    ],
    [
        "10 years",
        10 * durationYear
    ],
    [
        "20 years",
        20 * durationYear
    ],
    [
        "50 years",
        50 * durationYear
    ],
    [
        "100 years",
        100 * durationYear
    ] // TODO generalize to longer time scales
];
const durations = new Map([
    [
        "second",
        durationSecond
    ],
    [
        "minute",
        durationMinute
    ],
    [
        "hour",
        durationHour
    ],
    [
        "day",
        durationDay
    ],
    [
        "monday",
        durationWeek
    ],
    [
        "tuesday",
        durationWeek
    ],
    [
        "wednesday",
        durationWeek
    ],
    [
        "thursday",
        durationWeek
    ],
    [
        "friday",
        durationWeek
    ],
    [
        "saturday",
        durationWeek
    ],
    [
        "sunday",
        durationWeek
    ],
    [
        "week",
        durationWeek
    ],
    [
        "month",
        durationMonth
    ],
    [
        "year",
        durationYear
    ]
]);
const timeIntervals = new Map([
    [
        "second",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$second$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__second__as__timeSecond$3e$__["timeSecond"]
    ],
    [
        "minute",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$minute$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["timeMinute"]
    ],
    [
        "hour",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$hour$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["timeHour"]
    ],
    [
        "day",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$day$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["timeDay"]
    ],
    [
        "monday",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$week$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["timeMonday"]
    ],
    [
        "tuesday",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$week$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["timeTuesday"]
    ],
    [
        "wednesday",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$week$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["timeWednesday"]
    ],
    [
        "thursday",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$week$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["timeThursday"]
    ],
    [
        "friday",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$week$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["timeFriday"]
    ],
    [
        "saturday",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$week$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["timeSaturday"]
    ],
    [
        "sunday",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$week$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["timeSunday"]
    ],
    [
        "week",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$week$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__timeSunday__as__timeWeek$3e$__["timeWeek"]
    ],
    [
        "month",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$month$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["timeMonth"]
    ],
    [
        "year",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$year$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["timeYear"]
    ]
]);
const utcIntervals = new Map([
    [
        "second",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$second$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__second__as__utcSecond$3e$__["utcSecond"]
    ],
    [
        "minute",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$minute$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcMinute"]
    ],
    [
        "hour",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$hour$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcHour"]
    ],
    [
        "day",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$day$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["unixDay"]
    ],
    [
        "monday",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$week$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcMonday"]
    ],
    [
        "tuesday",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$week$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcTuesday"]
    ],
    [
        "wednesday",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$week$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcWednesday"]
    ],
    [
        "thursday",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$week$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcThursday"]
    ],
    [
        "friday",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$week$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcFriday"]
    ],
    [
        "saturday",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$week$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcSaturday"]
    ],
    [
        "sunday",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$week$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcSunday"]
    ],
    [
        "week",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$week$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__utcSunday__as__utcWeek$3e$__["utcWeek"]
    ],
    [
        "month",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$month$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcMonth"]
    ],
    [
        "year",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$year$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcYear"]
    ]
]);
const intervalDuration = Symbol("intervalDuration");
const intervalType = Symbol("intervalType");
// We greedily mutate D3’s standard intervals on load so that the hidden fields
// are available even if specified as e.g. d3.utcMonth instead of "month".
for (const [name, interval] of timeIntervals){
    interval[intervalDuration] = durations.get(name);
    interval[intervalType] = "time";
}
for (const [name, interval] of utcIntervals){
    interval[intervalDuration] = durations.get(name);
    interval[intervalType] = "utc";
}
const utcFormatIntervals = [
    [
        "year",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$year$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcYear"],
        "utc"
    ],
    [
        "month",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$month$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcMonth"],
        "utc"
    ],
    [
        "day",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$day$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["unixDay"],
        "utc",
        6 * durationMonth
    ],
    [
        "hour",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$hour$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcHour"],
        "utc",
        3 * durationDay
    ],
    [
        "minute",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$minute$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcMinute"],
        "utc",
        6 * durationHour
    ],
    [
        "second",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$second$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__second__as__utcSecond$3e$__["utcSecond"],
        "utc",
        30 * durationMinute
    ]
];
const timeFormatIntervals = [
    [
        "year",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$year$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["timeYear"],
        "time"
    ],
    [
        "month",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$month$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["timeMonth"],
        "time"
    ],
    [
        "day",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$day$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["timeDay"],
        "time",
        6 * durationMonth
    ],
    [
        "hour",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$hour$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["timeHour"],
        "time",
        3 * durationDay
    ],
    [
        "minute",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$minute$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["timeMinute"],
        "time",
        6 * durationHour
    ],
    [
        "second",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$second$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__second__as__timeSecond$3e$__["timeSecond"],
        "time",
        30 * durationMinute
    ]
];
// An interleaved array of UTC and local time intervals, in descending order
// from largest to smallest, used to determine the most specific standard time
// format for a given array of dates. This is a subset of the tick intervals
// listed above; we only need the breakpoints where the format changes.
const formatIntervals = [
    utcFormatIntervals[0],
    timeFormatIntervals[0],
    utcFormatIntervals[1],
    timeFormatIntervals[1],
    utcFormatIntervals[2],
    timeFormatIntervals[2],
    // Below day, local time typically has an hourly offset from UTC and hence the
    // two are aligned and indistinguishable; therefore, we only consider UTC, and
    // we don’t consider these if the domain only has a single value.
    ...utcFormatIntervals.slice(3)
];
function parseTimeInterval(input) {
    let name = "".concat(input).toLowerCase();
    if (name.endsWith("s")) name = name.slice(0, -1); // drop plural
    let period = 1;
    const match = /^(?:(\d+)\s+)/.exec(name);
    if (match) {
        name = name.slice(match[0].length);
        period = +match[1];
    }
    switch(name){
        case "quarter":
            name = "month";
            period *= 3;
            break;
        case "half":
            name = "month";
            period *= 6;
            break;
    }
    let interval = utcIntervals.get(name);
    if (!interval) throw new Error("unknown interval: ".concat(input));
    if (period > 1 && !interval.every) throw new Error("non-periodic interval: ".concat(name));
    return [
        name,
        period
    ];
}
function timeInterval(input) {
    return asInterval(parseTimeInterval(input), "time");
}
function utcInterval(input) {
    return asInterval(parseTimeInterval(input), "utc");
}
function asInterval(param, type) {
    let [name, period] = param;
    let interval = (type === "time" ? timeIntervals : utcIntervals).get(name);
    if (period > 1) {
        interval = interval.every(period);
        interval[intervalDuration] = durations.get(name) * period;
        interval[intervalType] = type;
    }
    return interval;
}
function generalizeTimeInterval(interval, n) {
    if (!(n > 1)) return; // no need to generalize
    const duration = interval[intervalDuration];
    if (!tickIntervals.some((param)=>{
        let [, d] = param;
        return d === duration;
    })) return; // nonstandard or unknown interval
    if (duration % durationDay === 0 && durationDay < duration && duration < durationMonth) return; // not generalizable
    const [i] = tickIntervals[(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$bisector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__bisector$3e$__["bisector"])((param)=>{
        let [, step] = param;
        return Math.log(step);
    }).center(tickIntervals, Math.log(duration * n))];
    return (interval[intervalType] === "time" ? timeInterval : utcInterval)(i);
}
function formatTimeInterval(name, type, anchor) {
    const format = type === "time" ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2d$format$2f$src$2f$defaultLocale$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["timeFormat"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2d$format$2f$src$2f$defaultLocale$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcFormat"];
    // For tips and legends, use a format that doesn’t require context.
    if (anchor == null) {
        return format(name === "year" ? "%Y" : name === "month" ? "%Y-%m" : name === "day" ? "%Y-%m-%d" : name === "hour" || name === "minute" ? "%Y-%m-%dT%H:%M" : name === "second" ? "%Y-%m-%dT%H:%M:%S" : "%Y-%m-%dT%H:%M:%S.%L");
    }
    // Otherwise, assume that this is for axis ticks.
    const template = getTimeTemplate(anchor);
    switch(name){
        case "millisecond":
            return formatConditional(format(".%L"), format(":%M:%S"), template);
        case "second":
            return formatConditional(format(":%S"), format("%-I:%M"), template);
        case "minute":
            return formatConditional(format("%-I:%M"), format("%p"), template);
        case "hour":
            return formatConditional(format("%-I %p"), format("%b %-d"), template);
        case "day":
            return formatConditional(format("%-d"), format("%b"), template);
        case "month":
            return formatConditional(format("%b"), format("%Y"), template);
        case "year":
            return format("%Y");
    }
    throw new Error("unable to format time ticks");
}
function getTimeTemplate(anchor) {
    return anchor === "left" || anchor === "right" ? (f1, f2)=>"\n".concat(f1, "\n").concat(f2) // extra newline to keep f1 centered
     : anchor === "top" ? (f1, f2)=>"".concat(f2, "\n").concat(f1) : (f1, f2)=>"".concat(f1, "\n").concat(f2);
}
function getFormatIntervals(type) {
    return type === "time" ? timeFormatIntervals : type === "utc" ? utcFormatIntervals : formatIntervals;
}
function inferTimeFormat(type, dates, anchor) {
    const step = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__["max"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$pairs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__pairs$3e$__["pairs"])(dates, (a, b)=>Math.abs(b - a))); // maybe undefined!
    if (step < 1000) return formatTimeInterval("millisecond", "utc", anchor);
    for (const [name, interval, intervalType, maxStep] of getFormatIntervals(type)){
        if (step > maxStep) break; // e.g., 52 weeks
        if (name === "hour" && !step) break; // e.g., domain with a single date
        if (dates.every((d)=>interval.floor(d) >= d)) return formatTimeInterval(name, intervalType, anchor);
    }
}
function formatConditional(format1, format2, template) {
    return (x, i, X)=>{
        const f1 = format1(x, i); // always shown
        const f2 = format2(x, i); // only shown if different
        const j = i - (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["orderof"])(X); // detect reversed domains
        return i !== j && X[j] !== undefined && f2 === format2(X[j], j) ? f1 : template(f1, f2);
    };
}
}),
"[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "TypedArray",
    ()=>TypedArray,
    "arrayify",
    ()=>arrayify,
    "boolean",
    ()=>boolean,
    "coerceDate",
    ()=>coerceDate,
    "coerceDates",
    ()=>coerceDates,
    "coerceNumbers",
    ()=>coerceNumbers,
    "column",
    ()=>column,
    "constant",
    ()=>constant,
    "dataify",
    ()=>dataify,
    "field",
    ()=>field,
    "first",
    ()=>first,
    "hasX",
    ()=>hasX,
    "hasXY",
    ()=>hasXY,
    "hasY",
    ()=>hasY,
    "identity",
    ()=>identity,
    "indexOf",
    ()=>indexOf,
    "inherit",
    ()=>inherit,
    "isArray",
    ()=>isArray,
    "isColor",
    ()=>isColor,
    "isDomainSort",
    ()=>isDomainSort,
    "isEvery",
    ()=>isEvery,
    "isInterval",
    ()=>isInterval,
    "isIterable",
    ()=>isIterable,
    "isNone",
    ()=>isNone,
    "isNoneish",
    ()=>isNoneish,
    "isNumeric",
    ()=>isNumeric,
    "isNumericString",
    ()=>isNumericString,
    "isObject",
    ()=>isObject,
    "isOpacity",
    ()=>isOpacity,
    "isOptions",
    ()=>isOptions,
    "isOrdinal",
    ()=>isOrdinal,
    "isRound",
    ()=>isRound,
    "isScaleOptions",
    ()=>isScaleOptions,
    "isTemporal",
    ()=>isTemporal,
    "isTemporalString",
    ()=>isTemporalString,
    "isTextual",
    ()=>isTextual,
    "isTimeInterval",
    ()=>isTimeInterval,
    "isTuples",
    ()=>isTuples,
    "keyof",
    ()=>keyof,
    "keyword",
    ()=>keyword,
    "labelof",
    ()=>labelof,
    "lengthof",
    ()=>lengthof,
    "map",
    ()=>map,
    "maybeAnchor",
    ()=>maybeAnchor,
    "maybeApplyInterval",
    ()=>maybeApplyInterval,
    "maybeClip",
    ()=>maybeClip,
    "maybeColorChannel",
    ()=>maybeColorChannel,
    "maybeColumn",
    ()=>maybeColumn,
    "maybeFrameAnchor",
    ()=>maybeFrameAnchor,
    "maybeInput",
    ()=>maybeInput,
    "maybeInterval",
    ()=>maybeInterval,
    "maybeIntervalTransform",
    ()=>maybeIntervalTransform,
    "maybeKeyword",
    ()=>maybeKeyword,
    "maybeNamed",
    ()=>maybeNamed,
    "maybeNiceInterval",
    ()=>maybeNiceInterval,
    "maybeNumberChannel",
    ()=>maybeNumberChannel,
    "maybeRangeInterval",
    ()=>maybeRangeInterval,
    "maybeTuple",
    ()=>maybeTuple,
    "maybeValue",
    ()=>maybeValue,
    "maybeZ",
    ()=>maybeZ,
    "maybeZero",
    ()=>maybeZero,
    "mid",
    ()=>mid,
    "named",
    ()=>named,
    "number",
    ()=>number,
    "numberChannel",
    ()=>numberChannel,
    "numberInterval",
    ()=>numberInterval,
    "one",
    ()=>one,
    "percentile",
    ()=>percentile,
    "range",
    ()=>range,
    "reindex",
    ()=>reindex,
    "second",
    ()=>second,
    "singleton",
    ()=>singleton,
    "slice",
    ()=>slice,
    "string",
    ()=>string,
    "subarray",
    ()=>subarray,
    "take",
    ()=>take,
    "taker",
    ()=>taker,
    "third",
    ()=>third,
    "valueof",
    ()=>valueof,
    "yes",
    ()=>yes,
    "zero",
    ()=>zero
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$quantile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantile$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/quantile.js [app-client] (ecmascript) <export default as quantile>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$range$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__range$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/range.js [app-client] (ecmascript) <export default as range>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$isoformat$2f$src$2f$parse$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__parse$3e$__ = __turbopack_context__.i("[project]/node_modules/isoformat/src/parse.js [app-client] (ecmascript) <export default as parse>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/defined.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$time$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/time.js [app-client] (ecmascript)");
;
;
;
;
const TypedArray = Object.getPrototypeOf(Uint8Array);
const objectToString = Object.prototype.toString;
function isArray(value) {
    return value instanceof Array || value instanceof TypedArray;
}
function isNumberArray(value) {
    return value instanceof TypedArray && !isBigIntArray(value);
}
function isNumberType(type) {
    return (type === null || type === void 0 ? void 0 : type.prototype) instanceof TypedArray && !isBigIntType(type);
}
function isBigIntArray(value) {
    return value instanceof BigInt64Array || value instanceof BigUint64Array;
}
function isBigIntType(type) {
    return type === BigInt64Array || type === BigUint64Array;
}
const reindex = Symbol("reindex");
function valueof(data, value, type) {
    const valueType = typeof value;
    return valueType === "string" ? isArrowTable(data) ? maybeTypedArrowify(data.getChild(value), type) : maybeTypedMap(data, field(value), type) : valueType === "function" ? maybeTypedMap(data, value, type) : valueType === "number" || value instanceof Date || valueType === "boolean" ? map(data, constant(value), type) : typeof (value === null || value === void 0 ? void 0 : value.transform) === "function" ? maybeTypedArrayify(value.transform(data), type) : maybeTake(maybeTypedArrayify(value, type), data === null || data === void 0 ? void 0 : data[reindex]);
}
function maybeTake(values, index) {
    return values != null && index ? take(values, index) : values;
}
function maybeTypedMap(data, f, type) {
    return map(data, isNumberType(type) ? (d, i)=>coerceNumber(f(d, i)) : f, type); // allow conversion from BigInt
}
function maybeTypedArrayify(data, type) {
    return type === undefined ? arrayify(data) // preserve undefined type
     : isArrowVector(data) ? maybeTypedArrowify(data, type) : data instanceof type ? data : type.from(data, isNumberType(type) && !isNumberArray(data) ? coerceNumber : undefined);
}
function maybeTypedArrowify(vector, type) {
    return vector == null ? vector : (type === undefined || type === Array) && isArrowDateType(vector.type) ? coerceDates(vectorToArray(vector)) : maybeTypedArrayify(vectorToArray(vector), type);
}
function vectorToArray(vector) {
    return vector.nullCount ? vector.toJSON() : vector.toArray();
}
const singleton = [
    null
]; // for data-less decoration marks, e.g. frame
const field = (name)=>(d)=>{
        var _d_properties;
        const v = d[name];
        return v === undefined && d.type === "Feature" ? (_d_properties = d.properties) === null || _d_properties === void 0 ? void 0 : _d_properties[name] : v;
    }; // prettier-ignore
const indexOf = {
    transform: range
};
const identity = {
    transform: (d)=>d
};
const zero = ()=>0;
const one = ()=>1;
const yes = ()=>true;
const string = (x)=>x == null ? x : "".concat(x);
const number = (x)=>x == null ? x : +x;
const boolean = (x)=>x == null ? x : !!x;
const first = (x)=>x ? x[0] : undefined;
const second = (x)=>x ? x[1] : undefined;
const third = (x)=>x ? x[2] : undefined;
const constant = (x)=>()=>x;
function percentile(reduce) {
    const p = +"".concat(reduce).slice(1) / 100;
    return (I, f)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$quantile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantile$3e$__["quantile"])(I, p, f);
}
function coerceNumbers(values) {
    return isNumberArray(values) ? values : map(values, coerceNumber, Float64Array);
}
// Unlike Mark’s number, here we want to convert null and undefined to NaN since
// the result will be stored in a Float64Array and we don’t want null to be
// coerced to zero. We use Number instead of unary + to allow BigInt coercion.
function coerceNumber(x) {
    return x == null ? NaN : Number(x);
}
function coerceDates(values) {
    return map(values, coerceDate);
}
function coerceDate(x) {
    return x instanceof Date && !isNaN(x) ? x : typeof x === "string" ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$isoformat$2f$src$2f$parse$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__parse$3e$__["parse"])(x) : x == null || isNaN(x = Number(x)) // allow conversion from BigInt
     ? undefined : new Date(x);
}
function maybeColorChannel(value, defaultValue) {
    if (value === undefined) value = defaultValue;
    return value === null ? [
        undefined,
        "none"
    ] : isColor(value) ? [
        undefined,
        value
    ] : [
        value,
        undefined
    ];
}
function maybeNumberChannel(value, defaultValue) {
    if (value === undefined) value = defaultValue;
    return value === null || typeof value === "number" ? [
        undefined,
        value
    ] : [
        value,
        undefined
    ];
}
function maybeKeyword(input, name, allowed) {
    if (input != null) return keyword(input, name, allowed);
}
function keyword(input, name, allowed) {
    const i = "".concat(input).toLowerCase();
    if (!allowed.includes(i)) throw new Error("invalid ".concat(name, ": ").concat(input));
    return i;
}
function dataify(data) {
    return isArrowTable(data) ? data : arrayify(data);
}
function arrayify(values) {
    if (values == null || isArray(values)) return values;
    if (isArrowVector(values)) return maybeTypedArrowify(values);
    if (isGeoJSON(values)) {
        switch(values.type){
            case "FeatureCollection":
                return values.features;
            case "GeometryCollection":
                return values.geometries;
            default:
                return [
                    values
                ];
        }
    }
    return Array.from(values);
}
// Duck typing test for GeoJSON
function isGeoJSON(x) {
    switch(x === null || x === void 0 ? void 0 : x.type){
        case "FeatureCollection":
        case "GeometryCollection":
        case "Feature":
        case "LineString":
        case "MultiLineString":
        case "MultiPoint":
        case "MultiPolygon":
        case "Point":
        case "Polygon":
        case "Sphere":
            return true;
        default:
            return false;
    }
}
function map(values, f) {
    let type = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Array;
    return values == null ? values : values instanceof type ? values.map(f) : type.from(values, f);
}
function slice(values) {
    let type = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Array;
    return values instanceof type ? values.slice() : type.from(values);
}
function hasX(param) {
    let { x, x1, x2 } = param;
    return x !== undefined || x1 !== undefined || x2 !== undefined;
}
function hasY(param) {
    let { y, y1, y2 } = param;
    return y !== undefined || y1 !== undefined || y2 !== undefined;
}
function hasXY(options) {
    return hasX(options) || hasY(options) || options.interval !== undefined;
}
function isObject(option) {
    return (option === null || option === void 0 ? void 0 : option.toString) === objectToString;
}
function isScaleOptions(option) {
    return isObject(option) && (option.type !== undefined || option.domain !== undefined);
}
function isOptions(option) {
    return isObject(option) && typeof option.transform !== "function";
}
function isDomainSort(sort) {
    return isOptions(sort) && sort.value === undefined && sort.channel === undefined;
}
function maybeZero(x, x1, x2) {
    let x3 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : identity;
    if (x1 === undefined && x2 === undefined) {
        // {x} or {}
        x1 = 0, x2 = x === undefined ? x3 : x;
    } else if (x1 === undefined) {
        // {x, x2} or {x2}
        x1 = x === undefined ? 0 : x;
    } else if (x2 === undefined) {
        // {x, x1} or {x1}
        x2 = x === undefined ? 0 : x;
    }
    return [
        x1,
        x2
    ];
}
function maybeTuple(x, y) {
    return x === undefined && y === undefined ? [
        first,
        second
    ] : [
        x,
        y
    ];
}
function maybeZ() {
    let { z, fill, stroke } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (z === undefined) [z] = maybeColorChannel(fill);
    if (z === undefined) [z] = maybeColorChannel(stroke);
    return z;
}
function lengthof(data) {
    return isArray(data) ? data.length : data === null || data === void 0 ? void 0 : data.numRows;
}
function range(data) {
    const n = lengthof(data);
    const r = new Uint32Array(n);
    for(let i = 0; i < n; ++i)r[i] = i;
    return r;
}
function take(values, index) {
    return isArray(values) ? map(index, (i)=>values[i], values.constructor) : map(index, (i)=>values.at(i));
}
function taker(f) {
    return f.length === 1 ? (index, values)=>f(take(values, index)) : f;
}
function subarray(I, i, j) {
    return I.subarray ? I.subarray(i, j) : I.slice(i, j);
}
function keyof(value) {
    return value !== null && typeof value === "object" ? value.valueOf() : value;
}
function maybeInput(key, options) {
    if (options[key] !== undefined) return options[key];
    switch(key){
        case "x1":
        case "x2":
            key = "x";
            break;
        case "y1":
        case "y2":
            key = "y";
            break;
    }
    return options[key];
}
function column(source) {
    // Defines a column whose values are lazily populated by calling the returned
    // setter. If the given source is labeled, the label is propagated to the
    // returned column definition.
    let value;
    return [
        {
            transform: ()=>value,
            label: labelof(source)
        },
        (v)=>value = v
    ];
}
function maybeColumn(source) {
    return source == null ? [
        source
    ] : column(source);
}
function labelof(value, defaultValue) {
    return typeof value === "string" ? value : value && value.label !== undefined ? value.label : defaultValue;
}
function mid(x1, x2) {
    return {
        transform (data) {
            const X1 = x1.transform(data);
            const X2 = x2.transform(data);
            return isTemporal(X1) || isTemporal(X2) ? map(X1, (_, i)=>new Date((+X1[i] + +X2[i]) / 2)) : map(X1, (_, i)=>(+X1[i] + +X2[i]) / 2, Float64Array);
        },
        label: x1.label
    };
}
function maybeApplyInterval(V, scale) {
    const t = maybeIntervalTransform(scale === null || scale === void 0 ? void 0 : scale.interval, scale === null || scale === void 0 ? void 0 : scale.type);
    return t ? map(V, t) : V;
}
function maybeIntervalTransform(interval, type) {
    const i = maybeInterval(interval, type);
    return i && ((v)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defined"])(v) ? i.floor(v) : v);
}
function maybeInterval(interval, type) {
    if (interval == null) return;
    if (typeof interval === "number") return numberInterval(interval);
    if (typeof interval === "string") return (type === "time" ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$time$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["timeInterval"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$time$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcInterval"])(interval);
    if (typeof interval.floor !== "function") throw new Error("invalid interval; missing floor method");
    if (typeof interval.offset !== "function") throw new Error("invalid interval; missing offset method");
    return interval;
}
function numberInterval(interval) {
    interval = +interval;
    if (0 < interval && interval < 1 && Number.isInteger(1 / interval)) interval = -1 / interval;
    const n = Math.abs(interval);
    return interval < 0 ? {
        floor: (d)=>Math.floor(d * n) / n,
        offset: function(d) {
            let s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
            return (d * n + Math.floor(s)) / n;
        },
        range: (lo, hi)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$range$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__range$3e$__["range"])(Math.ceil(lo * n), hi * n).map((x)=>x / n)
    } : {
        floor: (d)=>Math.floor(d / n) * n,
        offset: function(d) {
            let s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
            return d + n * Math.floor(s);
        },
        range: (lo, hi)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$range$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__range$3e$__["range"])(Math.ceil(lo / n), hi / n).map((x)=>x * n)
    };
}
function maybeRangeInterval(interval, type) {
    interval = maybeInterval(interval, type);
    if (interval && typeof interval.range !== "function") throw new Error("invalid interval: missing range method");
    return interval;
}
function maybeNiceInterval(interval, type) {
    interval = maybeRangeInterval(interval, type);
    if (interval && typeof interval.ceil !== "function") throw new Error("invalid interval: missing ceil method");
    return interval;
}
function isTimeInterval(t) {
    return isInterval(t) && typeof (t === null || t === void 0 ? void 0 : t.floor) === "function" && t.floor() instanceof Date;
}
function isInterval(t) {
    return typeof (t === null || t === void 0 ? void 0 : t.range) === "function";
}
function maybeValue(value) {
    return value === undefined || isOptions(value) ? value : {
        value
    };
}
function numberChannel(source) {
    return source == null ? null : {
        transform: (data)=>valueof(data, source, Float64Array),
        label: labelof(source)
    };
}
function isTuples(data) {
    if (!isIterable(data)) return false;
    for (const d of data){
        if (d == null) continue;
        return typeof d === "object" && "0" in d && "1" in d;
    }
}
function isIterable(value) {
    return value && typeof value[Symbol.iterator] === "function";
}
function isTextual(values) {
    for (const value of values){
        if (value == null) continue;
        return typeof value !== "object" || value instanceof Date;
    }
}
function isOrdinal(values) {
    for (const value of values){
        if (value == null) continue;
        const type = typeof value;
        return type === "string" || type === "boolean";
    }
}
function isTemporal(values) {
    for (const value of values){
        if (value == null) continue;
        return value instanceof Date;
    }
}
function isTemporalString(values) {
    for (const value of values){
        if (value == null) continue;
        return typeof value === "string" && isNaN(value) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$isoformat$2f$src$2f$parse$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__parse$3e$__["parse"])(value);
    }
}
function isNumericString(values) {
    for (const value of values){
        if (value == null) continue;
        if (typeof value !== "string") return false;
        if (!value.trim()) continue;
        return !isNaN(value);
    }
}
function isNumeric(values) {
    for (const value of values){
        if (value == null) continue;
        return typeof value === "number";
    }
}
function isEvery(values, is) {
    let every;
    for (const value of values){
        if (value == null) continue;
        if (!is(value)) return false;
        every = true;
    }
    return every;
}
const namedColors = new Set("none,currentcolor,transparent,aliceblue,antiquewhite,aqua,aquamarine,azure,beige,bisque,black,blanchedalmond,blue,blueviolet,brown,burlywood,cadetblue,chartreuse,chocolate,coral,cornflowerblue,cornsilk,crimson,cyan,darkblue,darkcyan,darkgoldenrod,darkgray,darkgreen,darkgrey,darkkhaki,darkmagenta,darkolivegreen,darkorange,darkorchid,darkred,darksalmon,darkseagreen,darkslateblue,darkslategray,darkslategrey,darkturquoise,darkviolet,deeppink,deepskyblue,dimgray,dimgrey,dodgerblue,firebrick,floralwhite,forestgreen,fuchsia,gainsboro,ghostwhite,gold,goldenrod,gray,green,greenyellow,grey,honeydew,hotpink,indianred,indigo,ivory,khaki,lavender,lavenderblush,lawngreen,lemonchiffon,lightblue,lightcoral,lightcyan,lightgoldenrodyellow,lightgray,lightgreen,lightgrey,lightpink,lightsalmon,lightseagreen,lightskyblue,lightslategray,lightslategrey,lightsteelblue,lightyellow,lime,limegreen,linen,magenta,maroon,mediumaquamarine,mediumblue,mediumorchid,mediumpurple,mediumseagreen,mediumslateblue,mediumspringgreen,mediumturquoise,mediumvioletred,midnightblue,mintcream,mistyrose,moccasin,navajowhite,navy,oldlace,olive,olivedrab,orange,orangered,orchid,palegoldenrod,palegreen,paleturquoise,palevioletred,papayawhip,peachpuff,peru,pink,plum,powderblue,purple,rebeccapurple,red,rosybrown,royalblue,saddlebrown,salmon,sandybrown,seagreen,seashell,sienna,silver,skyblue,slateblue,slategray,slategrey,snow,springgreen,steelblue,tan,teal,thistle,tomato,turquoise,violet,wheat,white,whitesmoke,yellow".split(",")); // prettier-ignore
function isColor(value) {
    if (typeof value !== "string") return false;
    value = value.toLowerCase().trim();
    return /^#[0-9a-f]{3,8}$/.test(value) || // hex rgb, rgba, rrggbb, rrggbbaa
    /^(?:url|var|rgb|rgba|hsl|hsla|hwb|lab|lch|oklab|oklch|color|color-mix)\(.*\)$/.test(value) || // <funciri>, CSS variable, color, etc.
    namedColors.has(value) // currentColor, red, etc.
    ;
}
function isOpacity(value) {
    return typeof value === "number" && (0 <= value && value <= 1 || isNaN(value));
}
function isNoneish(value) {
    return value == null || isNone(value);
}
function isNone(value) {
    return /^\s*none\s*$/i.test(value);
}
function isRound(value) {
    return /^\s*round\s*$/i.test(value);
}
function maybeAnchor(value, name) {
    return maybeKeyword(value, name, [
        "middle",
        "top-left",
        "top",
        "top-right",
        "right",
        "bottom-right",
        "bottom",
        "bottom-left",
        "left"
    ]);
}
function maybeFrameAnchor() {
    let value = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "middle";
    return maybeAnchor(value, "frameAnchor");
}
function inherit() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    for(var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
        rest[_key - 1] = arguments[_key];
    }
    let o = options;
    for (const defaults of rest){
        for(const key in defaults){
            if (o[key] === undefined) {
                const value = defaults[key];
                if (o === options) o = {
                    ...o,
                    [key]: value
                };
                else o[key] = value;
            }
        }
    }
    return o;
}
function named(things) {
    console.warn("named iterables are deprecated; please use an object instead");
    const names = new Set();
    return Object.fromEntries(Array.from(things, (thing)=>{
        const { name } = thing;
        if (name == null) throw new Error("missing name");
        const key = "".concat(name);
        if (key === "__proto__") throw new Error("illegal name: ".concat(key));
        if (names.has(key)) throw new Error("duplicate name: ".concat(key));
        names.add(key);
        return [
            name,
            thing
        ];
    }));
}
function maybeNamed(things) {
    return isIterable(things) ? named(things) : things;
}
function maybeClip(clip) {
    if (clip === true) clip = "frame";
    else if (clip === false) clip = null;
    else if (!isGeoJSON(clip) && clip != null) {
        clip = keyword(clip, "clip", [
            "frame",
            "sphere"
        ]);
        if (clip === "sphere") clip = {
            type: "Sphere"
        };
    }
    return clip;
}
// https://github.com/observablehq/stdlib/blob/746ca2e69135df6178e4f3a17244def35d8d6b20/src/arrow.js#L4C1-L17C1
function isArrowTable(value) {
    return value && typeof value.getChild === "function" && typeof value.toArray === "function" && value.schema && Array.isArray(value.schema.fields);
}
function isArrowVector(value) {
    return value && typeof value.toArray === "function" && value.type;
}
// Apache Arrow now represents dates as numbers. We currently only support
// implicit coercion to JavaScript Date objects when the numbers represent
// milliseconds since Unix epoch.
function isArrowDateType(type) {
    return type && (type.typeId === 8 || // date
    type.typeId === 10) && // timestamp
    type.unit === 1 // millisecond
    ;
}
}),
"[project]/node_modules/@observablehq/plot/src/scales/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

// Positional scales have associated axes, and for ordinal data, a point or band
// scale is used instead of an ordinal scale.
__turbopack_context__.s([
    "color",
    ()=>color,
    "hasNumericRange",
    ()=>hasNumericRange,
    "isPosition",
    ()=>isPosition,
    "length",
    ()=>length,
    "opacity",
    ()=>opacity,
    "position",
    ()=>position,
    "projection",
    ()=>projection,
    "radius",
    ()=>radius,
    "registry",
    ()=>registry,
    "symbol",
    ()=>symbol
]);
const position = Symbol("position");
const color = Symbol("color");
const radius = Symbol("radius");
const length = Symbol("length");
const opacity = Symbol("opacity");
const symbol = Symbol("symbol");
const projection = Symbol("projection");
const registry = new Map([
    [
        "x",
        position
    ],
    [
        "y",
        position
    ],
    [
        "fx",
        position
    ],
    [
        "fy",
        position
    ],
    [
        "r",
        radius
    ],
    [
        "color",
        color
    ],
    [
        "opacity",
        opacity
    ],
    [
        "symbol",
        symbol
    ],
    [
        "length",
        length
    ],
    [
        "projection",
        projection
    ]
]);
function isPosition(kind) {
    return kind === position || kind === projection;
}
function hasNumericRange(kind) {
    return kind === position || kind === radius || kind === length || kind === opacity;
}
}),
"[project]/node_modules/@observablehq/plot/src/symbol.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "isSymbol",
    ()=>isSymbol,
    "maybeSymbol",
    ()=>maybeSymbol,
    "maybeSymbolChannel",
    ()=>maybeSymbolChannel,
    "sqrt3",
    ()=>sqrt3,
    "sqrt4_3",
    ()=>sqrt4_3
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$asterisk$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolAsterisk$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/symbol/asterisk.js [app-client] (ecmascript) <export default as symbolAsterisk>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$diamond2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolDiamond2$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/symbol/diamond2.js [app-client] (ecmascript) <export default as symbolDiamond2>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$plus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolPlus$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/symbol/plus.js [app-client] (ecmascript) <export default as symbolPlus>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$square2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolSquare2$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/symbol/square2.js [app-client] (ecmascript) <export default as symbolSquare2>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$triangle2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolTriangle2$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/symbol/triangle2.js [app-client] (ecmascript) <export default as symbolTriangle2>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$times$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolTimes$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/symbol/times.js [app-client] (ecmascript) <export default as symbolTimes>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolCircle$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/symbol/circle.js [app-client] (ecmascript) <export default as symbolCircle>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$cross$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolCross$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/symbol/cross.js [app-client] (ecmascript) <export default as symbolCross>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$diamond$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolDiamond$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/symbol/diamond.js [app-client] (ecmascript) <export default as symbolDiamond>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$square$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolSquare$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/symbol/square.js [app-client] (ecmascript) <export default as symbolSquare>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$star$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolStar$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/symbol/star.js [app-client] (ecmascript) <export default as symbolStar>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$triangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolTriangle$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/symbol/triangle.js [app-client] (ecmascript) <export default as symbolTriangle>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$wye$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolWye$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/symbol/wye.js [app-client] (ecmascript) <export default as symbolWye>");
;
;
const sqrt3 = Math.sqrt(3);
const sqrt4_3 = 2 / sqrt3;
const symbolHexagon = {
    draw (context, size) {
        const rx = Math.sqrt(size / Math.PI), ry = rx * sqrt4_3, hy = ry / 2;
        context.moveTo(0, ry);
        context.lineTo(rx, hy);
        context.lineTo(rx, -hy);
        context.lineTo(0, -ry);
        context.lineTo(-rx, -hy);
        context.lineTo(-rx, hy);
        context.closePath();
    }
};
const symbols = new Map([
    [
        "asterisk",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$asterisk$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolAsterisk$3e$__["symbolAsterisk"]
    ],
    [
        "circle",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolCircle$3e$__["symbolCircle"]
    ],
    [
        "cross",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$cross$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolCross$3e$__["symbolCross"]
    ],
    [
        "diamond",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$diamond$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolDiamond$3e$__["symbolDiamond"]
    ],
    [
        "diamond2",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$diamond2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolDiamond2$3e$__["symbolDiamond2"]
    ],
    [
        "hexagon",
        symbolHexagon
    ],
    [
        "plus",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$plus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolPlus$3e$__["symbolPlus"]
    ],
    [
        "square",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$square$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolSquare$3e$__["symbolSquare"]
    ],
    [
        "square2",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$square2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolSquare2$3e$__["symbolSquare2"]
    ],
    [
        "star",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$star$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolStar$3e$__["symbolStar"]
    ],
    [
        "times",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$times$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolTimes$3e$__["symbolTimes"]
    ],
    [
        "triangle",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$triangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolTriangle$3e$__["symbolTriangle"]
    ],
    [
        "triangle2",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$triangle2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolTriangle2$3e$__["symbolTriangle2"]
    ],
    [
        "wye",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$wye$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolWye$3e$__["symbolWye"]
    ]
]);
function isSymbolObject(value) {
    return value && typeof value.draw === "function";
}
function isSymbol(value) {
    if (isSymbolObject(value)) return true;
    if (typeof value !== "string") return false;
    return symbols.has(value.toLowerCase());
}
function maybeSymbol(symbol) {
    if (symbol == null || isSymbolObject(symbol)) return symbol;
    const value = symbols.get("".concat(symbol).toLowerCase());
    if (value) return value;
    throw new Error("invalid symbol: ".concat(symbol));
}
function maybeSymbolChannel(symbol) {
    if (symbol == null || isSymbolObject(symbol)) return [
        undefined,
        symbol
    ];
    if (typeof symbol === "string") {
        const value = symbols.get("".concat(symbol).toLowerCase());
        if (value) return [
            undefined,
            value
        ];
    }
    return [
        symbol,
        undefined
    ];
}
}),
"[project]/node_modules/@observablehq/plot/src/transforms/basic.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "basic",
    ()=>basic,
    "filter",
    ()=>filter,
    "initializer",
    ()=>initializer,
    "reverse",
    ()=>reverse,
    "shuffle",
    ()=>shuffle,
    "sort",
    ()=>sort
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$random$2f$src$2f$lcg$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__randomLcg$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-random/src/lcg.js [app-client] (ecmascript) <export default as randomLcg>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/defined.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
;
;
;
;
function basic() {
    let { filter: f1, sort: s1, reverse: r1, transform: t1, initializer: i1, ...options } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, transform = arguments.length > 1 ? arguments[1] : void 0;
    // If both t1 and t2 are defined, returns a composite transform that first
    // applies t1 and then applies t2.
    if (t1 === undefined) {
        // explicit transform overrides filter, sort, and reverse
        if (f1 != null) t1 = filterTransform(f1);
        if (s1 != null && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isDomainSort"])(s1)) t1 = composeTransform(t1, sortTransform(s1));
        if (r1) t1 = composeTransform(t1, reverseTransform);
    }
    if (transform != null && i1 != null) throw new Error("transforms cannot be applied after initializers");
    return {
        ...options,
        ...(s1 === null || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isDomainSort"])(s1)) && {
            sort: s1
        },
        transform: composeTransform(t1, transform)
    };
}
function initializer() {
    let { filter: f1, sort: s1, reverse: r1, initializer: i1, ...options } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, initializer = arguments.length > 1 ? arguments[1] : void 0;
    // If both i1 and i2 are defined, returns a composite initializer that first
    // applies i1 and then applies i2.
    if (i1 === undefined) {
        // explicit initializer overrides filter, sort, and reverse
        if (f1 != null) i1 = filterTransform(f1);
        if (s1 != null && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isDomainSort"])(s1)) i1 = composeInitializer(i1, sortTransform(s1));
        if (r1) i1 = composeInitializer(i1, reverseTransform);
    }
    return {
        ...options,
        ...(s1 === null || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isDomainSort"])(s1)) && {
            sort: s1
        },
        initializer: composeInitializer(i1, initializer)
    };
}
function composeTransform(t1, t2) {
    if (t1 == null) return t2 === null ? undefined : t2;
    if (t2 == null) return t1 === null ? undefined : t1;
    return function(data, facets, plotOptions) {
        ({ data, facets } = t1.call(this, data, facets, plotOptions));
        return t2.call(this, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["dataify"])(data), facets, plotOptions);
    };
}
function composeInitializer(i1, i2) {
    if (i1 == null) return i2 === null ? undefined : i2;
    if (i2 == null) return i1 === null ? undefined : i1;
    return function(data, facets, channels) {
        for(var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++){
            args[_key - 3] = arguments[_key];
        }
        let c1, d1, f1, c2, d2, f2;
        ({ data: d1 = data, facets: f1 = facets, channels: c1 } = i1.call(this, data, facets, channels, ...args));
        ({ data: d2 = d1, facets: f2 = f1, channels: c2 } = i2.call(this, d1, f1, {
            ...channels,
            ...c1
        }, ...args));
        return {
            data: d2,
            facets: f2,
            channels: {
                ...c1,
                ...c2
            }
        };
    };
}
function apply(options, t) {
    return (options.initializer != null ? initializer : basic)(options, t);
}
function filter(test, options) {
    return apply(options, filterTransform(test));
}
function filterTransform(value) {
    return (data, facets)=>{
        const V = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, value);
        return {
            data,
            facets: facets.map((I)=>I.filter((i)=>V[i]))
        };
    };
}
function reverse() {
    let { sort, ...options } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return {
        ...apply(options, reverseTransform),
        sort: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isDomainSort"])(sort) ? sort : null
    };
}
function reverseTransform(data, facets) {
    return {
        data,
        facets: facets.map((I)=>I.slice().reverse())
    };
}
function shuffle() {
    let { seed, sort, ...options } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return {
        ...apply(options, sortValue(seed == null ? Math.random : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$random$2f$src$2f$lcg$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__randomLcg$3e$__["randomLcg"])(seed))),
        sort: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isDomainSort"])(sort) ? sort : null
    };
}
function sort(order) {
    let { sort, ...options } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return {
        ...((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isOptions"])(order) && order.channel !== undefined ? initializer : apply)(options, sortTransform(order)),
        sort: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isDomainSort"])(sort) ? sort : null
    };
}
function sortTransform(value) {
    return (typeof value === "function" && value.length !== 1 ? sortData : sortValue)(value);
}
function sortData(compare) {
    return (data, facets)=>{
        const compareData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(data) ? (i, j)=>compare(data[i], data[j]) : (i, j)=>compare(data.get(i), data.get(j));
        return {
            data,
            facets: facets.map((I)=>I.slice().sort(compareData))
        };
    };
}
function sortValue(value) {
    let channel, order;
    ({ channel, value, order } = {
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeValue"])(value)
    });
    const negate = channel === null || channel === void 0 ? void 0 : channel.startsWith("-");
    if (negate) channel = channel.slice(1);
    if (order === undefined) order = negate ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["descendingDefined"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ascendingDefined"];
    if (typeof order !== "function") {
        switch("".concat(order).toLowerCase()){
            case "ascending":
                order = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ascendingDefined"];
                break;
            case "descending":
                order = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["descendingDefined"];
                break;
            default:
                throw new Error("invalid order: ".concat(order));
        }
    }
    return (data, facets, channels)=>{
        let V;
        if (channel === undefined) {
            V = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, value);
        } else {
            if (channels === undefined) throw new Error("channel sort requires an initializer");
            V = channels[channel];
            if (!V) return {}; // ignore missing channel
            V = V.value;
        }
        const compareValue = (i, j)=>order(V[i], V[j]);
        return {
            data,
            facets: facets.map((I)=>I.slice().sort(compareValue))
        };
    };
}
}),
"[project]/node_modules/@observablehq/plot/src/transforms/group.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "find",
    ()=>find,
    "group",
    ()=>group,
    "groupX",
    ()=>groupX,
    "groupY",
    ()=>groupY,
    "groupZ",
    ()=>groupZ,
    "hasOutput",
    ()=>hasOutput,
    "maybeEvaluator",
    ()=>maybeEvaluator,
    "maybeGroup",
    ()=>maybeGroup,
    "maybeGroupOutputs",
    ()=>maybeGroupOutputs,
    "maybeOutput",
    ()=>maybeOutput,
    "maybeOutputs",
    ()=>maybeOutputs,
    "maybeReduce",
    ()=>maybeReduce,
    "maybeSort",
    ()=>maybeSort,
    "maybeSubgroup",
    ()=>maybeSubgroup,
    "reduceCount",
    ()=>reduceCount,
    "reduceFirst",
    ()=>reduceFirst,
    "reduceIdentity",
    ()=>reduceIdentity,
    "reduceZ",
    ()=>reduceZ
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$internmap$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/internmap/src/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/group.js [app-client] (ecmascript) <export default as group>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/group.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sort$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sort$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/sort.js [app-client] (ecmascript) <export default as sort>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$deviation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deviation$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/deviation.js [app-client] (ecmascript) <export default as deviation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/max.js [app-client] (ecmascript) <export default as max>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$maxIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__maxIndex$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/maxIndex.js [app-client] (ecmascript) <export default as maxIndex>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$mean$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__mean$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/mean.js [app-client] (ecmascript) <export default as mean>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$median$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__median$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/median.js [app-client] (ecmascript) <export default as median>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$min$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__min$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/min.js [app-client] (ecmascript) <export default as min>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$minIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__minIndex$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/minIndex.js [app-client] (ecmascript) <export default as minIndex>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$mode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__mode$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/mode.js [app-client] (ecmascript) <export default as mode>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sum$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/sum.js [app-client] (ecmascript) <export default as sum>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$variance$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__variance$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/variance.js [app-client] (ecmascript) <export default as variance>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/defined.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$basic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/basic.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
function groupZ(outputs, options) {
    return groupn(null, null, outputs, options);
}
function groupX() {
    let outputs = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
        y: "count"
    }, options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const { x = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"] } = options;
    if (x == null) throw new Error("missing channel: x");
    return groupn(x, null, outputs, options);
}
function groupY() {
    let outputs = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
        x: "count"
    }, options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const { y = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"] } = options;
    if (y == null) throw new Error("missing channel: y");
    return groupn(null, y, outputs, options);
}
function group() {
    let outputs = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
        fill: "count"
    }, options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    let { x, y } = options;
    [x, y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeTuple"])(x, y);
    if (x == null) throw new Error("missing channel: x");
    if (y == null) throw new Error("missing channel: y");
    return groupn(x, y, outputs, options);
}
function groupn(x, y) {
    let { data: reduceData = reduceIdentity, filter, sort, reverse, ...outputs // output channel definitions
     } = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, inputs = arguments.length > 3 && arguments[3] !== void 0 // input channels and options
     ? arguments[3] : {};
    // Compute the outputs.
    outputs = maybeGroupOutputs(outputs, inputs);
    reduceData = maybeGroupReduce(reduceData, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"]);
    sort = sort == null ? undefined : maybeGroupOutput("sort", sort, inputs);
    filter = filter == null ? undefined : maybeGroupEvaluator("filter", filter, inputs);
    // Produce x and y output channels as appropriate.
    const [GX, setGX] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColumn"])(x);
    const [GY, setGY] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColumn"])(y);
    // Greedily materialize the z, fill, and stroke channels (if channels and not
    // constants) so that we can reference them for subdividing groups without
    // computing them more than once.
    const { z, fill, stroke, x1, x2, y1, y2, ...options } = inputs;
    const [GZ, setGZ] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColumn"])(z);
    const [vfill] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColorChannel"])(fill);
    const [vstroke] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColorChannel"])(stroke);
    const [GF, setGF] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColumn"])(vfill);
    const [GS, setGS] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColumn"])(vstroke);
    return {
        ..."z" in inputs && {
            z: GZ || z
        },
        ..."fill" in inputs && {
            fill: GF || fill
        },
        ..."stroke" in inputs && {
            stroke: GS || stroke
        },
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$basic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["basic"])(options, (data, facets, plotOptions)=>{
            const X = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeApplyInterval"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, x), plotOptions === null || plotOptions === void 0 ? void 0 : plotOptions.x);
            const Y = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeApplyInterval"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, y), plotOptions === null || plotOptions === void 0 ? void 0 : plotOptions.y);
            const Z = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, z);
            const F = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, vfill);
            const S = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, vstroke);
            const G = maybeSubgroup(outputs, {
                z: Z,
                fill: F,
                stroke: S
            });
            const groupFacets = [];
            const groupData = [];
            const GX = X && setGX([]);
            const GY = Y && setGY([]);
            const GZ = Z && setGZ([]);
            const GF = F && setGF([]);
            const GS = S && setGS([]);
            let i = 0;
            for (const o of outputs)o.initialize(data);
            if (sort) sort.initialize(data);
            if (filter) filter.initialize(data);
            for (const facet of facets){
                const groupFacet = [];
                for (const o of outputs)o.scope("facet", facet);
                if (sort) sort.scope("facet", facet);
                if (filter) filter.scope("facet", facet);
                for (const [f, I] of maybeGroup(facet, G)){
                    for (const [y, gg] of maybeGroup(I, Y)){
                        for (const [x, g] of maybeGroup(gg, X)){
                            const extent = {
                                data
                            };
                            if (X) extent.x = x;
                            if (Y) extent.y = y;
                            if (G) extent.z = f;
                            if (filter && !filter.reduce(g, extent)) continue;
                            groupFacet.push(i++);
                            groupData.push(reduceData.reduceIndex(g, data, extent));
                            if (X) GX.push(x);
                            if (Y) GY.push(y);
                            if (Z) GZ.push(G === Z ? f : Z[g[0]]);
                            if (F) GF.push(G === F ? f : F[g[0]]);
                            if (S) GS.push(G === S ? f : S[g[0]]);
                            for (const o of outputs)o.reduce(g, extent);
                            if (sort) sort.reduce(g, extent);
                        }
                    }
                }
                groupFacets.push(groupFacet);
            }
            maybeSort(groupFacets, sort, reverse);
            return {
                data: groupData,
                facets: groupFacets
            };
        }),
        ...!hasOutput(outputs, "x") && (GX ? {
            x: GX
        } : {
            x1,
            x2
        }),
        ...!hasOutput(outputs, "y") && (GY ? {
            y: GY
        } : {
            y1,
            y2
        }),
        ...Object.fromEntries(outputs.map((param)=>{
            let { name, output } = param;
            return [
                name,
                output
            ];
        }))
    };
}
function hasOutput(outputs) {
    for(var _len = arguments.length, names = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
        names[_key - 1] = arguments[_key];
    }
    for (const { name } of outputs){
        if (names.includes(name)) {
            return true;
        }
    }
    return false;
}
function maybeOutputs(outputs, inputs) {
    let asOutput = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : maybeOutput;
    const entries = Object.entries(outputs);
    // Propagate standard mark channels by default.
    if (inputs.title != null && outputs.title === undefined) entries.push([
        "title",
        reduceTitle
    ]);
    if (inputs.href != null && outputs.href === undefined) entries.push([
        "href",
        reduceFirst
    ]);
    return entries.filter((param)=>{
        let [, reduce] = param;
        return reduce !== undefined;
    }).map((param)=>{
        let [name, reduce] = param;
        return reduce === null ? nullOutput(name) : asOutput(name, reduce, inputs);
    });
}
function maybeOutput(name, reduce, inputs) {
    let asEvaluator = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : maybeEvaluator;
    let scale; // optional per-channel scale override
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])(reduce) && "reduce" in reduce) scale = reduce.scale, reduce = reduce.reduce; // N.B. array.reduce
    const evaluator = asEvaluator(name, reduce, inputs);
    const [output, setOutput] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(evaluator.label);
    let O;
    return {
        name,
        output: scale === undefined ? output : {
            value: output,
            scale
        },
        initialize (data) {
            evaluator.initialize(data);
            O = setOutput([]);
        },
        scope (scope, I) {
            evaluator.scope(scope, I);
        },
        reduce (I, extent) {
            O.push(evaluator.reduce(I, extent));
        }
    };
}
function nullOutput(name) {
    return {
        name,
        initialize () {},
        scope () {},
        reduce () {}
    };
}
function maybeEvaluator(name, reduce, inputs) {
    let asReduce = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : maybeReduce;
    const input = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeInput"])(name, inputs);
    const reducer = asReduce(reduce, input);
    let V, context;
    return {
        label: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["labelof"])(reducer === reduceCount ? null : input, reducer.label),
        initialize (data) {
            V = input === undefined ? data : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, input);
            if (reducer.scope === "data") {
                context = reducer.reduceIndex((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["range"])(data), V);
            }
        },
        scope (scope, I) {
            if (reducer.scope === scope) {
                context = reducer.reduceIndex(I, V);
            }
        },
        reduce (I, extent) {
            return reducer.scope == null ? reducer.reduceIndex(I, V, extent) : reducer.reduceIndex(I, V, context, extent);
        }
    };
}
function maybeGroup(I, X) {
    return X ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__["group"])(I, (i)=>X[i]) : [
        [
            ,
            I
        ]
    ];
}
function maybeReduce(reduce, value) {
    let fallback = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : invalidReduce;
    if (reduce == null) return fallback(reduce);
    if (typeof reduce.reduceIndex === "function") return reduce;
    if (typeof reduce.reduce === "function" && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])(reduce)) return reduceReduce(reduce); // N.B. array.reduce
    if (typeof reduce === "function") return reduceFunction(reduce);
    if (/^p\d{2}$/i.test(reduce)) return reduceAccessor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["percentile"])(reduce));
    switch("".concat(reduce).toLowerCase()){
        case "first":
            return reduceFirst;
        case "last":
            return reduceLast;
        case "identity":
            return reduceIdentity;
        case "count":
            return reduceCount;
        case "distinct":
            return reduceDistinct;
        case "sum":
            return value == null ? reduceCount : reduceSum;
        case "proportion":
            return reduceProportion(value, "data");
        case "proportion-facet":
            return reduceProportion(value, "facet");
        case "deviation":
            return reduceAccessor(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$deviation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deviation$3e$__["deviation"]);
        case "min":
            return reduceAccessor(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$min$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__min$3e$__["min"]);
        case "min-index":
            return reduceAccessor(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$minIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__minIndex$3e$__["minIndex"]);
        case "max":
            return reduceAccessor(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__["max"]);
        case "max-index":
            return reduceAccessor(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$maxIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__maxIndex$3e$__["maxIndex"]);
        case "mean":
            return reduceMaybeTemporalAccessor(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$mean$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__mean$3e$__["mean"]);
        case "median":
            return reduceMaybeTemporalAccessor(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$median$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__median$3e$__["median"]);
        case "variance":
            return reduceAccessor(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$variance$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__variance$3e$__["variance"]);
        case "mode":
            return reduceAccessor(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$mode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__mode$3e$__["mode"]);
    }
    return fallback(reduce);
}
function invalidReduce(reduce) {
    throw new Error("invalid reduce: ".concat(reduce));
}
function maybeGroupOutputs(outputs, inputs) {
    return maybeOutputs(outputs, inputs, maybeGroupOutput);
}
function maybeGroupOutput(name, reduce, inputs) {
    return maybeOutput(name, reduce, inputs, maybeGroupEvaluator);
}
function maybeGroupEvaluator(name, reduce, inputs) {
    return maybeEvaluator(name, reduce, inputs, maybeGroupReduce);
}
function maybeGroupReduce(reduce, value) {
    return maybeReduce(reduce, value, maybeGroupReduceFallback);
}
function maybeGroupReduceFallback(reduce) {
    switch("".concat(reduce).toLowerCase()){
        case "x":
            return reduceX;
        case "y":
            return reduceY;
        case "z":
            return reduceZ;
    }
    throw new Error("invalid group reduce: ".concat(reduce));
}
function maybeSubgroup(outputs, inputs) {
    for(const name in inputs){
        const value = inputs[name];
        if (value !== undefined && !outputs.some((o)=>o.name === name)) {
            return value;
        }
    }
}
function maybeSort(facets, sort, reverse) {
    if (sort) {
        const S = sort.output.transform();
        const compare = (i, j)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ascendingDefined"])(S[i], S[j]);
        facets.forEach((f)=>f.sort(compare));
    }
    if (reverse) {
        facets.forEach((f)=>f.reverse());
    }
}
function reduceReduce(reduce) {
    console.warn("deprecated reduce interface; implement reduceIndex instead.");
    return {
        ...reduce,
        reduceIndex: reduce.reduce.bind(reduce)
    };
}
function reduceFunction(f) {
    return {
        reduceIndex (I, X, extent) {
            return f((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["take"])(X, I), extent);
        }
    };
}
function reduceAccessor(f) {
    return {
        reduceIndex (I, X) {
            return f(I, (i)=>X[i]);
        }
    };
}
function reduceMaybeTemporalAccessor(f) {
    return {
        reduceIndex (I, X) {
            const x = f(I, (i)=>X[i]);
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isTemporal"])(X) ? new Date(x) : x;
        }
    };
}
const reduceIdentity = {
    reduceIndex (I, X) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["take"])(X, I);
    }
};
const reduceFirst = {
    reduceIndex (I, X) {
        return X[I[0]];
    }
};
const reduceTitle = {
    reduceIndex (I, X) {
        const n = 5;
        const groups = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sort$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sort$3e$__["sort"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rollup"])(I, (V)=>V.length, (i)=>X[i]), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["second"]);
        const top = groups.slice(-n).reverse();
        if (top.length < groups.length) {
            const bottom = groups.slice(0, 1 - n);
            top[n - 1] = [
                "… ".concat(bottom.length.toLocaleString("en-US"), " more"),
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sum$3e$__["sum"])(bottom, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["second"])
            ];
        }
        return top.map((param)=>{
            let [key, value] = param;
            return "".concat(key, " (").concat(value.toLocaleString("en-US"), ")");
        }).join("\n");
    }
};
const reduceLast = {
    reduceIndex (I, X) {
        return X[I[I.length - 1]];
    }
};
const reduceCount = {
    label: "Frequency",
    reduceIndex (I) {
        return I.length;
    }
};
const reduceDistinct = {
    label: "Distinct",
    reduceIndex (I, X) {
        const s = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$internmap$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InternSet"]();
        for (const i of I)s.add(X[i]);
        return s.size;
    }
};
const reduceSum = reduceAccessor(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sum$3e$__["sum"]);
function reduceProportion(value, scope) {
    return value == null ? {
        scope,
        label: "Frequency",
        reduceIndex: function(I, V) {
            let basis = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
            return I.length / basis;
        }
    } : {
        scope,
        reduceIndex: function(I, V) {
            let basis = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sum$3e$__["sum"])(I, (i)=>V[i]) / basis;
        }
    };
}
const reduceX = {
    reduceIndex (I, X, param) {
        let { x } = param;
        return x;
    }
};
const reduceY = {
    reduceIndex (I, X, param) {
        let { y } = param;
        return y;
    }
};
const reduceZ = {
    reduceIndex (I, X, param) {
        let { z } = param;
        return z;
    }
};
function find(test) {
    if (typeof test !== "function") throw new Error("invalid test function: ".concat(test));
    return {
        reduceIndex (I, V, param) {
            let { data } = param;
            return V[I.find((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(data) ? (i)=>test(data[i], i, data) : (i)=>test(data.get(i), i, data))];
        }
    };
}
}),
"[project]/node_modules/@observablehq/plot/src/channel.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "channelDomain",
    ()=>channelDomain,
    "createChannel",
    ()=>createChannel,
    "createChannels",
    ()=>createChannels,
    "getSource",
    ()=>getSource,
    "inferChannelScale",
    ()=>inferChannelScale,
    "valueObject",
    ()=>valueObject
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$internmap$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/internmap/src/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/group.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/defined.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$symbol$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/symbol.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/group.js [app-client] (ecmascript)");
;
;
;
;
;
;
function createChannel(data, param, name) {
    let { scale, type, value, filter, hint, label = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["labelof"])(value) } = param;
    if (hint === undefined && typeof (value === null || value === void 0 ? void 0 : value.transform) === "function") hint = value.hint;
    return inferChannelScale(name, {
        scale,
        type,
        value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, value),
        label,
        filter,
        hint
    });
}
function createChannels(channels, data) {
    return Object.fromEntries(Object.entries(channels).map((param)=>{
        let [name, channel] = param;
        return [
            name,
            createChannel(data, channel, name)
        ];
    }));
}
function valueObject(channels, scales) {
    const values = Object.fromEntries(Object.entries(channels).map((param)=>{
        let [name, { scale: scaleName, value }] = param;
        const scale = scaleName == null ? null : scales[scaleName];
        return [
            name,
            scale == null ? value : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["map"])(value, scale)
        ];
    }));
    values.channels = channels; // expose channel state for advanced usage
    return values;
}
function inferChannelScale(name, channel) {
    const { scale, value } = channel;
    if (scale === true || scale === "auto") {
        switch(name){
            case "fill":
            case "stroke":
            case "color":
                channel.scale = scale !== true && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isEvery"])(value, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isColor"]) ? null : "color";
                channel.defaultScale = "color";
                break;
            case "fillOpacity":
            case "strokeOpacity":
            case "opacity":
                channel.scale = scale !== true && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isEvery"])(value, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isOpacity"]) ? null : "opacity";
                channel.defaultScale = "opacity";
                break;
            case "symbol":
                if (scale !== true && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isEvery"])(value, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$symbol$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isSymbol"])) {
                    channel.scale = null;
                    channel.value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["map"])(value, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$symbol$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeSymbol"]);
                } else {
                    channel.scale = "symbol";
                }
                channel.defaultScale = "symbol";
                break;
            default:
                channel.scale = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].has(name) ? name : null;
                break;
        }
    } else if (scale === false) {
        channel.scale = null;
    } else if (scale != null && !__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].has(scale)) {
        throw new Error("unknown scale: ".concat(scale));
    }
    return channel;
}
function channelDomain(data, facets, channels, facetChannels, options) {
    const { order: defaultOrder, reverse: defaultReverse, reduce: defaultReduce = true, limit: defaultLimit } = options;
    for(const x in options){
        if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].has(x)) continue; // ignore unknown scale keys (including generic options)
        let { value: y, order = defaultOrder, reverse = defaultReverse, reduce = defaultReduce, limit = defaultLimit } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeValue"])(options[x]); // prettier-ignore
        const negate = y === null || y === void 0 ? void 0 : y.startsWith("-");
        if (negate) y = y.slice(1);
        order = order === undefined ? negate !== (y === "width" || y === "height") ? descendingGroup : ascendingGroup : maybeOrder(order); // prettier-ignore
        if (reduce == null || reduce === false) continue; // disabled reducer
        const X = x === "fx" || x === "fy" ? reindexFacetChannel(facets, facetChannels[x]) : findScaleChannel(channels, x);
        if (!X) throw new Error("missing channel for scale: ".concat(x));
        const XV = X.value;
        const [lo = 0, hi = Infinity] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isIterable"])(limit) ? limit : limit < 0 ? [
            limit
        ] : [
            0,
            limit
        ];
        if (y == null) {
            X.domain = ()=>{
                let domain = Array.from(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$internmap$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InternSet"](XV)); // remove any duplicates
                if (reverse) domain = domain.reverse();
                if (lo !== 0 || hi !== Infinity) domain = domain.slice(lo, hi);
                return domain;
            };
        } else {
            const YV = y === "data" ? data : y === "height" ? difference(channels, "y1", "y2") : y === "width" ? difference(channels, "x1", "x2") : values(channels, y, y === "y" ? "y2" : y === "x" ? "x2" : undefined);
            const reducer = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeReduce"])(reduce === true ? "max" : reduce, YV);
            X.domain = ()=>{
                let domain = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rollups"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["range"])(XV), (I)=>reducer.reduceIndex(I, YV), (i)=>XV[i]);
                if (order) domain.sort(order);
                if (reverse) domain.reverse();
                if (lo !== 0 || hi !== Infinity) domain = domain.slice(lo, hi);
                return domain.map(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["first"]);
            };
        }
    }
}
function findScaleChannel(channels, scale) {
    for(const name in channels){
        const channel = channels[name];
        if (channel.scale === scale) return channel;
    }
}
// Facet channels are not affected by transforms; so, to compute the domain of a
// facet scale, we must first re-index the facet channel according to the
// transformed mark index. Note: mutates channel, but that should be safe here?
function reindexFacetChannel(facets, channel) {
    const originalFacets = facets.original;
    if (originalFacets === facets) return channel; // not transformed
    const V1 = channel.value;
    const V2 = channel.value = []; // mutates channel!
    for(let i = 0; i < originalFacets.length; ++i){
        const vi = V1[originalFacets[i][0]];
        for (const j of facets[i])V2[j] = vi;
    }
    return channel;
}
function difference(channels, k1, k2) {
    const X1 = values(channels, k1);
    const X2 = values(channels, k2);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["map"])(X2, (x2, i)=>Math.abs(x2 - X1[i]), Float64Array);
}
function values(channels, name, alias) {
    let channel = channels[name];
    if (!channel && alias !== undefined) channel = channels[alias];
    if (channel) return channel.value;
    throw new Error("missing channel: ".concat(name));
}
function maybeOrder(order) {
    if (order == null || typeof order === "function") return order;
    switch("".concat(order).toLowerCase()){
        case "ascending":
            return ascendingGroup;
        case "descending":
            return descendingGroup;
    }
    throw new Error("invalid order: ".concat(order));
}
function ascendingGroup(param, param1) {
    let [ak, av] = param, [bk, bv] = param1;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ascendingDefined"])(av, bv) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ascendingDefined"])(ak, bk);
}
function descendingGroup(param, param1) {
    let [ak, av] = param, [bk, bv] = param1;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["descendingDefined"])(av, bv) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ascendingDefined"])(ak, bk);
}
function getSource(channels, key) {
    let channel = channels[key];
    if (!channel) return;
    while(channel.source)channel = channel.source;
    return channel.source === null ? null : channel;
}
}),
"[project]/node_modules/@observablehq/plot/src/scales/schemes.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "isCategoricalScheme",
    ()=>isCategoricalScheme,
    "isDivergingScheme",
    ()=>isDivergingScheme,
    "maybeBooleanRange",
    ()=>maybeBooleanRange,
    "ordinalRange",
    ()=>ordinalRange,
    "ordinalScheme",
    ()=>ordinalScheme,
    "quantitativeScheme",
    ()=>quantitativeScheme
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Blues$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateBlues$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js [app-client] (ecmascript) <export default as interpolateBlues>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$BrBG$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateBrBG$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/diverging/BrBG.js [app-client] (ecmascript) <export default as interpolateBrBG>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$BuGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateBuGn$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js [app-client] (ecmascript) <export default as interpolateBuGn>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$BuPu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateBuPu$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js [app-client] (ecmascript) <export default as interpolateBuPu>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$GnBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateGnBu$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js [app-client] (ecmascript) <export default as interpolateGnBu>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Greens$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateGreens$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js [app-client] (ecmascript) <export default as interpolateGreens>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Greys$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateGreys$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js [app-client] (ecmascript) <export default as interpolateGreys>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Oranges$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateOranges$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js [app-client] (ecmascript) <export default as interpolateOranges>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$OrRd$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateOrRd$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js [app-client] (ecmascript) <export default as interpolateOrRd>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$PiYG$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePiYG$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/diverging/PiYG.js [app-client] (ecmascript) <export default as interpolatePiYG>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$PRGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePRGn$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/diverging/PRGn.js [app-client] (ecmascript) <export default as interpolatePRGn>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$PuBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePuBu$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js [app-client] (ecmascript) <export default as interpolatePuBu>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$PuBuGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePuBuGn$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js [app-client] (ecmascript) <export default as interpolatePuBuGn>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$PuOr$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePuOr$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/diverging/PuOr.js [app-client] (ecmascript) <export default as interpolatePuOr>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$PuRd$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePuRd$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js [app-client] (ecmascript) <export default as interpolatePuRd>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Purples$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePurples$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js [app-client] (ecmascript) <export default as interpolatePurples>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRdBu$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/diverging/RdBu.js [app-client] (ecmascript) <export default as interpolateRdBu>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdGy$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRdGy$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/diverging/RdGy.js [app-client] (ecmascript) <export default as interpolateRdGy>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$RdPu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRdPu$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js [app-client] (ecmascript) <export default as interpolateRdPu>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdYlBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRdYlBu$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js [app-client] (ecmascript) <export default as interpolateRdYlBu>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdYlGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRdYlGn$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js [app-client] (ecmascript) <export default as interpolateRdYlGn>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Reds$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateReds$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js [app-client] (ecmascript) <export default as interpolateReds>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$Spectral$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateSpectral$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/diverging/Spectral.js [app-client] (ecmascript) <export default as interpolateSpectral>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateYlGn$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js [app-client] (ecmascript) <export default as interpolateYlGn>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlGnBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateYlGnBu$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js [app-client] (ecmascript) <export default as interpolateYlGnBu>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlOrBr$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateYlOrBr$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js [app-client] (ecmascript) <export default as interpolateYlOrBr>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlOrRd$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateYlOrRd$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js [app-client] (ecmascript) <export default as interpolateYlOrRd>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$turbo$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateTurbo$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js [app-client] (ecmascript) <export default as interpolateTurbo>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$viridis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateViridis$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js [app-client] (ecmascript) <export default as interpolateViridis>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$viridis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__magma__as__interpolateMagma$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js [app-client] (ecmascript) <export magma as interpolateMagma>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$viridis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__inferno__as__interpolateInferno$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js [app-client] (ecmascript) <export inferno as interpolateInferno>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$viridis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__plasma__as__interpolatePlasma$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js [app-client] (ecmascript) <export plasma as interpolatePlasma>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$cividis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateCividis$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js [app-client] (ecmascript) <export default as interpolateCividis>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$cubehelix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateCubehelixDefault$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js [app-client] (ecmascript) <export default as interpolateCubehelixDefault>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$rainbow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__warm__as__interpolateWarm$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js [app-client] (ecmascript) <export warm as interpolateWarm>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$rainbow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__cool__as__interpolateCool$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js [app-client] (ecmascript) <export cool as interpolateCool>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$rainbow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRainbow$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js [app-client] (ecmascript) <export default as interpolateRainbow>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$sinebow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateSinebow$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js [app-client] (ecmascript) <export default as interpolateSinebow>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$quantize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantize$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-interpolate/src/quantize.js [app-client] (ecmascript) <export default as quantize>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$Accent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemeAccent$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/categorical/Accent.js [app-client] (ecmascript) <export default as schemeAccent>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Blues$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeBlues$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js [app-client] (ecmascript) <export scheme as schemeBlues>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$BrBG$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeBrBG$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/diverging/BrBG.js [app-client] (ecmascript) <export scheme as schemeBrBG>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$BuGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeBuGn$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js [app-client] (ecmascript) <export scheme as schemeBuGn>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$BuPu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeBuPu$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js [app-client] (ecmascript) <export scheme as schemeBuPu>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$category10$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemeCategory10$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/categorical/category10.js [app-client] (ecmascript) <export default as schemeCategory10>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$Dark2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemeDark2$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/categorical/Dark2.js [app-client] (ecmascript) <export default as schemeDark2>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$GnBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeGnBu$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js [app-client] (ecmascript) <export scheme as schemeGnBu>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Greens$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeGreens$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js [app-client] (ecmascript) <export scheme as schemeGreens>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Greys$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeGreys$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js [app-client] (ecmascript) <export scheme as schemeGreys>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$observable10$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemeObservable10$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/categorical/observable10.js [app-client] (ecmascript) <export default as schemeObservable10>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Oranges$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeOranges$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js [app-client] (ecmascript) <export scheme as schemeOranges>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$OrRd$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeOrRd$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js [app-client] (ecmascript) <export scheme as schemeOrRd>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$Paired$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemePaired$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/categorical/Paired.js [app-client] (ecmascript) <export default as schemePaired>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$Pastel1$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemePastel1$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js [app-client] (ecmascript) <export default as schemePastel1>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$Pastel2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemePastel2$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js [app-client] (ecmascript) <export default as schemePastel2>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$PiYG$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemePiYG$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/diverging/PiYG.js [app-client] (ecmascript) <export scheme as schemePiYG>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$PRGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemePRGn$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/diverging/PRGn.js [app-client] (ecmascript) <export scheme as schemePRGn>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$PuBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemePuBu$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js [app-client] (ecmascript) <export scheme as schemePuBu>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$PuBuGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemePuBuGn$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js [app-client] (ecmascript) <export scheme as schemePuBuGn>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$PuOr$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemePuOr$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/diverging/PuOr.js [app-client] (ecmascript) <export scheme as schemePuOr>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$PuRd$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemePuRd$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js [app-client] (ecmascript) <export scheme as schemePuRd>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Purples$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemePurples$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js [app-client] (ecmascript) <export scheme as schemePurples>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeRdBu$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/diverging/RdBu.js [app-client] (ecmascript) <export scheme as schemeRdBu>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdGy$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeRdGy$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/diverging/RdGy.js [app-client] (ecmascript) <export scheme as schemeRdGy>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$RdPu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeRdPu$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js [app-client] (ecmascript) <export scheme as schemeRdPu>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdYlBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeRdYlBu$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js [app-client] (ecmascript) <export scheme as schemeRdYlBu>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdYlGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeRdYlGn$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js [app-client] (ecmascript) <export scheme as schemeRdYlGn>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Reds$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeReds$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js [app-client] (ecmascript) <export scheme as schemeReds>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$Set1$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemeSet1$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/categorical/Set1.js [app-client] (ecmascript) <export default as schemeSet1>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$Set2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemeSet2$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/categorical/Set2.js [app-client] (ecmascript) <export default as schemeSet2>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$Set3$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemeSet3$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/categorical/Set3.js [app-client] (ecmascript) <export default as schemeSet3>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$Spectral$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeSpectral$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/diverging/Spectral.js [app-client] (ecmascript) <export scheme as schemeSpectral>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$Tableau10$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemeTableau10$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/categorical/Tableau10.js [app-client] (ecmascript) <export default as schemeTableau10>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeYlGn$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js [app-client] (ecmascript) <export scheme as schemeYlGn>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlGnBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeYlGnBu$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js [app-client] (ecmascript) <export scheme as schemeYlGnBu>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlOrBr$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeYlOrBr$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js [app-client] (ecmascript) <export scheme as schemeYlOrBr>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlOrRd$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeYlOrRd$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js [app-client] (ecmascript) <export scheme as schemeYlOrRd>");
;
const categoricalSchemes = new Map([
    [
        "accent",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$Accent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemeAccent$3e$__["schemeAccent"]
    ],
    [
        "category10",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$category10$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemeCategory10$3e$__["schemeCategory10"]
    ],
    [
        "dark2",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$Dark2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemeDark2$3e$__["schemeDark2"]
    ],
    [
        "observable10",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$observable10$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemeObservable10$3e$__["schemeObservable10"]
    ],
    [
        "paired",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$Paired$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemePaired$3e$__["schemePaired"]
    ],
    [
        "pastel1",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$Pastel1$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemePastel1$3e$__["schemePastel1"]
    ],
    [
        "pastel2",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$Pastel2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemePastel2$3e$__["schemePastel2"]
    ],
    [
        "set1",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$Set1$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemeSet1$3e$__["schemeSet1"]
    ],
    [
        "set2",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$Set2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemeSet2$3e$__["schemeSet2"]
    ],
    [
        "set3",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$Set3$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemeSet3$3e$__["schemeSet3"]
    ],
    [
        "tableau10",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$categorical$2f$Tableau10$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__schemeTableau10$3e$__["schemeTableau10"]
    ]
]);
function isCategoricalScheme(scheme) {
    return scheme != null && categoricalSchemes.has("".concat(scheme).toLowerCase());
}
const ordinalSchemes = new Map([
    ...categoricalSchemes,
    // diverging
    [
        "brbg",
        scheme11(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$BrBG$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeBrBG$3e$__["schemeBrBG"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$BrBG$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateBrBG$3e$__["interpolateBrBG"])
    ],
    [
        "prgn",
        scheme11(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$PRGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemePRGn$3e$__["schemePRGn"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$PRGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePRGn$3e$__["interpolatePRGn"])
    ],
    [
        "piyg",
        scheme11(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$PiYG$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemePiYG$3e$__["schemePiYG"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$PiYG$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePiYG$3e$__["interpolatePiYG"])
    ],
    [
        "puor",
        scheme11(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$PuOr$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemePuOr$3e$__["schemePuOr"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$PuOr$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePuOr$3e$__["interpolatePuOr"])
    ],
    [
        "rdbu",
        scheme11(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeRdBu$3e$__["schemeRdBu"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRdBu$3e$__["interpolateRdBu"])
    ],
    [
        "rdgy",
        scheme11(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdGy$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeRdGy$3e$__["schemeRdGy"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdGy$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRdGy$3e$__["interpolateRdGy"])
    ],
    [
        "rdylbu",
        scheme11(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdYlBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeRdYlBu$3e$__["schemeRdYlBu"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdYlBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRdYlBu$3e$__["interpolateRdYlBu"])
    ],
    [
        "rdylgn",
        scheme11(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdYlGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeRdYlGn$3e$__["schemeRdYlGn"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdYlGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRdYlGn$3e$__["interpolateRdYlGn"])
    ],
    [
        "spectral",
        scheme11(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$Spectral$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeSpectral$3e$__["schemeSpectral"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$Spectral$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateSpectral$3e$__["interpolateSpectral"])
    ],
    // reversed diverging (for temperature data)
    [
        "burd",
        scheme11r(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeRdBu$3e$__["schemeRdBu"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRdBu$3e$__["interpolateRdBu"])
    ],
    [
        "buylrd",
        scheme11r(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdYlBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeRdYlBu$3e$__["schemeRdYlBu"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdYlBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRdYlBu$3e$__["interpolateRdYlBu"])
    ],
    // sequential (single-hue)
    [
        "blues",
        scheme9(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Blues$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeBlues$3e$__["schemeBlues"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Blues$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateBlues$3e$__["interpolateBlues"])
    ],
    [
        "greens",
        scheme9(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Greens$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeGreens$3e$__["schemeGreens"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Greens$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateGreens$3e$__["interpolateGreens"])
    ],
    [
        "greys",
        scheme9(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Greys$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeGreys$3e$__["schemeGreys"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Greys$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateGreys$3e$__["interpolateGreys"])
    ],
    [
        "oranges",
        scheme9(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Oranges$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeOranges$3e$__["schemeOranges"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Oranges$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateOranges$3e$__["interpolateOranges"])
    ],
    [
        "purples",
        scheme9(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Purples$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemePurples$3e$__["schemePurples"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Purples$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePurples$3e$__["interpolatePurples"])
    ],
    [
        "reds",
        scheme9(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Reds$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeReds$3e$__["schemeReds"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Reds$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateReds$3e$__["interpolateReds"])
    ],
    // sequential (multi-hue)
    [
        "turbo",
        schemei(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$turbo$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateTurbo$3e$__["interpolateTurbo"])
    ],
    [
        "viridis",
        schemei(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$viridis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateViridis$3e$__["interpolateViridis"])
    ],
    [
        "magma",
        schemei(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$viridis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__magma__as__interpolateMagma$3e$__["interpolateMagma"])
    ],
    [
        "inferno",
        schemei(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$viridis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__inferno__as__interpolateInferno$3e$__["interpolateInferno"])
    ],
    [
        "plasma",
        schemei(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$viridis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__plasma__as__interpolatePlasma$3e$__["interpolatePlasma"])
    ],
    [
        "cividis",
        schemei(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$cividis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateCividis$3e$__["interpolateCividis"])
    ],
    [
        "cubehelix",
        schemei(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$cubehelix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateCubehelixDefault$3e$__["interpolateCubehelixDefault"])
    ],
    [
        "warm",
        schemei(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$rainbow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__warm__as__interpolateWarm$3e$__["interpolateWarm"])
    ],
    [
        "cool",
        schemei(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$rainbow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__cool__as__interpolateCool$3e$__["interpolateCool"])
    ],
    [
        "bugn",
        scheme9(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$BuGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeBuGn$3e$__["schemeBuGn"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$BuGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateBuGn$3e$__["interpolateBuGn"])
    ],
    [
        "bupu",
        scheme9(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$BuPu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeBuPu$3e$__["schemeBuPu"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$BuPu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateBuPu$3e$__["interpolateBuPu"])
    ],
    [
        "gnbu",
        scheme9(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$GnBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeGnBu$3e$__["schemeGnBu"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$GnBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateGnBu$3e$__["interpolateGnBu"])
    ],
    [
        "orrd",
        scheme9(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$OrRd$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeOrRd$3e$__["schemeOrRd"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$OrRd$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateOrRd$3e$__["interpolateOrRd"])
    ],
    [
        "pubu",
        scheme9(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$PuBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemePuBu$3e$__["schemePuBu"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$PuBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePuBu$3e$__["interpolatePuBu"])
    ],
    [
        "pubugn",
        scheme9(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$PuBuGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemePuBuGn$3e$__["schemePuBuGn"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$PuBuGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePuBuGn$3e$__["interpolatePuBuGn"])
    ],
    [
        "purd",
        scheme9(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$PuRd$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemePuRd$3e$__["schemePuRd"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$PuRd$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePuRd$3e$__["interpolatePuRd"])
    ],
    [
        "rdpu",
        scheme9(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$RdPu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeRdPu$3e$__["schemeRdPu"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$RdPu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRdPu$3e$__["interpolateRdPu"])
    ],
    [
        "ylgn",
        scheme9(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeYlGn$3e$__["schemeYlGn"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateYlGn$3e$__["interpolateYlGn"])
    ],
    [
        "ylgnbu",
        scheme9(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlGnBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeYlGnBu$3e$__["schemeYlGnBu"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlGnBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateYlGnBu$3e$__["interpolateYlGnBu"])
    ],
    [
        "ylorbr",
        scheme9(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlOrBr$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeYlOrBr$3e$__["schemeYlOrBr"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlOrBr$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateYlOrBr$3e$__["interpolateYlOrBr"])
    ],
    [
        "ylorrd",
        scheme9(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlOrRd$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__scheme__as__schemeYlOrRd$3e$__["schemeYlOrRd"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlOrRd$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateYlOrRd$3e$__["interpolateYlOrRd"])
    ],
    // cyclical
    [
        "rainbow",
        schemeicyclical(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$rainbow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRainbow$3e$__["interpolateRainbow"])
    ],
    [
        "sinebow",
        schemeicyclical(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$sinebow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateSinebow$3e$__["interpolateSinebow"])
    ]
]);
function scheme9(scheme, interpolate) {
    return (param)=>{
        let { length: n } = param;
        if (n === 1) return [
            scheme[3][1]
        ]; // favor midpoint
        if (n === 2) return [
            scheme[3][1],
            scheme[3][2]
        ]; // favor darker
        n = Math.max(3, Math.floor(n));
        return n > 9 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$quantize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantize$3e$__["quantize"])(interpolate, n) : scheme[n];
    };
}
function scheme11(scheme, interpolate) {
    return (param)=>{
        let { length: n } = param;
        if (n === 2) return [
            scheme[3][0],
            scheme[3][2]
        ]; // favor diverging extrema
        n = Math.max(3, Math.floor(n));
        return n > 11 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$quantize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantize$3e$__["quantize"])(interpolate, n) : scheme[n];
    };
}
function scheme11r(scheme, interpolate) {
    return (param)=>{
        let { length: n } = param;
        if (n === 2) return [
            scheme[3][2],
            scheme[3][0]
        ]; // favor diverging extrema
        n = Math.max(3, Math.floor(n));
        return n > 11 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$quantize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantize$3e$__["quantize"])((t)=>interpolate(1 - t), n) : scheme[n].slice().reverse();
    };
}
function schemei(interpolate) {
    return (param)=>{
        let { length: n } = param;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$quantize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantize$3e$__["quantize"])(interpolate, Math.max(2, Math.floor(n)));
    };
}
function schemeicyclical(interpolate) {
    return (param)=>{
        let { length: n } = param;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$quantize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantize$3e$__["quantize"])(interpolate, Math.floor(n) + 1).slice(0, -1);
    };
}
function ordinalScheme(scheme) {
    const s = "".concat(scheme).toLowerCase();
    if (!ordinalSchemes.has(s)) throw new Error("unknown ordinal scheme: ".concat(s));
    return ordinalSchemes.get(s);
}
function ordinalRange(scheme, length) {
    const s = ordinalScheme(scheme);
    const r = typeof s === "function" ? s({
        length
    }) : s;
    return r.length !== length ? r.slice(0, length) : r;
}
function maybeBooleanRange(domain) {
    let scheme = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "greys";
    const range = new Set();
    const [f, t] = ordinalRange(scheme, 2);
    for (const value of domain){
        if (value == null) continue;
        if (value === true) range.add(t);
        else if (value === false) range.add(f);
        else return;
    }
    return [
        ...range
    ];
}
const quantitativeSchemes = new Map([
    // diverging
    [
        "brbg",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$BrBG$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateBrBG$3e$__["interpolateBrBG"]
    ],
    [
        "prgn",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$PRGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePRGn$3e$__["interpolatePRGn"]
    ],
    [
        "piyg",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$PiYG$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePiYG$3e$__["interpolatePiYG"]
    ],
    [
        "puor",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$PuOr$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePuOr$3e$__["interpolatePuOr"]
    ],
    [
        "rdbu",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRdBu$3e$__["interpolateRdBu"]
    ],
    [
        "rdgy",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdGy$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRdGy$3e$__["interpolateRdGy"]
    ],
    [
        "rdylbu",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdYlBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRdYlBu$3e$__["interpolateRdYlBu"]
    ],
    [
        "rdylgn",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdYlGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRdYlGn$3e$__["interpolateRdYlGn"]
    ],
    [
        "spectral",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$Spectral$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateSpectral$3e$__["interpolateSpectral"]
    ],
    // reversed diverging (for temperature data)
    [
        "burd",
        (t)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRdBu$3e$__["interpolateRdBu"])(1 - t)
    ],
    [
        "buylrd",
        (t)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$diverging$2f$RdYlBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRdYlBu$3e$__["interpolateRdYlBu"])(1 - t)
    ],
    // sequential (single-hue)
    [
        "blues",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Blues$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateBlues$3e$__["interpolateBlues"]
    ],
    [
        "greens",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Greens$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateGreens$3e$__["interpolateGreens"]
    ],
    [
        "greys",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Greys$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateGreys$3e$__["interpolateGreys"]
    ],
    [
        "purples",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Purples$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePurples$3e$__["interpolatePurples"]
    ],
    [
        "reds",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Reds$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateReds$3e$__["interpolateReds"]
    ],
    [
        "oranges",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$single$2f$Oranges$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateOranges$3e$__["interpolateOranges"]
    ],
    // sequential (multi-hue)
    [
        "turbo",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$turbo$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateTurbo$3e$__["interpolateTurbo"]
    ],
    [
        "viridis",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$viridis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateViridis$3e$__["interpolateViridis"]
    ],
    [
        "magma",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$viridis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__magma__as__interpolateMagma$3e$__["interpolateMagma"]
    ],
    [
        "inferno",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$viridis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__inferno__as__interpolateInferno$3e$__["interpolateInferno"]
    ],
    [
        "plasma",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$viridis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__plasma__as__interpolatePlasma$3e$__["interpolatePlasma"]
    ],
    [
        "cividis",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$cividis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateCividis$3e$__["interpolateCividis"]
    ],
    [
        "cubehelix",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$cubehelix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateCubehelixDefault$3e$__["interpolateCubehelixDefault"]
    ],
    [
        "warm",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$rainbow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__warm__as__interpolateWarm$3e$__["interpolateWarm"]
    ],
    [
        "cool",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$rainbow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__cool__as__interpolateCool$3e$__["interpolateCool"]
    ],
    [
        "bugn",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$BuGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateBuGn$3e$__["interpolateBuGn"]
    ],
    [
        "bupu",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$BuPu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateBuPu$3e$__["interpolateBuPu"]
    ],
    [
        "gnbu",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$GnBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateGnBu$3e$__["interpolateGnBu"]
    ],
    [
        "orrd",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$OrRd$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateOrRd$3e$__["interpolateOrRd"]
    ],
    [
        "pubugn",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$PuBuGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePuBuGn$3e$__["interpolatePuBuGn"]
    ],
    [
        "pubu",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$PuBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePuBu$3e$__["interpolatePuBu"]
    ],
    [
        "purd",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$PuRd$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolatePuRd$3e$__["interpolatePuRd"]
    ],
    [
        "rdpu",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$RdPu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRdPu$3e$__["interpolateRdPu"]
    ],
    [
        "ylgnbu",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlGnBu$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateYlGnBu$3e$__["interpolateYlGnBu"]
    ],
    [
        "ylgn",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlGn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateYlGn$3e$__["interpolateYlGn"]
    ],
    [
        "ylorbr",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlOrBr$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateYlOrBr$3e$__["interpolateYlOrBr"]
    ],
    [
        "ylorrd",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$YlOrRd$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateYlOrRd$3e$__["interpolateYlOrRd"]
    ],
    // cyclical
    [
        "rainbow",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$rainbow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRainbow$3e$__["interpolateRainbow"]
    ],
    [
        "sinebow",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2d$chromatic$2f$src$2f$sequential$2d$multi$2f$sinebow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateSinebow$3e$__["interpolateSinebow"]
    ]
]);
function quantitativeScheme(scheme) {
    const s = "".concat(scheme).toLowerCase();
    if (!quantitativeSchemes.has(s)) throw new Error("unknown quantitative scheme: ".concat(s));
    return quantitativeSchemes.get(s);
}
const divergingSchemes = new Set([
    "brbg",
    "prgn",
    "piyg",
    "puor",
    "rdbu",
    "rdgy",
    "rdylbu",
    "rdylgn",
    "spectral",
    "burd",
    "buylrd"
]);
function isDivergingScheme(scheme) {
    return scheme != null && divergingSchemes.has("".concat(scheme).toLowerCase());
}
}),
"[project]/node_modules/@observablehq/plot/src/scales/quantitative.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "createScaleIdentity",
    ()=>createScaleIdentity,
    "createScaleLinear",
    ()=>createScaleLinear,
    "createScaleLog",
    ()=>createScaleLog,
    "createScalePow",
    ()=>createScalePow,
    "createScaleQ",
    ()=>createScaleQ,
    "createScaleQuantile",
    ()=>createScaleQuantile,
    "createScaleQuantize",
    ()=>createScaleQuantize,
    "createScaleSqrt",
    ()=>createScaleSqrt,
    "createScaleSymlog",
    ()=>createScaleSymlog,
    "createScaleThreshold",
    ()=>createScaleThreshold,
    "flip",
    ()=>flip,
    "inferDomain",
    ()=>inferDomain,
    "interpolatePiecewise",
    ()=>interpolatePiecewise,
    "maybeInterpolator",
    ()=>maybeInterpolator
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$descending$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__descending$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/descending.js [app-client] (ecmascript) <export default as descending>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/extent.js [app-client] (ecmascript) <export default as extent>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$hcl$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateHcl$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-interpolate/src/hcl.js [app-client] (ecmascript) <export default as interpolateHcl>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$hsl$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateHsl$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-interpolate/src/hsl.js [app-client] (ecmascript) <export default as interpolateHsl>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$lab$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateLab$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-interpolate/src/lab.js [app-client] (ecmascript) <export default as interpolateLab>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$number$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateNumber$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-interpolate/src/number.js [app-client] (ecmascript) <export default as interpolateNumber>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$rgb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRgb$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-interpolate/src/rgb.js [app-client] (ecmascript) <export default as interpolateRgb>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$round$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRound$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-interpolate/src/round.js [app-client] (ecmascript) <export default as interpolateRound>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/max.js [app-client] (ecmascript) <export default as max>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$median$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__median$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/median.js [app-client] (ecmascript) <export default as median>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$min$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__min$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/min.js [app-client] (ecmascript) <export default as min>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$piecewise$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__piecewise$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-interpolate/src/piecewise.js [app-client] (ecmascript) <export default as piecewise>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$quantile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantile$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/quantile.js [app-client] (ecmascript) <export default as quantile>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$quantize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantize$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-interpolate/src/quantize.js [app-client] (ecmascript) <export default as quantize>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$reverse$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__reverse$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/reverse.js [app-client] (ecmascript) <export default as reverse>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$identity$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleIdentity$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale/src/identity.js [app-client] (ecmascript) <export default as scaleIdentity>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$linear$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleLinear$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale/src/linear.js [app-client] (ecmascript) <export default as scaleLinear>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$log$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleLog$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale/src/log.js [app-client] (ecmascript) <export default as scaleLog>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$pow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scalePow$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale/src/pow.js [app-client] (ecmascript) <export default as scalePow>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$quantile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleQuantile$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale/src/quantile.js [app-client] (ecmascript) <export default as scaleQuantile>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$symlog$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleSymlog$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale/src/symlog.js [app-client] (ecmascript) <export default as scaleSymlog>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$threshold$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleThreshold$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale/src/threshold.js [app-client] (ecmascript) <export default as scaleThreshold>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$ticks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ticks$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/ticks.js [app-client] (ecmascript) <export default as ticks>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/defined.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/order.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$schemes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales/schemes.js [app-client] (ecmascript)");
;
;
;
;
;
;
const flip = (i)=>(t)=>i(1 - t);
const unit = [
    0,
    1
];
const interpolators = new Map([
    // numbers
    [
        "number",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$number$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateNumber$3e$__["interpolateNumber"]
    ],
    // color spaces
    [
        "rgb",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$rgb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRgb$3e$__["interpolateRgb"]
    ],
    [
        "hsl",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$hsl$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateHsl$3e$__["interpolateHsl"]
    ],
    [
        "hcl",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$hcl$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateHcl$3e$__["interpolateHcl"]
    ],
    [
        "lab",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$lab$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateLab$3e$__["interpolateLab"]
    ]
]);
function maybeInterpolator(interpolate) {
    const i = "".concat(interpolate).toLowerCase();
    if (!interpolators.has(i)) throw new Error("unknown interpolator: ".concat(i));
    return interpolators.get(i);
}
function createScaleQ(key, scale, channels, param) {
    let { type, nice, clamp, zero, domain = inferAutoDomain(key, channels), unknown, round, scheme, interval, range = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].get(key) === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["radius"] ? inferRadialRange(channels, domain) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].get(key) === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["length"] ? inferLengthRange(channels, domain) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].get(key) === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["opacity"] ? unit : undefined, interpolate = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].get(key) === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["color"] ? scheme == null && range !== undefined ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$rgb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRgb$3e$__["interpolateRgb"] : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$schemes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["quantitativeScheme"])(scheme !== undefined ? scheme : type === "cyclical" ? "rainbow" : "turbo") : round ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$round$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRound$3e$__["interpolateRound"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$number$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateNumber$3e$__["interpolateNumber"], reverse } = param;
    domain = maybeRepeat(domain);
    interval = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeRangeInterval"])(interval, type);
    if (type === "cyclical" || type === "sequential") type = "linear"; // shorthand for color schemes
    if (typeof interpolate !== "function") interpolate = maybeInterpolator(interpolate); // named interpolator
    reverse = !!reverse;
    // If an explicit range is specified, and it has a different length than the
    // domain, then redistribute the range using a piecewise interpolator.
    if (range !== undefined) {
        const n = domain.length;
        const m = (range = maybeRepeat(range)).length;
        if (n !== m) {
            if (interpolate.length === 1) throw new Error("invalid piecewise interpolator"); // e.g., turbo
            interpolate = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$piecewise$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__piecewise$3e$__["piecewise"])(interpolate, range);
            range = undefined;
        }
    }
    // Disambiguate between a two-argument interpolator that is used in
    // conjunction with the range, and a one-argument “fixed” interpolator on the
    // [0, 1] interval as with the RdBu color scheme.
    if (interpolate.length === 1) {
        if (reverse) {
            interpolate = flip(interpolate);
            reverse = false;
        }
        if (range === undefined) {
            range = Float64Array.from(domain, (_, i)=>i / (domain.length - 1));
            if (range.length === 2) range = unit; // optimize common case of [0, 1]
        }
        scale.interpolate((range === unit ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["constant"] : interpolatePiecewise)(interpolate));
    } else {
        scale.interpolate(interpolate);
    }
    // If a zero option is specified, we assume that the domain is numeric, and we
    // want to ensure that the domain crosses zero. However, note that the domain
    // may be reversed (descending) so we shouldn’t assume that the first value is
    // smaller than the last; and also it’s possible that the domain has more than
    // two values for a “poly” scale. And lastly be careful not to mutate input!
    if (zero) {
        const [min, max] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__["extent"])(domain);
        if (min > 0 || max < 0) {
            domain = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["slice"])(domain);
            const o = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["orderof"])(domain) || 1; // treat degenerate as ascending
            if (o === Math.sign(min)) domain[0] = 0; // [1, 2] or [-1, -2]
            else domain[domain.length - 1] = 0; // [2, 1] or [-2, -1]
        }
    }
    if (reverse) domain = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$reverse$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__reverse$3e$__["reverse"])(domain);
    scale.domain(domain).unknown(unknown);
    if (nice) scale.nice(maybeNice(nice, type)), domain = scale.domain();
    if (range !== undefined) scale.range(range);
    if (clamp) scale.clamp(clamp);
    return {
        type,
        domain,
        range,
        scale,
        interpolate,
        interval
    };
}
function maybeRepeat(values) {
    values = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["arrayify"])(values);
    return values.length >= 2 ? values : [
        values[0],
        values[0]
    ];
}
function maybeNice(nice, type) {
    return nice === true ? undefined : typeof nice === "number" ? nice : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeNiceInterval"])(nice, type);
}
function createScaleLinear(key, channels, options) {
    return createScaleQ(key, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$linear$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleLinear$3e$__["scaleLinear"])(), channels, options);
}
function createScaleSqrt(key, channels, options) {
    return createScalePow(key, channels, {
        ...options,
        exponent: 0.5
    });
}
function createScalePow(key, channels, param) {
    let { exponent = 1, ...options } = param;
    return createScaleQ(key, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$pow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scalePow$3e$__["scalePow"])().exponent(exponent), channels, {
        ...options,
        type: "pow"
    });
}
function createScaleLog(key, channels, param) {
    let { base = 10, domain = inferLogDomain(channels), ...options } = param;
    return createScaleQ(key, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$log$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleLog$3e$__["scaleLog"])().base(base), channels, {
        ...options,
        domain
    });
}
function createScaleSymlog(key, channels, param) {
    let { constant = 1, ...options } = param;
    return createScaleQ(key, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$symlog$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleSymlog$3e$__["scaleSymlog"])().constant(constant), channels, options);
}
function createScaleQuantile(key, channels, param) {
    let { range, quantiles = range === undefined ? 5 : (range = [
        ...range
    ]).length, n = quantiles, scheme = "rdylbu", domain = inferQuantileDomain(channels), unknown, interpolate, reverse } = param;
    if (range === undefined) {
        range = interpolate !== undefined ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$quantize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantize$3e$__["quantize"])(interpolate, n) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].get(key) === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["color"] ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$schemes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ordinalRange"])(scheme, n) : undefined;
    }
    if (domain.length > 0) {
        domain = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$quantile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleQuantile$3e$__["scaleQuantile"])(domain, range === undefined ? {
            length: n
        } : range).quantiles();
    }
    return createScaleThreshold(key, channels, {
        domain,
        range,
        reverse,
        unknown
    });
}
function createScaleQuantize(key, channels, param) {
    let { range, n = range === undefined ? 5 : (range = [
        ...range
    ]).length, scheme = "rdylbu", domain = inferAutoDomain(key, channels), unknown, interpolate, reverse } = param;
    const [min, max] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__["extent"])(domain);
    let thresholds;
    if (range === undefined) {
        thresholds = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$ticks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ticks$3e$__["ticks"])(min, max, n); // approximate number of nice, round thresholds
        if (thresholds[0] <= min) thresholds.splice(0, 1); // drop exact lower bound
        if (thresholds[thresholds.length - 1] >= max) thresholds.pop(); // drop exact upper bound
        n = thresholds.length + 1;
        range = interpolate !== undefined ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$quantize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantize$3e$__["quantize"])(interpolate, n) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].get(key) === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["color"] ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$schemes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ordinalRange"])(scheme, n) : undefined;
    } else {
        thresholds = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$quantize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantize$3e$__["quantize"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$number$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateNumber$3e$__["interpolateNumber"])(min, max), n + 1).slice(1, -1); // exactly n - 1 thresholds to match range
        if (min instanceof Date) thresholds = thresholds.map((x)=>new Date(x)); // preserve date types
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["orderof"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["arrayify"])(domain)) < 0) thresholds.reverse(); // preserve descending domain
    return createScaleThreshold(key, channels, {
        domain: thresholds,
        range,
        reverse,
        unknown
    });
}
function createScaleThreshold(key, channels, param) {
    let { domain = [
        0
    ], unknown, scheme = "rdylbu", interpolate, range = interpolate !== undefined ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$quantize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantize$3e$__["quantize"])(interpolate, domain.length + 1) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].get(key) === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["color"] ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$schemes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ordinalRange"])(scheme, domain.length + 1) : undefined, reverse } = param;
    domain = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["arrayify"])(domain);
    const sign = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["orderof"])(domain); // preserve descending domain
    if (!isNaN(sign) && !isOrdered(domain, sign)) throw new Error("the ".concat(key, " scale has a non-monotonic domain"));
    if (reverse) range = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$reverse$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__reverse$3e$__["reverse"])(range); // domain ascending, so reverse range
    return {
        type: "threshold",
        scale: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$threshold$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleThreshold$3e$__["scaleThreshold"])(sign < 0 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$reverse$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__reverse$3e$__["reverse"])(domain) : domain, range === undefined ? [] : range).unknown(unknown),
        domain,
        range
    };
}
function isOrdered(domain, sign) {
    for(let i = 1, n = domain.length, d = domain[0]; i < n; ++i){
        const s = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$descending$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__descending$3e$__["descending"])(d, d = domain[i]);
        if (s !== 0 && s !== sign) return false;
    }
    return true;
}
function createScaleIdentity(key) {
    return {
        type: "identity",
        scale: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasNumericRange"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].get(key)) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$identity$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleIdentity$3e$__["scaleIdentity"])() : (d)=>d
    };
}
function inferDomain(channels) {
    let f = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["finite"];
    return channels.length ? [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$min$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__min$3e$__["min"])(channels, (param)=>{
            let { value } = param;
            return value === undefined ? value : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$min$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__min$3e$__["min"])(value, f);
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__["max"])(channels, (param)=>{
            let { value } = param;
            return value === undefined ? value : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__["max"])(value, f);
        })
    ] : [
        0,
        1
    ];
}
function inferAutoDomain(key, channels) {
    const type = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].get(key);
    return (type === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["radius"] || type === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["opacity"] || type === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["length"] ? inferZeroDomain : inferDomain)(channels);
}
function inferZeroDomain(channels) {
    return [
        0,
        channels.length ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__["max"])(channels, (param)=>{
            let { value } = param;
            return value === undefined ? value : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__["max"])(value, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["finite"]);
        }) : 1
    ];
}
// We don’t want the upper bound of the radial domain to be zero, as this would
// be degenerate, so we ignore nonpositive values. We also don’t want the
// maximum default radius to exceed 30px.
function inferRadialRange(channels, domain) {
    const hint = channels.find((param)=>{
        let { radius } = param;
        return radius !== undefined;
    });
    if (hint !== undefined) return [
        0,
        hint.radius
    ]; // a natural maximum radius, e.g. hexbins
    const h25 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$quantile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantile$3e$__["quantile"])(channels, 0.5, (param)=>{
        let { value } = param;
        return value === undefined ? NaN : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$quantile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantile$3e$__["quantile"])(value, 0.25, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["positive"]);
    });
    const range = domain.map((d)=>3 * Math.sqrt(d / h25));
    const k = 30 / (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__["max"])(range);
    return k < 1 ? range.map((r)=>r * k) : range;
}
// We want a length scale’s domain to go from zero to a positive value, and to
// treat negative lengths if any as inverted vectors of equivalent magnitude. We
// also don’t want the maximum default length to exceed 60px.
function inferLengthRange(channels, domain) {
    const h50 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$median$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__median$3e$__["median"])(channels, (param)=>{
        let { value } = param;
        return value === undefined ? NaN : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$median$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__median$3e$__["median"])(value, Math.abs);
    });
    const range = domain.map((d)=>12 * d / h50);
    const k = 60 / (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__["max"])(range);
    return k < 1 ? range.map((r)=>r * k) : range;
}
function inferLogDomain(channels) {
    for (const { value } of channels){
        if (value !== undefined) {
            for (let v of value){
                if (v > 0) return inferDomain(channels, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["positive"]);
                if (v < 0) return inferDomain(channels, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["negative"]);
            }
        }
    }
    return [
        1,
        10
    ];
}
function inferQuantileDomain(channels) {
    const domain = [];
    for (const { value } of channels){
        if (value === undefined) continue;
        for (const v of value)domain.push(v);
    }
    return domain;
}
function interpolatePiecewise(interpolate) {
    return (i, j)=>(t)=>interpolate(i + t * (j - i));
}
}),
"[project]/node_modules/@observablehq/plot/src/warnings.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "consumeWarnings",
    ()=>consumeWarnings,
    "warn",
    ()=>warn
]);
let warnings = 0;
let lastMessage;
function consumeWarnings() {
    const w = warnings;
    warnings = 0;
    lastMessage = undefined;
    return w;
}
function warn(message) {
    if (message === lastMessage) return;
    lastMessage = message;
    console.warn(message);
    ++warnings;
}
}),
"[project]/node_modules/@observablehq/plot/src/scales/diverging.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "createScaleDiverging",
    ()=>createScaleDiverging,
    "createScaleDivergingLog",
    ()=>createScaleDivergingLog,
    "createScaleDivergingPow",
    ()=>createScaleDivergingPow,
    "createScaleDivergingSqrt",
    ()=>createScaleDivergingSqrt,
    "createScaleDivergingSymlog",
    ()=>createScaleDivergingSymlog
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$descending$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__descending$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/descending.js [app-client] (ecmascript) <export default as descending>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$number$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateNumber$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-interpolate/src/number.js [app-client] (ecmascript) <export default as interpolateNumber>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$rgb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRgb$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-interpolate/src/rgb.js [app-client] (ecmascript) <export default as interpolateRgb>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$piecewise$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__piecewise$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-interpolate/src/piecewise.js [app-client] (ecmascript) <export default as piecewise>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$diverging$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleDiverging$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale/src/diverging.js [app-client] (ecmascript) <export default as scaleDiverging>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$diverging$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__divergingLog__as__scaleDivergingLog$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale/src/diverging.js [app-client] (ecmascript) <export divergingLog as scaleDivergingLog>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$diverging$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__divergingPow__as__scaleDivergingPow$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale/src/diverging.js [app-client] (ecmascript) <export divergingPow as scaleDivergingPow>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$diverging$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__divergingSymlog__as__scaleDivergingSymlog$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale/src/diverging.js [app-client] (ecmascript) <export divergingSymlog as scaleDivergingSymlog>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/defined.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$warnings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/warnings.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales/quantitative.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$schemes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales/schemes.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
function createScaleD(key, scale, transform, channels, param) {
    let { type, nice, clamp, domain = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["inferDomain"])(channels), unknown, pivot = 0, scheme, range, symmetric = true, interpolate = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].get(key) === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["color"] ? scheme == null && range !== undefined ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$rgb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateRgb$3e$__["interpolateRgb"] : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$schemes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["quantitativeScheme"])(scheme !== undefined ? scheme : "rdbu") : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$number$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateNumber$3e$__["interpolateNumber"], reverse } = param;
    pivot = +pivot;
    domain = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["arrayify"])(domain);
    let [min, max] = domain;
    if (domain.length > 2) (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$warnings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["warn"])("Warning: the diverging ".concat(key, " scale domain contains extra elements."));
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$descending$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__descending$3e$__["descending"])(min, max) < 0) [min, max] = [
        max,
        min
    ], reverse = !reverse;
    min = Math.min(min, pivot);
    max = Math.max(max, pivot);
    // Sometimes interpolate is a named interpolator, such as "lab" for Lab color
    // space. Other times interpolate is a function that takes two arguments and
    // is used in conjunction with the range. And other times the interpolate
    // function is a “fixed” interpolator on the [0, 1] interval, as when a
    // color scheme such as interpolateRdBu is used.
    if (typeof interpolate !== "function") {
        interpolate = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeInterpolator"])(interpolate);
    }
    // If an explicit range is specified, promote it to a piecewise interpolator.
    if (range !== undefined) {
        interpolate = interpolate.length === 1 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["interpolatePiecewise"])(interpolate)(...range) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$piecewise$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__piecewise$3e$__["piecewise"])(interpolate, range);
    }
    // Reverse before normalization.
    if (reverse) interpolate = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["flip"])(interpolate);
    // Normalize the interpolator for symmetric difference around the pivot.
    if (symmetric) {
        const mid = transform.apply(pivot);
        const mindelta = mid - transform.apply(min);
        const maxdelta = transform.apply(max) - mid;
        if (mindelta < maxdelta) min = transform.invert(mid - maxdelta);
        else if (mindelta > maxdelta) max = transform.invert(mid + mindelta);
    }
    scale.domain([
        min,
        pivot,
        max
    ]).unknown(unknown).interpolator(interpolate);
    if (clamp) scale.clamp(clamp);
    if (nice) scale.nice(nice);
    return {
        type,
        domain: [
            min,
            max
        ],
        pivot,
        interpolate,
        scale
    };
}
function createScaleDiverging(key, channels, options) {
    return createScaleD(key, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$diverging$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleDiverging$3e$__["scaleDiverging"])(), transformIdentity, channels, options);
}
function createScaleDivergingSqrt(key, channels, options) {
    return createScaleDivergingPow(key, channels, {
        ...options,
        exponent: 0.5
    });
}
function createScaleDivergingPow(key, channels, param) {
    let { exponent = 1, ...options } = param;
    return createScaleD(key, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$diverging$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__divergingPow__as__scaleDivergingPow$3e$__["scaleDivergingPow"])().exponent(exponent = +exponent), transformPow(exponent), channels, {
        ...options,
        type: "diverging-pow"
    });
}
function createScaleDivergingLog(key, channels, param) {
    let { base = 10, pivot = 1, domain = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["inferDomain"])(channels, pivot < 0 ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["negative"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["positive"]), ...options } = param;
    return createScaleD(key, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$diverging$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__divergingLog__as__scaleDivergingLog$3e$__["scaleDivergingLog"])().base(base = +base), transformLog, channels, {
        domain,
        pivot,
        ...options
    });
}
function createScaleDivergingSymlog(key, channels, param) {
    let { constant = 1, ...options } = param;
    return createScaleD(key, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$diverging$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__divergingSymlog__as__scaleDivergingSymlog$3e$__["scaleDivergingSymlog"])().constant(constant = +constant), transformSymlog(constant), channels, options);
}
const transformIdentity = {
    apply (x) {
        return x;
    },
    invert (x) {
        return x;
    }
};
const transformLog = {
    apply: Math.log,
    invert: Math.exp
};
const transformSqrt = {
    apply (x) {
        return Math.sign(x) * Math.sqrt(Math.abs(x));
    },
    invert (x) {
        return Math.sign(x) * (x * x);
    }
};
function transformPow(exponent) {
    return exponent === 0.5 ? transformSqrt : {
        apply (x) {
            return Math.sign(x) * Math.pow(Math.abs(x), exponent);
        },
        invert (x) {
            return Math.sign(x) * Math.pow(Math.abs(x), 1 / exponent);
        }
    };
}
function transformSymlog(constant) {
    return {
        apply (x) {
            return Math.sign(x) * Math.log1p(Math.abs(x / constant));
        },
        invert (x) {
            return Math.sign(x) * Math.expm1(Math.abs(x)) * constant;
        }
    };
}
}),
"[project]/node_modules/@observablehq/plot/src/scales/temporal.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "createScaleTime",
    ()=>createScaleTime,
    "createScaleUtc",
    ()=>createScaleUtc
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$time$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleTime$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale/src/time.js [app-client] (ecmascript) <export default as scaleTime>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$utcTime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleUtc$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale/src/utcTime.js [app-client] (ecmascript) <export default as scaleUtc>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales/quantitative.js [app-client] (ecmascript)");
;
;
function createScaleT(key, scale, channels, options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleQ"])(key, scale, channels, options);
}
function createScaleTime(key, channels, options) {
    return createScaleT(key, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$time$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleTime$3e$__["scaleTime"])(), channels, options);
}
function createScaleUtc(key, channels, options) {
    return createScaleT(key, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$utcTime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleUtc$3e$__["scaleUtc"])(), channels, options);
}
}),
"[project]/node_modules/@observablehq/plot/src/scales/ordinal.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "createScaleBand",
    ()=>createScaleBand,
    "createScaleOrdinal",
    ()=>createScaleOrdinal,
    "createScalePoint",
    ()=>createScalePoint,
    "ordinalImplicit",
    ()=>ordinalImplicit
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$internmap$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/internmap/src/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/extent.js [app-client] (ecmascript) <export default as extent>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$quantize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantize$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-interpolate/src/quantize.js [app-client] (ecmascript) <export default as quantize>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$reverse$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__reverse$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/reverse.js [app-client] (ecmascript) <export default as reverse>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sort$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sort$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/sort.js [app-client] (ecmascript) <export default as sort>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/symbol.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$band$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleBand$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale/src/band.js [app-client] (ecmascript) <export default as scaleBand>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$ordinal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleOrdinal$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale/src/ordinal.js [app-client] (ecmascript) <export default as scaleOrdinal>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$band$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__point__as__scalePoint$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale/src/band.js [app-client] (ecmascript) <export point as scalePoint>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$ordinal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__implicit__as__scaleImplicit$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale/src/ordinal.js [app-client] (ecmascript) <export implicit as scaleImplicit>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/defined.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$symbol$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/symbol.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$schemes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales/schemes.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
const ordinalImplicit = Symbol("ordinal");
function createScaleO(key, scale, channels, param) {
    let { type, interval, domain, range, reverse, hint } = param;
    interval = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeRangeInterval"])(interval, type);
    if (domain === undefined) domain = inferDomain(channels, interval, key);
    if (type === "categorical" || type === ordinalImplicit) type = "ordinal"; // shorthand for color schemes
    if (reverse) domain = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$reverse$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__reverse$3e$__["reverse"])(domain);
    domain = scale.domain(domain).domain(); // deduplicate
    if (range !== undefined) {
        // If the range is specified as a function, pass it the domain.
        if (typeof range === "function") range = range(domain);
        scale.range(range);
    }
    return {
        type,
        domain,
        range,
        scale,
        hint,
        interval
    };
}
function createScaleOrdinal(key, channels, param) {
    let { type, interval, domain, range, scheme, unknown, ...options } = param;
    interval = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeRangeInterval"])(interval, type);
    if (domain === undefined) domain = inferDomain(channels, interval, key);
    let hint;
    if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].get(key) === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["symbol"]) {
        hint = inferSymbolHint(channels);
        range = range === undefined ? inferSymbolRange(hint) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["map"])(range, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$symbol$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeSymbol"]);
    } else if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].get(key) === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["color"]) {
        if (range === undefined && (type === "ordinal" || type === ordinalImplicit)) {
            range = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$schemes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeBooleanRange"])(domain, scheme);
            if (range !== undefined) scheme = undefined; // Don’t re-apply scheme.
        }
        if (scheme === undefined && range === undefined) {
            scheme = type === "ordinal" ? "turbo" : "observable10";
        }
        if (scheme !== undefined) {
            if (range !== undefined) {
                const interpolate = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$schemes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["quantitativeScheme"])(scheme);
                const t0 = range[0], d = range[1] - range[0];
                range = (param)=>{
                    let { length: n } = param;
                    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$quantize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantize$3e$__["quantize"])((t)=>interpolate(t0 + d * t), n);
                };
            } else {
                range = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$schemes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ordinalScheme"])(scheme);
            }
        }
    }
    if (unknown === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$ordinal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__implicit__as__scaleImplicit$3e$__["scaleImplicit"]) {
        throw new Error("implicit unknown on ".concat(key, " scale is not supported"));
    }
    return createScaleO(key, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$ordinal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleOrdinal$3e$__["scaleOrdinal"])().unknown(unknown), channels, {
        ...options,
        type,
        domain,
        range,
        hint
    });
}
function createScalePoint(key, channels, param) {
    let { align = 0.5, padding = 0.5, ...options } = param;
    return maybeRound((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$band$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__point__as__scalePoint$3e$__["scalePoint"])().align(align).padding(padding), channels, options, key);
}
function createScaleBand(key, channels, param) {
    let { align = 0.5, padding = 0.1, paddingInner = padding, paddingOuter = key === "fx" || key === "fy" ? 0 : padding, ...options } = param;
    return maybeRound((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$band$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleBand$3e$__["scaleBand"])().align(align).paddingInner(paddingInner).paddingOuter(paddingOuter), channels, options, key);
}
function maybeRound(scale, channels, options, key) {
    let { round } = options;
    if (round !== undefined) scale.round(round = !!round);
    scale = createScaleO(key, scale, channels, options);
    scale.round = round; // preserve for autoScaleRound
    return scale;
}
function inferDomain(channels, interval, key) {
    const values = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$internmap$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InternSet"]();
    for (const { value, domain } of channels){
        if (domain !== undefined) return domain(); // see channelDomain
        if (value === undefined) continue;
        for (const v of value)values.add(v);
    }
    if (interval !== undefined) {
        const [min, max] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__["extent"])(values).map(interval.floor, interval);
        return interval.range(min, interval.offset(max));
    }
    if (values.size > 10e3 && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].get(key) === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["position"]) {
        throw new Error("implicit ordinal domain of ".concat(key, " scale has more than 10,000 values"));
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sort$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sort$3e$__["sort"])(values, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ascendingDefined"]);
}
// If all channels provide a consistent hint, propagate it to the scale.
function inferHint(channels, key) {
    let value;
    for (const { hint } of channels){
        const candidate = hint === null || hint === void 0 ? void 0 : hint[key];
        if (candidate === undefined) continue; // no hint here
        if (value === undefined) value = candidate; // first hint
        else if (value !== candidate) return; // inconsistent hint
    }
    return value;
}
function inferSymbolHint(channels) {
    return {
        fill: inferHint(channels, "fill"),
        stroke: inferHint(channels, "stroke")
    };
}
function inferSymbolRange(hint) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNoneish"])(hint.fill) ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["symbolsStroke"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["symbolsFill"];
}
}),
"[project]/node_modules/@observablehq/plot/src/scales.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "autoScaleRange",
    ()=>autoScaleRange,
    "createScaleFunctions",
    ()=>createScaleFunctions,
    "createScales",
    ()=>createScales,
    "exposeScales",
    ()=>exposeScales,
    "inferScaleOrder",
    ()=>inferScaleOrder,
    "innerDimensions",
    ()=>innerDimensions,
    "isCollapsed",
    ()=>isCollapsed,
    "isDivergingScale",
    ()=>isDivergingScale,
    "isOrdinalScale",
    ()=>isOrdinalScale,
    "isTemporalScale",
    ()=>isTemporalScale,
    "isThresholdScale",
    ()=>isThresholdScale,
    "normalizeScale",
    ()=>normalizeScale,
    "outerDimensions",
    ()=>outerDimensions,
    "scale",
    ()=>scale
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/order.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales/quantitative.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$diverging$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales/diverging.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$schemes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales/schemes.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$temporal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales/temporal.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$ordinal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales/ordinal.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$symbol$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/symbol.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$warnings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/warnings.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
function createScales(channelsByScale) {
    let { label: globalLabel, inset: globalInset = 0, insetTop: globalInsetTop = globalInset, insetRight: globalInsetRight = globalInset, insetBottom: globalInsetBottom = globalInset, insetLeft: globalInsetLeft = globalInset, round, nice, clamp, zero, align, padding, projection, facet: { label: facetLabel = globalLabel } = {}, ...options } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const scales = {};
    for (const [key, channels] of channelsByScale){
        const scaleOptions = options[key];
        const scale = createScale(key, channels, {
            round: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].get(key) === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["position"] ? round : undefined,
            nice,
            clamp,
            zero,
            align,
            padding,
            projection,
            ...scaleOptions
        });
        if (scale) {
            // populate generic scale options (percent, transform, insets)
            let { label = key === "fx" || key === "fy" ? facetLabel : globalLabel, percent, transform, inset, insetTop = inset !== undefined ? inset : key === "y" ? globalInsetTop : 0, insetRight = inset !== undefined ? inset : key === "x" ? globalInsetRight : 0, insetBottom = inset !== undefined ? inset : key === "y" ? globalInsetBottom : 0, insetLeft = inset !== undefined ? inset : key === "x" ? globalInsetLeft : 0 // not fx
             } = scaleOptions || {};
            if (transform == null) transform = undefined;
            else if (typeof transform !== "function") throw new Error("invalid scale transform; not a function");
            scale.percent = !!percent;
            scale.label = label === undefined ? inferScaleLabel(channels, scale) : label;
            scale.transform = transform;
            if (key === "x" || key === "fx") {
                scale.insetLeft = +insetLeft;
                scale.insetRight = +insetRight;
            } else if (key === "y" || key === "fy") {
                scale.insetTop = +insetTop;
                scale.insetBottom = +insetBottom;
            }
            scales[key] = scale;
        }
    }
    return scales;
}
function createScaleFunctions(descriptors) {
    const scales = {};
    const scaleFunctions = {
        scales
    };
    for (const [key, descriptor] of Object.entries(descriptors)){
        const { scale, type, interval, label } = descriptor;
        scales[key] = exposeScale(descriptor);
        scaleFunctions[key] = scale;
        // TODO: pass these properties, which are needed for axes, in the descriptor.
        scale.type = type;
        if (interval != null) scale.interval = interval;
        if (label != null) scale.label = label;
    }
    return scaleFunctions;
}
function autoScaleRange(scales, dimensions) {
    const { x, y, fx, fy } = scales;
    const superdimensions = fx || fy ? outerDimensions(dimensions) : dimensions;
    if (fx) autoScaleRangeX(fx, superdimensions);
    if (fy) autoScaleRangeY(fy, superdimensions);
    const subdimensions = fx || fy ? innerDimensions(scales, dimensions) : dimensions;
    if (x) autoScaleRangeX(x, subdimensions);
    if (y) autoScaleRangeY(y, subdimensions);
}
// Channels can have labels; if all the channels for a given scale are
// consistently labeled (i.e., have the same value if not undefined), and the
// corresponding scale doesn’t already have an explicit label, then the
// channels’ label is promoted to the scale. This inferred label should have an
// orientation-appropriate arrow added when used as an axis, but we don’t want
// to add the arrow when the label is set explicitly as an option; so, the
// inferred label is distinguished as an object with an “inferred” property.
function inferScaleLabel() {
    let channels = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], scale = arguments.length > 1 ? arguments[1] : void 0;
    let label;
    for (const { label: l } of channels){
        if (l === undefined) continue;
        if (label === undefined) label = l;
        else if (label !== l) return;
    }
    if (label === undefined) return;
    if (!isOrdinalScale(scale) && scale.percent) label = "".concat(label, " (%)");
    return {
        inferred: true,
        toString: ()=>label
    };
}
function inferScaleOrder(scale) {
    return Math.sign((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["orderof"])(scale.domain())) * Math.sign((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["orderof"])(scale.range()));
}
function outerDimensions(dimensions) {
    const { marginTop, marginRight, marginBottom, marginLeft, width, height, facet: { marginTop: facetMarginTop, marginRight: facetMarginRight, marginBottom: facetMarginBottom, marginLeft: facetMarginLeft } } = dimensions;
    return {
        marginTop: Math.max(marginTop, facetMarginTop),
        marginRight: Math.max(marginRight, facetMarginRight),
        marginBottom: Math.max(marginBottom, facetMarginBottom),
        marginLeft: Math.max(marginLeft, facetMarginLeft),
        width,
        height
    };
}
function innerDimensions(param, dimensions) {
    let { fx, fy } = param;
    const { marginTop, marginRight, marginBottom, marginLeft, width, height } = outerDimensions(dimensions);
    return {
        marginTop,
        marginRight,
        marginBottom,
        marginLeft,
        width: fx ? fx.scale.bandwidth() + marginLeft + marginRight : width,
        height: fy ? fy.scale.bandwidth() + marginTop + marginBottom : height,
        facet: {
            width,
            height
        }
    };
}
function autoScaleRangeX(scale, dimensions) {
    if (scale.range === undefined) {
        const { insetLeft, insetRight } = scale;
        const { width, marginLeft = 0, marginRight = 0 } = dimensions;
        const left = marginLeft + insetLeft;
        const right = width - marginRight - insetRight;
        scale.range = [
            left,
            Math.max(left, right)
        ];
        if (!isOrdinalScale(scale)) scale.range = piecewiseRange(scale);
        scale.scale.range(scale.range);
    }
    autoScaleRound(scale);
}
function autoScaleRangeY(scale, dimensions) {
    if (scale.range === undefined) {
        const { insetTop, insetBottom } = scale;
        const { height, marginTop = 0, marginBottom = 0 } = dimensions;
        const top = marginTop + insetTop;
        const bottom = height - marginBottom - insetBottom;
        scale.range = [
            Math.max(top, bottom),
            top
        ];
        if (!isOrdinalScale(scale)) scale.range = piecewiseRange(scale);
        else scale.range.reverse();
        scale.scale.range(scale.range);
    }
    autoScaleRound(scale);
}
function autoScaleRound(scale) {
    if (scale.round === undefined && isBandScale(scale) && roundError(scale) <= 30) {
        scale.scale.round(true);
    }
}
// If we were to turn on rounding for this band or point scale, how much wasted
// space would it introduce (on both ends of the range)? This must match
// d3.scaleBand’s rounding behavior:
// https://github.com/d3/d3-scale/blob/83555bd759c7314420bd4240642beda5e258db9e/src/band.js#L20-L32
function roundError(param) {
    let { scale } = param;
    const n = scale.domain().length;
    const [start, stop] = scale.range();
    const paddingInner = scale.paddingInner ? scale.paddingInner() : 1;
    const paddingOuter = scale.paddingOuter ? scale.paddingOuter() : scale.padding();
    const m = n - paddingInner;
    const step = Math.abs(stop - start) / Math.max(1, m + paddingOuter * 2);
    return (step - Math.floor(step)) * m;
}
function piecewiseRange(scale) {
    const length = scale.scale.domain().length + isThresholdScale(scale);
    if (!(length > 2)) return scale.range;
    const [start, end] = scale.range;
    return Array.from({
        length
    }, (_, i)=>start + i / (length - 1) * (end - start));
}
function normalizeScale(key, scale, hint) {
    return createScale(key, hint === undefined ? undefined : [
        {
            hint
        }
    ], {
        ...scale
    });
}
function createScale(key) {
    let channels = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    const type = inferScaleType(key, channels, options);
    // Warn for common misuses of implicit ordinal scales. We disable this test if
    // you specify a scale interval or if you set the domain or range explicitly,
    // since setting the domain or range (typically with a cardinality of more than
    // two) is another indication that you intended for the scale to be ordinal; we
    // also disable it for facet scales since these are always band scales.
    if (options.type === undefined && options.domain === undefined && options.range === undefined && options.interval == null && key !== "fx" && key !== "fy" && isOrdinalScale({
        type
    })) {
        const values = channels.map((param)=>{
            let { value } = param;
            return value;
        }).filter((value)=>value !== undefined);
        if (values.some(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isTemporal"])) (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$warnings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["warn"])("Warning: some data associated with the ".concat(key, ' scale are dates. Dates are typically associated with a "utc" or "time" scale rather than a "').concat(formatScaleType(type), '" scale. If you are using a bar mark, you probably want a rect mark with the interval option instead; if you are using a group transform, you probably want a bin transform instead. If you want to treat this data as ordinal, you can specify the interval of the ').concat(key, " scale (e.g., d3.utcDay), or you can suppress this warning by setting the type of the ").concat(key, ' scale to "').concat(formatScaleType(type), '".'));
        else if (values.some(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isTemporalString"])) (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$warnings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["warn"])("Warning: some data associated with the ".concat(key, ' scale are strings that appear to be dates (e.g., YYYY-MM-DD). If these strings represent dates, you should parse them to Date objects. Dates are typically associated with a "utc" or "time" scale rather than a "').concat(formatScaleType(type), '" scale. If you are using a bar mark, you probably want a rect mark with the interval option instead; if you are using a group transform, you probably want a bin transform instead. If you want to treat this data as ordinal, you can suppress this warning by setting the type of the ').concat(key, ' scale to "').concat(formatScaleType(type), '".'));
        else if (values.some(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNumericString"])) (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$warnings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["warn"])("Warning: some data associated with the ".concat(key, ' scale are strings that appear to be numbers. If these strings represent numbers, you should parse or coerce them to numbers. Numbers are typically associated with a "linear" scale rather than a "').concat(formatScaleType(type), '" scale. If you want to treat this data as ordinal, you can specify the interval of the ').concat(key, " scale (e.g., 1 for integers), or you can suppress this warning by setting the type of the ").concat(key, ' scale to "').concat(formatScaleType(type), '".'));
    }
    options.type = type; // Mutates input!
    // Once the scale type is known, coerce the associated channel values and any
    // explicitly-specified domain to the expected type.
    switch(type){
        case "diverging":
        case "diverging-sqrt":
        case "diverging-pow":
        case "diverging-log":
        case "diverging-symlog":
        case "cyclical":
        case "sequential":
        case "linear":
        case "sqrt":
        case "threshold":
        case "quantile":
        case "pow":
        case "log":
        case "symlog":
            options = coerceType(channels, options, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["coerceNumbers"]);
            break;
        case "identity":
            switch(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].get(key)){
                case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["position"]:
                    options = coerceType(channels, options, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["coerceNumbers"]);
                    break;
                case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["symbol"]:
                    options = coerceType(channels, options, coerceSymbols);
                    break;
            }
            break;
        case "utc":
        case "time":
            options = coerceType(channels, options, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["coerceDates"]);
            break;
    }
    switch(type){
        case "diverging":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$diverging$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleDiverging"])(key, channels, options);
        case "diverging-sqrt":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$diverging$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleDivergingSqrt"])(key, channels, options);
        case "diverging-pow":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$diverging$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleDivergingPow"])(key, channels, options);
        case "diverging-log":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$diverging$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleDivergingLog"])(key, channels, options);
        case "diverging-symlog":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$diverging$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleDivergingSymlog"])(key, channels, options);
        case "categorical":
        case "ordinal":
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$ordinal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ordinalImplicit"]:
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$ordinal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleOrdinal"])(key, channels, options);
        case "cyclical":
        case "sequential":
        case "linear":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleLinear"])(key, channels, options);
        case "sqrt":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleSqrt"])(key, channels, options);
        case "threshold":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleThreshold"])(key, channels, options);
        case "quantile":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleQuantile"])(key, channels, options);
        case "quantize":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleQuantize"])(key, channels, options);
        case "pow":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScalePow"])(key, channels, options);
        case "log":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleLog"])(key, channels, options);
        case "symlog":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleSymlog"])(key, channels, options);
        case "utc":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$temporal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleUtc"])(key, channels, options);
        case "time":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$temporal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleTime"])(key, channels, options);
        case "point":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$ordinal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScalePoint"])(key, channels, options);
        case "band":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$ordinal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleBand"])(key, channels, options);
        case "identity":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleIdentity"])(key);
        case undefined:
            return;
        default:
            throw new Error("unknown scale type: ".concat(type));
    }
}
function formatScaleType(type) {
    return typeof type === "symbol" ? type.description : type;
}
function maybeScaleType(type) {
    return typeof type === "string" ? "".concat(type).toLowerCase() : type;
}
// A special type symbol when the x and y scales are replaced with a projection.
const typeProjection = {
    toString: ()=>"projection"
};
function inferScaleType(key, channels, param) {
    let { type, domain, range, scheme, pivot, projection } = param;
    var _this;
    type = maybeScaleType(type);
    // The facet scales are always band scales; this cannot be changed.
    if (key === "fx" || key === "fy") return "band";
    // If a projection is specified, the x- and y-scales are disabled; these
    // channels will be projected rather than scaled. (But still check that none
    // of the associated channels are incompatible with a projection.)
    if ((key === "x" || key === "y") && projection != null) type = typeProjection;
    // If a channel dictates a scale type, make sure that it is consistent with
    // the user-specified scale type (if any) and all other channels. For example,
    // barY requires x to be a band scale and disallows any other scale type.
    for (const channel of channels){
        const t = maybeScaleType(channel.type);
        if (t === undefined) continue;
        else if (type === undefined) type = t;
        else if (type !== t) throw new Error("scale incompatible with channel: ".concat(type, " !== ").concat(t));
    }
    // If the scale, a channel, or user specified a (consistent) type, return it.
    if (type === typeProjection) return;
    if (type !== undefined) return type;
    // If there’s no data (and no type) associated with this scale, don’t create a scale.
    if (domain === undefined && !channels.some((param)=>{
        let { value } = param;
        return value !== undefined;
    })) return;
    // Some scales have default types.
    const kind = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].get(key);
    if (kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["radius"]) return "sqrt";
    if (kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["opacity"] || kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["length"]) return "linear";
    if (kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["symbol"]) return "ordinal";
    // If a domain or range is explicitly specified and doesn’t have two values,
    // assume it’s ordinal. You can still use a “piecewise” (or “polylinear”)
    // scale, but you must set the type explicitly.
    const n = (_this = domain !== null && domain !== void 0 ? domain : range) === null || _this === void 0 ? void 0 : _this.length;
    if (n < 2 || n > 2) return asOrdinalType(kind);
    // Otherwise, infer the scale type from the data! Prefer the domain, if
    // present, over channels. (The domain and channels should be consistently
    // typed, and the domain is more explicit and typically much smaller.) We only
    // check the first defined value for expedience and simplicity; we expect
    // that the types are consistent.
    if (domain !== undefined) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isOrdinal"])(domain)) return asOrdinalType(kind);
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isTemporal"])(domain)) return "utc";
    } else {
        const values = channels.map((param)=>{
            let { value } = param;
            return value;
        }).filter((value)=>value !== undefined);
        if (values.some(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isOrdinal"])) return asOrdinalType(kind);
        if (values.some(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isTemporal"])) return "utc";
    }
    // For color scales, take a hint from the color scheme and pivot option.
    if (kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["color"]) {
        if (pivot != null || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$schemes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isDivergingScheme"])(scheme)) return "diverging";
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$schemes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isCategoricalScheme"])(scheme)) return "categorical";
    }
    return "linear";
}
// Positional scales default to a point scale instead of an ordinal scale.
function asOrdinalType(kind) {
    switch(kind){
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["position"]:
            return "point";
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["color"]:
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$ordinal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ordinalImplicit"];
        default:
            return "ordinal";
    }
}
function isTemporalScale(param) {
    let { type } = param;
    return type === "time" || type === "utc";
}
function isOrdinalScale(param) {
    let { type } = param;
    return type === "ordinal" || type === "point" || type === "band" || type === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$ordinal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ordinalImplicit"];
}
function isThresholdScale(param) {
    let { type } = param;
    return type === "threshold";
}
function isBandScale(param) {
    let { type } = param;
    return type === "point" || type === "band";
}
function isDivergingScale(param) {
    let { type } = param;
    return /^diverging($|-)/.test(type);
}
function isCollapsed(scale) {
    if (scale === undefined) return true; // treat missing scale as collapsed
    const domain = scale.domain();
    const value = scale(domain[0]);
    for(let i = 1, n = domain.length; i < n; ++i){
        if (scale(domain[i]) - value) {
            return false;
        }
    }
    return true;
}
// Mutates channel.value!
function coerceType(channels, param, coerceValues) {
    let { domain, ...options } = param;
    for (const c of channels){
        if (c.value !== undefined) {
            var _c_value;
            if (domain === undefined) domain = (_c_value = c.value) === null || _c_value === void 0 ? void 0 : _c_value.domain; // promote channel domain
            c.value = coerceValues(c.value);
        }
    }
    return {
        domain: domain === undefined ? domain : coerceValues(domain),
        ...options
    };
}
function coerceSymbols(values) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["map"])(values, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$symbol$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeSymbol"]);
}
function scale() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    let scale;
    for(const key in options){
        if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].has(key)) continue; // ignore unknown properties
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isScaleOptions"])(options[key])) continue; // e.g., ignore {color: "red"}
        if (scale !== undefined) throw new Error("ambiguous scale definition; multiple scales found");
        scale = exposeScale(normalizeScale(key, options[key]));
    }
    if (scale === undefined) throw new Error("invalid scale definition; no scale found");
    return scale;
}
function exposeScales(scales) {
    return (key)=>{
        if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].has(key = "".concat(key))) throw new Error("unknown scale: ".concat(key));
        return scales[key];
    };
}
// Note: axis- and legend-related properties (such as label, ticks and
// tickFormat) are not included here as they do not affect the scale’s behavior.
function exposeScale(param) {
    let { scale, type, domain, range, interpolate, interval, transform, percent, pivot } = param;
    if (type === "identity") return {
        type: "identity",
        apply: (d)=>d,
        invert: (d)=>d
    };
    const unknown = scale.unknown ? scale.unknown() : undefined;
    return {
        type,
        domain: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["slice"])(domain),
        ...range !== undefined && {
            range: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["slice"])(range)
        },
        ...transform !== undefined && {
            transform
        },
        ...percent && {
            percent
        },
        ...unknown !== undefined && {
            unknown
        },
        ...interval !== undefined && {
            interval
        },
        // quantitative
        ...interpolate !== undefined && {
            interpolate
        },
        ...scale.clamp && {
            clamp: scale.clamp()
        },
        // diverging (always asymmetric; we never want to apply the symmetric transform twice)
        ...pivot !== undefined && {
            pivot,
            symmetric: false
        },
        // log, diverging-log
        ...scale.base && {
            base: scale.base()
        },
        // pow, diverging-pow
        ...scale.exponent && {
            exponent: scale.exponent()
        },
        // symlog, diverging-symlog
        ...scale.constant && {
            constant: scale.constant()
        },
        // band, point
        ...scale.align && {
            align: scale.align(),
            round: scale.round()
        },
        ...scale.padding && (scale.paddingInner ? {
            paddingInner: scale.paddingInner(),
            paddingOuter: scale.paddingOuter()
        } : {
            padding: scale.padding()
        }),
        ...scale.bandwidth && {
            bandwidth: scale.bandwidth(),
            step: scale.step()
        },
        // utilities
        apply: (t)=>scale(t),
        ...scale.invert && {
            invert: (t)=>scale.invert(t)
        }
    };
}
}),
"[project]/node_modules/@observablehq/plot/src/facet.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "createFacets",
    ()=>createFacets,
    "facetExclude",
    ()=>facetExclude,
    "facetFilter",
    ()=>facetFilter,
    "facetGroups",
    ()=>facetGroups,
    "facetTranslator",
    ()=>facetTranslator,
    "maybeFacetAnchor",
    ()=>maybeFacetAnchor,
    "recreateFacets",
    ()=>recreateFacets
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$internmap$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/internmap/src/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$cross$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__cross$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/cross.js [app-client] (ecmascript) <export default as cross>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/group.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sum$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/sum.js [app-client] (ecmascript) <export default as sum>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales.js [app-client] (ecmascript)");
;
;
;
function createFacets(channelsByScale, options) {
    const { fx, fy } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScales"])(channelsByScale, options);
    const fxDomain = fx === null || fx === void 0 ? void 0 : fx.scale.domain();
    const fyDomain = fy === null || fy === void 0 ? void 0 : fy.scale.domain();
    return fxDomain && fyDomain ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$cross$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__cross$3e$__["cross"])(fxDomain, fyDomain).map((param, i)=>{
        let [x, y] = param;
        return {
            x,
            y,
            i
        };
    }) : fxDomain ? fxDomain.map((x, i)=>({
            x,
            i
        })) : fyDomain ? fyDomain.map((y, i)=>({
            y,
            i
        })) : undefined;
}
function recreateFacets(facets, param) {
    let { x: X, y: Y } = param;
    X && (X = facetIndex(X));
    Y && (Y = facetIndex(Y));
    return facets.filter(X && Y // remove any facets no longer present in the domain
     ? (f)=>X.has(f.x) && Y.has(f.y) : X ? (f)=>X.has(f.x) : (f)=>Y.has(f.y)).sort(X && Y // reorder facets to match the new scale domains
     ? (a, b)=>X.get(a.x) - X.get(b.x) || Y.get(a.y) - Y.get(b.y) : X ? (a, b)=>X.get(a.x) - X.get(b.x) : (a, b)=>Y.get(a.y) - Y.get(b.y));
}
function facetGroups(data, param) {
    let { fx, fy } = param;
    const I = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["range"])(data);
    const FX = fx === null || fx === void 0 ? void 0 : fx.value;
    const FY = fy === null || fy === void 0 ? void 0 : fy.value;
    return fx && fy ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rollup"])(I, (G)=>(G.fx = FX[G[0]], G.fy = FY[G[0]], G), (i)=>FX[i], (i)=>FY[i]) : fx ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rollup"])(I, (G)=>(G.fx = FX[G[0]], G), (i)=>FX[i]) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rollup"])(I, (G)=>(G.fy = FY[G[0]], G), (i)=>FY[i]);
}
function facetTranslator(fx, fy, param) {
    let { marginTop, marginLeft } = param;
    const x = fx ? (param)=>{
        let { x } = param;
        return fx(x) - marginLeft;
    } : ()=>0;
    const y = fy ? (param)=>{
        let { y } = param;
        return fy(y) - marginTop;
    } : ()=>0;
    return function(d) {
        if (this.tagName === "svg") {
            this.setAttribute("x", x(d));
            this.setAttribute("y", y(d));
        } else {
            this.setAttribute("transform", "translate(".concat(x(d), ",").concat(y(d), ")"));
        }
    };
}
function facetExclude(index) {
    const ex = [];
    const e = new Uint32Array((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sum$3e$__["sum"])(index, (d)=>d.length));
    for (const i of index){
        let n = 0;
        for (const j of index){
            if (i === j) continue;
            e.set(j, n);
            n += j.length;
        }
        ex.push(e.slice(0, n));
    }
    return ex;
}
const facetAnchors = new Map([
    [
        "top",
        facetAnchorTop
    ],
    [
        "right",
        facetAnchorRight
    ],
    [
        "bottom",
        facetAnchorBottom
    ],
    [
        "left",
        facetAnchorLeft
    ],
    [
        "top-left",
        and(facetAnchorTop, facetAnchorLeft)
    ],
    [
        "top-right",
        and(facetAnchorTop, facetAnchorRight)
    ],
    [
        "bottom-left",
        and(facetAnchorBottom, facetAnchorLeft)
    ],
    [
        "bottom-right",
        and(facetAnchorBottom, facetAnchorRight)
    ],
    [
        "top-empty",
        facetAnchorTopEmpty
    ],
    [
        "right-empty",
        facetAnchorRightEmpty
    ],
    [
        "bottom-empty",
        facetAnchorBottomEmpty
    ],
    [
        "left-empty",
        facetAnchorLeftEmpty
    ],
    [
        "empty",
        facetAnchorEmpty
    ]
]);
function maybeFacetAnchor(facetAnchor) {
    if (facetAnchor == null) return null;
    const anchor = facetAnchors.get("".concat(facetAnchor).toLowerCase());
    if (anchor) return anchor;
    throw new Error("invalid facet anchor: ".concat(facetAnchor));
}
const indexCache = new WeakMap();
function facetIndex(V) {
    let I = indexCache.get(V);
    if (!I) indexCache.set(V, I = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$internmap$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InternMap"]((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["map"])(V, (v, i)=>[
            v,
            i
        ])));
    return I;
}
// Like V.indexOf(v), but with the same semantics as InternMap.
function facetIndexOf(V, v) {
    return facetIndex(V).get(v);
}
// Like facets.find, but with the same semantics as InternMap.
function facetFind(facets, x, y) {
    x = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keyof"])(x);
    y = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keyof"])(y);
    return facets.find((f)=>Object.is((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keyof"])(f.x), x) && Object.is((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keyof"])(f.y), y));
}
function facetEmpty(facets, x, y) {
    var _facetFind;
    return (_facetFind = facetFind(facets, x, y)) === null || _facetFind === void 0 ? void 0 : _facetFind.empty;
}
function facetAnchorTop(facets, param, param1) {
    let { y: Y } = param, { y } = param1;
    return Y ? facetIndexOf(Y, y) === 0 : true;
}
function facetAnchorBottom(facets, param, param1) {
    let { y: Y } = param, { y } = param1;
    return Y ? facetIndexOf(Y, y) === Y.length - 1 : true;
}
function facetAnchorLeft(facets, param, param1) {
    let { x: X } = param, { x } = param1;
    return X ? facetIndexOf(X, x) === 0 : true;
}
function facetAnchorRight(facets, param, param1) {
    let { x: X } = param, { x } = param1;
    return X ? facetIndexOf(X, x) === X.length - 1 : true;
}
function facetAnchorTopEmpty(facets, param, param1) {
    let { y: Y } = param, { x, y, empty } = param1;
    if (empty) return false;
    if (!Y) return;
    const i = facetIndexOf(Y, y);
    if (i > 0) return facetEmpty(facets, x, Y[i - 1]);
}
function facetAnchorBottomEmpty(facets, param, param1) {
    let { y: Y } = param, { x, y, empty } = param1;
    if (empty) return false;
    if (!Y) return;
    const i = facetIndexOf(Y, y);
    if (i < Y.length - 1) return facetEmpty(facets, x, Y[i + 1]);
}
function facetAnchorLeftEmpty(facets, param, param1) {
    let { x: X } = param, { x, y, empty } = param1;
    if (empty) return false;
    if (!X) return;
    const i = facetIndexOf(X, x);
    if (i > 0) return facetEmpty(facets, X[i - 1], y);
}
function facetAnchorRightEmpty(facets, param, param1) {
    let { x: X } = param, { x, y, empty } = param1;
    if (empty) return false;
    if (!X) return;
    const i = facetIndexOf(X, x);
    if (i < X.length - 1) return facetEmpty(facets, X[i + 1], y);
}
function facetAnchorEmpty(facets, channels, param) {
    let { empty } = param;
    return empty;
}
function and(a, b) {
    return function() {
        return a.apply(null, arguments) && b.apply(null, arguments);
    };
}
function facetFilter(facets, param) {
    let { channels: { fx, fy }, groups } = param;
    return fx && fy ? facets.map((param)=>{
        let { x, y } = param;
        var _groups_get;
        var _groups_get_get;
        return (_groups_get_get = (_groups_get = groups.get(x)) === null || _groups_get === void 0 ? void 0 : _groups_get.get(y)) !== null && _groups_get_get !== void 0 ? _groups_get_get : [];
    }) : fx ? facets.map((param)=>{
        let { x } = param;
        var _groups_get;
        return (_groups_get = groups.get(x)) !== null && _groups_get !== void 0 ? _groups_get : [];
    }) : facets.map((param)=>{
        let { y } = param;
        var _groups_get;
        return (_groups_get = groups.get(y)) !== null && _groups_get !== void 0 ? _groups_get : [];
    });
}
}),
"[project]/node_modules/@observablehq/plot/src/projection.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "applyPosition",
    ()=>applyPosition,
    "createProjection",
    ()=>createProjection,
    "getGeometryChannels",
    ()=>getGeometryChannels,
    "hasProjection",
    ()=>hasProjection,
    "project",
    ()=>project,
    "projectionAspectRatio",
    ()=>projectionAspectRatio,
    "xyProjection",
    ()=>xyProjection
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$albers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoAlbers$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-geo/src/projection/albers.js [app-client] (ecmascript) <export default as geoAlbers>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$albersUsa$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoAlbersUsa$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-geo/src/projection/albersUsa.js [app-client] (ecmascript) <export default as geoAlbersUsa>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$azimuthalEqualArea$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoAzimuthalEqualArea$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-geo/src/projection/azimuthalEqualArea.js [app-client] (ecmascript) <export default as geoAzimuthalEqualArea>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$azimuthalEquidistant$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoAzimuthalEquidistant$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-geo/src/projection/azimuthalEquidistant.js [app-client] (ecmascript) <export default as geoAzimuthalEquidistant>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$clip$2f$rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoClipRectangle$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-geo/src/clip/rectangle.js [app-client] (ecmascript) <export default as geoClipRectangle>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$conicConformal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoConicConformal$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-geo/src/projection/conicConformal.js [app-client] (ecmascript) <export default as geoConicConformal>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$conicEqualArea$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoConicEqualArea$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-geo/src/projection/conicEqualArea.js [app-client] (ecmascript) <export default as geoConicEqualArea>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$conicEquidistant$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoConicEquidistant$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-geo/src/projection/conicEquidistant.js [app-client] (ecmascript) <export default as geoConicEquidistant>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$equalEarth$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoEqualEarth$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-geo/src/projection/equalEarth.js [app-client] (ecmascript) <export default as geoEqualEarth>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$equirectangular$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoEquirectangular$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-geo/src/projection/equirectangular.js [app-client] (ecmascript) <export default as geoEquirectangular>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$gnomonic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoGnomonic$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-geo/src/projection/gnomonic.js [app-client] (ecmascript) <export default as geoGnomonic>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$mercator$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoMercator$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-geo/src/projection/mercator.js [app-client] (ecmascript) <export default as geoMercator>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$orthographic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoOrthographic$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-geo/src/projection/orthographic.js [app-client] (ecmascript) <export default as geoOrthographic>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$path$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoPath$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-geo/src/path/index.js [app-client] (ecmascript) <export default as geoPath>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$stereographic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoStereographic$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-geo/src/projection/stereographic.js [app-client] (ecmascript) <export default as geoStereographic>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$stream$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoStream$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-geo/src/stream.js [app-client] (ecmascript) <export default as geoStream>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$transform$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoTransform$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-geo/src/transform.js [app-client] (ecmascript) <export default as geoTransform>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$transverseMercator$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoTransverseMercator$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-geo/src/projection/transverseMercator.js [app-client] (ecmascript) <export default as geoTransverseMercator>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$channel$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/channel.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$warnings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/warnings.js [app-client] (ecmascript)");
;
;
;
;
const pi = Math.PI;
const tau = 2 * pi;
const defaultAspectRatio = 0.618;
function createProjection() {
    let { projection, inset: globalInset = 0, insetTop = globalInset, insetRight = globalInset, insetBottom = globalInset, insetLeft = globalInset } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, dimensions = arguments.length > 1 ? arguments[1] : void 0;
    if (projection == null) return;
    if (typeof projection.stream === "function") return projection; // d3 projection
    let options;
    let domain;
    let clip = "frame";
    // If the projection was specified as an object with additional options,
    // extract those. The order of precedence for insetTop (and other insets) is:
    // projection.insetTop, projection.inset, (global) insetTop, (global) inset.
    // Any other options on this object will be passed through to the initializer.
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])(projection)) {
        let inset;
        ({ type: projection, domain, inset, insetTop = inset !== undefined ? inset : insetTop, insetRight = inset !== undefined ? inset : insetRight, insetBottom = inset !== undefined ? inset : insetBottom, insetLeft = inset !== undefined ? inset : insetLeft, clip = clip, ...options } = projection);
        if (projection == null) return;
    }
    // For named projections, retrieve the corresponding projection initializer.
    if (typeof projection !== "function") ({ type: projection } = namedProjection(projection));
    // Compute the frame dimensions and invoke the projection initializer.
    const { width, height, marginLeft, marginRight, marginTop, marginBottom } = dimensions;
    const dx = width - marginLeft - marginRight - insetLeft - insetRight;
    const dy = height - marginTop - marginBottom - insetTop - insetBottom;
    projection = projection === null || projection === void 0 ? void 0 : projection({
        width: dx,
        height: dy,
        clip,
        ...options
    });
    // The projection initializer might decide to not use a projection.
    if (projection == null) return;
    clip = maybePostClip(clip, marginLeft, marginTop, width - marginRight, height - marginBottom);
    // Translate the origin to the top-left corner, respecting margins and insets.
    let tx = marginLeft + insetLeft;
    let ty = marginTop + insetTop;
    let transform;
    // If a domain is specified, fit the projection to the frame.
    if (domain != null) {
        const [[x0, y0], [x1, y1]] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$path$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoPath$3e$__["geoPath"])(projection).bounds(domain);
        const k = Math.min(dx / (x1 - x0), dy / (y1 - y0));
        if (k > 0) {
            tx -= (k * (x0 + x1) - dx) / 2;
            ty -= (k * (y0 + y1) - dy) / 2;
            transform = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$transform$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoTransform$3e$__["geoTransform"])({
                point (x, y) {
                    this.stream.point(x * k + tx, y * k + ty);
                }
            });
        } else {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$warnings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["warn"])("Warning: the projection could not be fit to the specified domain; using the default scale.");
        }
    }
    transform !== null && transform !== void 0 ? transform : transform = tx === 0 && ty === 0 ? identity() : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$transform$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoTransform$3e$__["geoTransform"])({
        point (x, y) {
            this.stream.point(x + tx, y + ty);
        }
    });
    return {
        stream: (s)=>projection.stream(transform.stream(clip(s)))
    };
}
function namedProjection(projection) {
    switch("".concat(projection).toLowerCase()){
        case "albers-usa":
            return scaleProjection(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$albersUsa$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoAlbersUsa$3e$__["geoAlbersUsa"], 0.7463, 0.4673);
        case "albers":
            return conicProjection(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$albers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoAlbers$3e$__["geoAlbers"], 0.7463, 0.4673);
        case "azimuthal-equal-area":
            return scaleProjection(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$azimuthalEqualArea$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoAzimuthalEqualArea$3e$__["geoAzimuthalEqualArea"], 4, 4);
        case "azimuthal-equidistant":
            return scaleProjection(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$azimuthalEquidistant$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoAzimuthalEquidistant$3e$__["geoAzimuthalEquidistant"], tau, tau);
        case "conic-conformal":
            return conicProjection(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$conicConformal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoConicConformal$3e$__["geoConicConformal"], tau, tau);
        case "conic-equal-area":
            return conicProjection(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$conicEqualArea$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoConicEqualArea$3e$__["geoConicEqualArea"], 6.1702, 2.9781);
        case "conic-equidistant":
            return conicProjection(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$conicEquidistant$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoConicEquidistant$3e$__["geoConicEquidistant"], 7.312, 3.6282);
        case "equal-earth":
            return scaleProjection(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$equalEarth$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoEqualEarth$3e$__["geoEqualEarth"], 5.4133, 2.6347);
        case "equirectangular":
            return scaleProjection(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$equirectangular$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoEquirectangular$3e$__["geoEquirectangular"], tau, pi);
        case "gnomonic":
            return scaleProjection(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$gnomonic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoGnomonic$3e$__["geoGnomonic"], 3.4641, 3.4641);
        case "identity":
            return {
                type: identity
            };
        case "reflect-y":
            return {
                type: reflectY
            };
        case "mercator":
            return scaleProjection(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$mercator$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoMercator$3e$__["geoMercator"], tau, tau);
        case "orthographic":
            return scaleProjection(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$orthographic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoOrthographic$3e$__["geoOrthographic"], 2, 2);
        case "stereographic":
            return scaleProjection(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$stereographic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoStereographic$3e$__["geoStereographic"], 2, 2);
        case "transverse-mercator":
            return scaleProjection(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$projection$2f$transverseMercator$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoTransverseMercator$3e$__["geoTransverseMercator"], tau, tau);
        default:
            throw new Error("unknown projection type: ".concat(projection));
    }
}
function maybePostClip(clip, x1, y1, x2, y2) {
    if (clip === false || clip == null || typeof clip === "number") return (s)=>s;
    if (clip === true) clip = "frame";
    switch("".concat(clip).toLowerCase()){
        case "frame":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$clip$2f$rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoClipRectangle$3e$__["geoClipRectangle"])(x1, y1, x2, y2);
        default:
            throw new Error("unknown projection clip type: ".concat(clip));
    }
}
function scaleProjection(createProjection, kx, ky) {
    return {
        type: (param)=>{
            let { width, height, rotate, precision = 0.15, clip } = param;
            var _projection_precision, _projection_rotate, _projection_clipAngle;
            const projection = createProjection();
            if (precision != null) (_projection_precision = projection.precision) === null || _projection_precision === void 0 ? void 0 : _projection_precision.call(projection, precision);
            if (rotate != null) (_projection_rotate = projection.rotate) === null || _projection_rotate === void 0 ? void 0 : _projection_rotate.call(projection, rotate);
            if (typeof clip === "number") (_projection_clipAngle = projection.clipAngle) === null || _projection_clipAngle === void 0 ? void 0 : _projection_clipAngle.call(projection, clip);
            if (width != null) {
                projection.scale(Math.min(width / kx, height / ky));
                projection.translate([
                    width / 2,
                    height / 2
                ]);
            }
            return projection;
        },
        aspectRatio: ky / kx
    };
}
function conicProjection(createProjection, kx, ky) {
    const { type, aspectRatio } = scaleProjection(createProjection, kx, ky);
    return {
        type: (options)=>{
            const { parallels, domain, width, height } = options;
            const projection = type(options);
            if (parallels != null) {
                projection.parallels(parallels);
                if (domain === undefined && width != null) {
                    projection.fitSize([
                        width,
                        height
                    ], {
                        type: "Sphere"
                    });
                }
            }
            return projection;
        },
        aspectRatio
    };
}
const identity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["constant"])({
    stream: (stream)=>stream
});
const reflectY = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["constant"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$transform$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoTransform$3e$__["geoTransform"])({
    point (x, y) {
        this.stream.point(x, -y);
    }
}));
function project(cx, cy, values, projection) {
    const x = values[cx];
    const y = values[cy];
    const n = x.length;
    const X = values[cx] = new Float64Array(n).fill(NaN);
    const Y = values[cy] = new Float64Array(n).fill(NaN);
    let i;
    const stream = projection.stream({
        point (x, y) {
            X[i] = x;
            Y[i] = y;
        }
    });
    for(i = 0; i < n; ++i){
        stream.point(x[i], y[i]);
    }
}
function hasProjection() {
    let { projection } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (projection == null) return false;
    if (typeof projection.stream === "function") return true;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])(projection)) projection = projection.type;
    return projection != null;
}
function projectionAspectRatio(projection) {
    if (typeof (projection === null || projection === void 0 ? void 0 : projection.stream) === "function") return defaultAspectRatio;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])(projection)) {
        let domain, options;
        ({ domain, type: projection, ...options } = projection);
        if (domain != null && projection != null) {
            const type = typeof projection === "string" ? namedProjection(projection).type : projection;
            const [[x0, y0], [x1, y1]] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$path$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoPath$3e$__["geoPath"])(type({
                ...options,
                width: 100,
                height: 100
            })).bounds(domain);
            const r = (y1 - y0) / (x1 - x0);
            return r && isFinite(r) ? r < 0.2 ? 0.2 : r > 5 ? 5 : r : defaultAspectRatio;
        }
    }
    if (projection == null) return;
    if (typeof projection !== "function") {
        const { aspectRatio } = namedProjection(projection);
        if (aspectRatio) return aspectRatio;
    }
    return defaultAspectRatio;
}
function applyPosition(channels, scales, param) {
    let { projection } = param;
    const { x, y } = channels;
    let position = {};
    if (x) position.x = x;
    if (y) position.y = y;
    position = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$channel$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueObject"])(position, scales);
    if (projection && (x === null || x === void 0 ? void 0 : x.scale) === "x" && (y === null || y === void 0 ? void 0 : y.scale) === "y") project("x", "y", position, projection);
    if (x) position.x = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["coerceNumbers"])(position.x);
    if (y) position.y = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["coerceNumbers"])(position.y);
    return position;
}
function getGeometryChannels(channel) {
    const X = [];
    const Y = [];
    const x = {
        scale: "x",
        value: X
    };
    const y = {
        scale: "y",
        value: Y
    };
    const sink = {
        point (x, y) {
            X.push(x);
            Y.push(y);
        },
        lineStart () {},
        lineEnd () {},
        polygonStart () {},
        polygonEnd () {},
        sphere () {}
    };
    for (const object of channel.value)(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$stream$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoStream$3e$__["geoStream"])(object, sink);
    return [
        x,
        y
    ];
}
function xyProjection(param) {
    let { x: X, y: Y } = param;
    if (X || Y) {
        X !== null && X !== void 0 ? X : X = (x)=>x;
        Y !== null && Y !== void 0 ? Y : Y = (y)=>y;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$transform$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoTransform$3e$__["geoTransform"])({
            point (x, y) {
                this.stream.point(X(x), Y(y));
            }
        });
    }
}
}),
"[project]/node_modules/@observablehq/plot/src/context.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "create",
    ()=>create,
    "createContext",
    ()=>createContext
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$creator$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__creator$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-selection/src/creator.js [app-client] (ecmascript) <export default as creator>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$select$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__select$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-selection/src/select.js [app-client] (ecmascript) <export default as select>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
;
;
function createContext() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const { document = typeof window !== "undefined" ? window.document : undefined, clip } = options;
    return {
        document,
        clip: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeClip"])(clip)
    };
}
function create(name, param) {
    let { document } = param;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$select$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__select$3e$__["select"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$creator$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__creator$3e$__["creator"])(name).call(document.documentElement));
}
}),
"[project]/node_modules/@observablehq/plot/src/memoize.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "memoize1",
    ()=>memoize1,
    "unset",
    ()=>unset
]);
const unset = Symbol("unset");
function memoize1(compute) {
    return (compute.length === 1 ? memoize1Arg : memoize1Args)(compute);
}
function memoize1Arg(compute) {
    let cacheValue;
    let cacheKey = unset;
    return (key)=>{
        if (!Object.is(cacheKey, key)) {
            cacheKey = key;
            cacheValue = compute(key);
        }
        return cacheValue;
    };
}
function memoize1Args(compute) {
    let cacheValue, cacheKeys;
    return function() {
        for(var _len = arguments.length, keys = new Array(_len), _key = 0; _key < _len; _key++){
            keys[_key] = arguments[_key];
        }
        if ((cacheKeys === null || cacheKeys === void 0 ? void 0 : cacheKeys.length) !== keys.length || cacheKeys.some((k, i)=>!Object.is(k, keys[i]))) {
            cacheKeys = keys;
            cacheValue = compute(...keys);
        }
        return cacheValue;
    };
}
}),
"[project]/node_modules/@observablehq/plot/src/format.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "formatAuto",
    ()=>formatAuto,
    "formatDefault",
    ()=>formatDefault,
    "formatIsoDate",
    ()=>formatIsoDate,
    "formatMonth",
    ()=>formatMonth,
    "formatNumber",
    ()=>formatNumber,
    "formatWeekday",
    ()=>formatWeekday
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$isoformat$2f$src$2f$format$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__format$3e$__ = __turbopack_context__.i("[project]/node_modules/isoformat/src/format.js [app-client] (ecmascript) <export default as format>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$memoize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/memoize.js [app-client] (ecmascript)");
;
;
;
const numberFormat = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$memoize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memoize1"])((locale)=>{
    return new Intl.NumberFormat(locale);
});
const monthFormat = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$memoize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memoize1"])((locale, month)=>{
    return new Intl.DateTimeFormat(locale, {
        timeZone: "UTC",
        ...month && {
            month
        }
    });
});
const weekdayFormat = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$memoize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memoize1"])((locale, weekday)=>{
    return new Intl.DateTimeFormat(locale, {
        timeZone: "UTC",
        ...weekday && {
            weekday
        }
    });
});
function formatNumber() {
    let locale = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "en-US";
    const format = numberFormat(locale);
    return (i)=>i != null && !isNaN(i) ? format.format(i) : undefined;
}
function formatMonth() {
    let locale = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "en-US", format = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "short";
    const fmt = monthFormat(locale, format);
    return (i)=>i != null && !isNaN(i = +new Date(Date.UTC(2000, +i))) ? fmt.format(i) : undefined;
}
function formatWeekday() {
    let locale = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "en-US", format = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "short";
    const fmt = weekdayFormat(locale, format);
    return (i)=>i != null && !isNaN(i = +new Date(Date.UTC(2001, 0, +i))) ? fmt.format(i) : undefined;
}
function formatIsoDate(date) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$isoformat$2f$src$2f$format$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__format$3e$__["format"])(date, "Invalid Date");
}
function formatAuto() {
    let locale = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "en-US";
    const number = formatNumber(locale);
    return (v)=>(v instanceof Date ? formatIsoDate : typeof v === "number" ? number : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(v);
}
const formatDefault = formatAuto();
}),
"[project]/node_modules/@observablehq/plot/src/style.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "applyAttr",
    ()=>applyAttr,
    "applyChannelStyles",
    ()=>applyChannelStyles,
    "applyDirectStyles",
    ()=>applyDirectStyles,
    "applyFrameAnchor",
    ()=>applyFrameAnchor,
    "applyGroupedChannelStyles",
    ()=>applyGroupedChannelStyles,
    "applyIndirectStyles",
    ()=>applyIndirectStyles,
    "applyInlineStyles",
    ()=>applyInlineStyles,
    "applyStyle",
    ()=>applyStyle,
    "applyText",
    ()=>applyText,
    "applyTextGroup",
    ()=>applyTextGroup,
    "applyTitle",
    ()=>applyTitle,
    "applyTitleGroup",
    ()=>applyTitleGroup,
    "applyTransform",
    ()=>applyTransform,
    "getClipId",
    ()=>getClipId,
    "getPatternId",
    ()=>getPatternId,
    "groupIndex",
    ()=>groupIndex,
    "groupZ",
    ()=>groupZ,
    "impliedNumber",
    ()=>impliedNumber,
    "impliedString",
    ()=>impliedString,
    "maybeClassName",
    ()=>maybeClassName,
    "offset",
    ()=>offset,
    "styles",
    ()=>styles
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/group.js [app-client] (ecmascript) <export default as group>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$namespaces$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__namespaces$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-selection/src/namespaces.js [app-client] (ecmascript) <export default as namespaces>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$select$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__select$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-selection/src/select.js [app-client] (ecmascript) <export default as select>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/context.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/defined.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$format$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/format.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$warnings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/warnings.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
const offset = (typeof window !== "undefined" ? window.devicePixelRatio > 1 : typeof it === "undefined") ? 0 : 0.5; // prettier-ignore
let nextClipId = 0;
let nextPatternId = 0;
function getClipId() {
    return "plot-clip-".concat(++nextClipId);
}
function getPatternId() {
    return "plot-pattern-".concat(++nextPatternId);
}
function styles(mark, param, param1) {
    let { title, href, ariaLabel: variaLabel, ariaDescription, ariaHidden, target, fill, fillOpacity, stroke, strokeWidth, strokeOpacity, strokeLinejoin, strokeLinecap, strokeMiterlimit, strokeDasharray, strokeDashoffset, opacity, mixBlendMode, imageFilter, paintOrder, pointerEvents, shapeRendering, channels } = param, { ariaLabel: cariaLabel, fill: defaultFill = "currentColor", fillOpacity: defaultFillOpacity, stroke: defaultStroke = "none", strokeOpacity: defaultStrokeOpacity, strokeWidth: defaultStrokeWidth, strokeLinecap: defaultStrokeLinecap, strokeLinejoin: defaultStrokeLinejoin, strokeMiterlimit: defaultStrokeMiterlimit, paintOrder: defaultPaintOrder } = param1;
    // Some marks don’t support fill (e.g., tick and rule).
    if (defaultFill === null) {
        fill = null;
        fillOpacity = null;
    }
    // Some marks don’t support stroke (e.g., image).
    if (defaultStroke === null) {
        stroke = null;
        strokeOpacity = null;
    }
    // Some marks default to fill with no stroke, while others default to stroke
    // with no fill. For example, bar and area default to fill, while dot and line
    // default to stroke. For marks that fill by default, the default fill only
    // applies if the stroke is (constant) none; if you set a stroke, then the
    // default fill becomes none. Similarly for marks that stroke by stroke, the
    // default stroke only applies if the fill is (constant) none.
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNoneish"])(defaultFill)) {
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNoneish"])(defaultStroke) && (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNoneish"])(fill) || (channels === null || channels === void 0 ? void 0 : channels.fill))) defaultStroke = "none";
    } else {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNoneish"])(defaultStroke) && (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNoneish"])(stroke) || (channels === null || channels === void 0 ? void 0 : channels.stroke))) defaultFill = "none";
    }
    const [vfill, cfill] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColorChannel"])(fill, defaultFill);
    const [vfillOpacity, cfillOpacity] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeNumberChannel"])(fillOpacity, defaultFillOpacity);
    const [vstroke, cstroke] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColorChannel"])(stroke, defaultStroke);
    const [vstrokeOpacity, cstrokeOpacity] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeNumberChannel"])(strokeOpacity, defaultStrokeOpacity);
    const [vopacity, copacity] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeNumberChannel"])(opacity);
    // For styles that have no effect if there is no stroke, only apply the
    // defaults if the stroke is not the constant none. (If stroke is a channel,
    // then cstroke will be undefined, but there’s still a stroke; hence we don’t
    // use isNoneish here.)
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNone"])(cstroke)) {
        if (strokeWidth === undefined) strokeWidth = defaultStrokeWidth;
        if (strokeLinecap === undefined) strokeLinecap = defaultStrokeLinecap;
        if (strokeLinejoin === undefined) strokeLinejoin = defaultStrokeLinejoin;
        // The default stroke miterlimit need not be applied if the current stroke
        // is the constant round; this only has effect on miter joins.
        if (strokeMiterlimit === undefined && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isRound"])(strokeLinejoin)) strokeMiterlimit = defaultStrokeMiterlimit;
        // The paint order only takes effect if there is both a fill and a stroke
        // (at least if we ignore markers, which no built-in marks currently use).
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNone"])(cfill) && paintOrder === undefined) paintOrder = defaultPaintOrder;
    }
    const [vstrokeWidth, cstrokeWidth] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeNumberChannel"])(strokeWidth);
    // Some marks don’t support fill (e.g., tick and rule).
    if (defaultFill !== null) {
        mark.fill = impliedString(cfill, "currentColor");
        mark.fillOpacity = impliedNumber(cfillOpacity, 1);
    }
    // Some marks don’t support stroke (e.g., image).
    if (defaultStroke !== null) {
        mark.stroke = impliedString(cstroke, "none");
        mark.strokeWidth = impliedNumber(cstrokeWidth, 1);
        mark.strokeOpacity = impliedNumber(cstrokeOpacity, 1);
        mark.strokeLinejoin = impliedString(strokeLinejoin, "miter");
        mark.strokeLinecap = impliedString(strokeLinecap, "butt");
        mark.strokeMiterlimit = impliedNumber(strokeMiterlimit, 4);
        mark.strokeDasharray = impliedString(strokeDasharray, "none");
        mark.strokeDashoffset = impliedString(strokeDashoffset, "0");
    }
    mark.target = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(target);
    mark.ariaLabel = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(cariaLabel);
    mark.ariaDescription = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(ariaDescription);
    mark.ariaHidden = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(ariaHidden);
    mark.opacity = impliedNumber(copacity, 1);
    mark.mixBlendMode = impliedString(mixBlendMode, "normal");
    mark.imageFilter = impliedString(imageFilter, "none");
    mark.paintOrder = impliedString(paintOrder, "normal");
    mark.pointerEvents = impliedString(pointerEvents, "auto");
    mark.shapeRendering = impliedString(shapeRendering, "auto");
    return {
        title: {
            value: title,
            optional: true,
            filter: null
        },
        href: {
            value: href,
            optional: true,
            filter: null
        },
        ariaLabel: {
            value: variaLabel,
            optional: true,
            filter: null
        },
        fill: {
            value: vfill,
            scale: "auto",
            optional: true
        },
        fillOpacity: {
            value: vfillOpacity,
            scale: "auto",
            optional: true
        },
        stroke: {
            value: vstroke,
            scale: "auto",
            optional: true
        },
        strokeOpacity: {
            value: vstrokeOpacity,
            scale: "auto",
            optional: true
        },
        strokeWidth: {
            value: vstrokeWidth,
            optional: true
        },
        opacity: {
            value: vopacity,
            scale: "auto",
            optional: true
        }
    };
}
function applyTitle(selection, L) {
    if (L) selection.filter((i)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nonempty"])(L[i])).append("title").call(applyText, L);
}
function applyTitleGroup(selection, L) {
    if (L) selection.filter((param)=>{
        let [i] = param;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nonempty"])(L[i]);
    }).append("title").call(applyTextGroup, L);
}
function applyText(selection, T) {
    if (T) selection.text((i)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$format$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatDefault"])(T[i]));
}
function applyTextGroup(selection, T) {
    if (T) selection.text((param)=>{
        let [i] = param;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$format$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatDefault"])(T[i]);
    });
}
function applyChannelStyles(selection, param, param1) {
    let { target, tip } = param, { ariaLabel: AL, title: T, fill: F, fillOpacity: FO, stroke: S, strokeOpacity: SO, strokeWidth: SW, opacity: O, href: H } = param1;
    if (AL) applyAttr(selection, "aria-label", (i)=>AL[i]);
    if (F) applyAttr(selection, "fill", (i)=>F[i]);
    if (FO) applyAttr(selection, "fill-opacity", (i)=>FO[i]);
    if (S) applyAttr(selection, "stroke", (i)=>S[i]);
    if (SO) applyAttr(selection, "stroke-opacity", (i)=>SO[i]);
    if (SW) applyAttr(selection, "stroke-width", (i)=>SW[i]);
    if (O) applyAttr(selection, "opacity", (i)=>O[i]);
    if (H) applyHref(selection, (i)=>H[i], target);
    if (!tip) applyTitle(selection, T);
}
function applyGroupedChannelStyles(selection, param, param1) {
    let { target, tip } = param, { ariaLabel: AL, title: T, fill: F, fillOpacity: FO, stroke: S, strokeOpacity: SO, strokeWidth: SW, opacity: O, href: H } = param1;
    if (AL) applyAttr(selection, "aria-label", (param)=>{
        let [i] = param;
        return AL[i];
    });
    if (F) applyAttr(selection, "fill", (param)=>{
        let [i] = param;
        return F[i];
    });
    if (FO) applyAttr(selection, "fill-opacity", (param)=>{
        let [i] = param;
        return FO[i];
    });
    if (S) applyAttr(selection, "stroke", (param)=>{
        let [i] = param;
        return S[i];
    });
    if (SO) applyAttr(selection, "stroke-opacity", (param)=>{
        let [i] = param;
        return SO[i];
    });
    if (SW) applyAttr(selection, "stroke-width", (param)=>{
        let [i] = param;
        return SW[i];
    });
    if (O) applyAttr(selection, "opacity", (param)=>{
        let [i] = param;
        return O[i];
    });
    if (H) applyHref(selection, (param)=>{
        let [i] = param;
        return H[i];
    }, target);
    if (!tip) applyTitleGroup(selection, T);
}
function groupAesthetics(param, param1) {
    let { ariaLabel: AL, title: T, fill: F, fillOpacity: FO, stroke: S, strokeOpacity: SO, strokeWidth: SW, opacity: O, href: H } = param, { tip } = param1;
    return [
        AL,
        tip ? undefined : T,
        F,
        FO,
        S,
        SO,
        SW,
        O,
        H
    ].filter((c)=>c !== undefined);
}
function groupZ(I, Z, z) {
    const G = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__["group"])(I, (i)=>Z[i]);
    if (z === undefined && G.size > 1 + I.length >> 1) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$warnings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["warn"])("Warning: the implicit z channel has high cardinality. This may occur when the fill or stroke channel is associated with quantitative data rather than ordinal or categorical data. You can suppress this warning by setting the z option explicitly; if this data represents a single series, set z to null.");
    }
    return G.values();
}
function* groupIndex(I, position, mark, channels) {
    const { z } = mark;
    const { z: Z } = channels; // group channel
    const A = groupAesthetics(channels, mark); // aesthetic channels
    const C = [
        ...position,
        ...A
    ]; // all channels
    // Group the current index by Z (if any).
    for (const G of Z ? groupZ(I, Z, z) : [
        I
    ]){
        let Ag; // the A-values (aesthetics) of the current group, if any
        let Gg; // the current group index (a subset of G, and I), if any
        out: for (const i of G){
            // If any channel has an undefined value for this index, skip it.
            for (const c of C){
                if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defined"])(c[i])) {
                    if (Gg) Gg.push(-1);
                    continue out;
                }
            }
            // Otherwise, if this is a new group, record the aesthetics for this
            // group. Yield the current group and start a new one.
            if (Ag === undefined) {
                if (Gg) yield Gg;
                Ag = A.map((c)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keyof"])(c[i])), Gg = [
                    i
                ];
                continue;
            }
            // Otherwise, add the current index to the current group. Then, if any of
            // the aesthetics don’t match the current group, yield the current group
            // and start a new group of the current index.
            Gg.push(i);
            for(let j = 0; j < A.length; ++j){
                const k = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keyof"])(A[j][i]);
                if (k !== Ag[j]) {
                    yield Gg;
                    Ag = A.map((c)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keyof"])(c[i])), Gg = [
                        i
                    ];
                    continue out;
                }
            }
        }
        // Yield the current group, if any.
        if (Gg) yield Gg;
    }
}
// Note: may mutate selection.node!
function applyClip(selection, mark, dimensions, context) {
    let clipUrl;
    const { clip = context.clip } = mark;
    if (clip === "frame") {
        // Wrap the G element with another (untransformed) G element, applying the
        // clip to the parent G element so that the clip path is not affected by
        // the mark’s transform. To simplify the adoption of this fix, mutate the
        // passed-in selection.node to return the parent G element.
        selection = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["create"])("svg:g", context).each(function() {
            this.appendChild(selection.node());
            selection.node = ()=>this; // Note: mutation!
        });
        clipUrl = getFrameClip(context, dimensions);
    } else if (clip) {
        clipUrl = getGeoClip(clip, context);
    }
    // Here we’re careful to apply the ARIA attributes to the outer G element when
    // clipping is applied, and to apply the ARIA attributes before any other
    // attributes (for readability).
    applyAttr(selection, "aria-label", mark.ariaLabel);
    applyAttr(selection, "aria-description", mark.ariaDescription);
    applyAttr(selection, "aria-hidden", mark.ariaHidden);
    applyAttr(selection, "clip-path", clipUrl);
}
function memoizeClip(clip) {
    const cache = new WeakMap();
    return (context, dimensions)=>{
        let url = cache.get(context);
        if (!url) {
            const id = getClipId();
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$select$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__select$3e$__["select"])(context.ownerSVGElement).append("clipPath").attr("id", id).call(clip, context, dimensions);
            cache.set(context, url = "url(#".concat(id, ")"));
        }
        return url;
    };
}
const getFrameClip = memoizeClip((clipPath, context, dimensions)=>{
    const { width, height, marginLeft, marginRight, marginTop, marginBottom } = dimensions;
    clipPath.append("rect").attr("x", marginLeft).attr("y", marginTop).attr("width", width - marginRight - marginLeft).attr("height", height - marginTop - marginBottom);
});
const geoClipCache = new WeakMap();
const sphere = {
    type: "Sphere"
};
function getGeoClip(geo, context) {
    let cache, url;
    if (!(cache = geoClipCache.get(context))) geoClipCache.set(context, cache = new WeakMap());
    if (geo.type === "Sphere") geo = sphere; // coalesce all spheres
    if (!(url = cache.get(geo))) {
        const id = getClipId();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$select$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__select$3e$__["select"])(context.ownerSVGElement).append("clipPath").attr("id", id).append("path").attr("d", context.path()(geo));
        cache.set(geo, url = "url(#".concat(id, ")"));
    }
    return url;
}
function applyIndirectStyles(selection, mark, dimensions, context) {
    applyClip(selection, mark, dimensions, context);
    applyAttr(selection, "class", mark.className);
    applyAttr(selection, "fill", mark.fill);
    applyAttr(selection, "fill-opacity", mark.fillOpacity);
    applyAttr(selection, "stroke", mark.stroke);
    applyAttr(selection, "stroke-width", mark.strokeWidth);
    applyAttr(selection, "stroke-opacity", mark.strokeOpacity);
    applyAttr(selection, "stroke-linejoin", mark.strokeLinejoin);
    applyAttr(selection, "stroke-linecap", mark.strokeLinecap);
    applyAttr(selection, "stroke-miterlimit", mark.strokeMiterlimit);
    applyAttr(selection, "stroke-dasharray", mark.strokeDasharray);
    applyAttr(selection, "stroke-dashoffset", mark.strokeDashoffset);
    applyAttr(selection, "shape-rendering", mark.shapeRendering);
    applyAttr(selection, "filter", mark.imageFilter);
    applyAttr(selection, "paint-order", mark.paintOrder);
    const { pointerEvents = context.pointerSticky === false ? "none" : undefined } = mark;
    applyAttr(selection, "pointer-events", pointerEvents);
}
function applyDirectStyles(selection, mark) {
    applyStyle(selection, "mix-blend-mode", mark.mixBlendMode);
    applyAttr(selection, "opacity", mark.opacity);
}
function applyHref(selection, href, target) {
    selection.each(function(i) {
        const h = href(i);
        if (h != null) {
            const a = this.ownerDocument.createElementNS(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$namespaces$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__namespaces$3e$__["namespaces"].svg, "a");
            a.setAttribute("fill", "inherit");
            a.setAttributeNS(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$namespaces$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__namespaces$3e$__["namespaces"].xlink, "href", h);
            if (target != null) a.setAttribute("target", target);
            this.parentNode.insertBefore(a, this).appendChild(this);
        }
    });
}
function applyAttr(selection, name, value) {
    if (value != null) selection.attr(name, value);
}
function applyStyle(selection, name, value) {
    if (value != null) selection.style(name, value);
}
function applyTransform(selection, mark, param) {
    let { x, y } = param, tx = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : offset, ty = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : offset;
    tx += mark.dx;
    ty += mark.dy;
    if (x === null || x === void 0 ? void 0 : x.bandwidth) tx += x.bandwidth() / 2;
    if (y === null || y === void 0 ? void 0 : y.bandwidth) ty += y.bandwidth() / 2;
    if (tx || ty) selection.attr("transform", "translate(".concat(tx, ",").concat(ty, ")"));
}
function impliedString(value, impliedValue) {
    if ((value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(value)) !== impliedValue) return value;
}
function impliedNumber(value, impliedValue) {
    if ((value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(value)) !== impliedValue) return value;
}
// https://www.w3.org/TR/CSS21/grammar.html
const validClassName = /^-?([_a-z]|[\240-\377]|\\[0-9a-f]{1,6}(\r\n|[ \t\r\n\f])?|\\[^\r\n\f0-9a-f])([_a-z0-9-]|[\240-\377]|\\[0-9a-f]{1,6}(\r\n|[ \t\r\n\f])?|\\[^\r\n\f0-9a-f])*$/i;
function maybeClassName(name) {
    // The default should be changed whenever the default styles are changed, so
    // as to avoid conflict when multiple versions of Plot are on the page.
    if (name === undefined) return "plot-d6a7b5";
    name = "".concat(name);
    if (!validClassName.test(name)) throw new Error("invalid class name: ".concat(name));
    return name;
}
function applyInlineStyles(selection, style) {
    if (typeof style === "string") {
        selection.property("style", style);
    } else if (style != null) {
        for (const element of selection){
            Object.assign(element.style, style);
        }
    }
}
function applyFrameAnchor(param, param1) {
    let { frameAnchor } = param, { width, height, marginTop, marginRight, marginBottom, marginLeft } = param1;
    return [
        /left$/.test(frameAnchor) ? marginLeft : /right$/.test(frameAnchor) ? width - marginRight : (marginLeft + width - marginRight) / 2,
        /^top/.test(frameAnchor) ? marginTop : /^bottom/.test(frameAnchor) ? height - marginBottom : (marginTop + height - marginBottom) / 2
    ];
}
}),
"[project]/node_modules/@observablehq/plot/src/mark.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Mark",
    ()=>Mark,
    "composeRender",
    ()=>composeRender,
    "marks",
    ()=>marks,
    "withTip",
    ()=>withTip
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$channel$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/channel.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/defined.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$facet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/facet.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$projection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/projection.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/style.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$basic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/basic.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
class Mark {
    initialize(facets, facetChannels, plotOptions) {
        let data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["dataify"])(this.data);
        if (facets === undefined && data != null) facets = [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["range"])(data)
        ];
        const originalFacets = facets;
        if (this.transform != null) ({ facets, data } = this.transform(data, facets, plotOptions)), data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["dataify"])(data);
        if (facets !== undefined) facets.original = originalFacets; // needed to read facetChannels
        const channels = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$channel$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createChannels"])(this.channels, data);
        if (this.sort != null) (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$channel$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["channelDomain"])(data, facets, channels, facetChannels, this.sort); // mutates facetChannels!
        return {
            data,
            facets,
            channels
        };
    }
    filter(index, channels, values) {
        for(const name in channels){
            const { filter = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defined"] } = channels[name];
            if (filter !== null) {
                const value = values[name];
                index = index.filter((i)=>filter(value[i]));
            }
        }
        return index;
    }
    // If there is a projection, and there are paired x and y channels associated
    // with the x and y scale respectively (and not already in screen coordinates
    // as with an initializer), then apply the projection, replacing the x and y
    // values. Note that the x and y scales themselves don’t exist if there is a
    // projection, but whether the channels are associated with scales still
    // determines whether the projection should apply; think of the projection as
    // a combination xy-scale.
    project(channels, values, context) {
        for(const cx in channels){
            if (channels[cx].scale === "x" && /^x|x$/.test(cx)) {
                const cy = cx.replace(/^x|x$/, "y");
                if (cy in channels && channels[cy].scale === "y") {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$projection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["project"])(cx, cy, values, context.projection);
                }
            }
        }
    }
    scale(channels, scales, context) {
        const values = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$channel$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueObject"])(channels, scales);
        if (context.projection) this.project(channels, values, context);
        return values;
    }
    constructor(data, channels = {}, options = {}, defaults){
        const { facet = "auto", facetAnchor, fx, fy, sort, dx = 0, dy = 0, margin = 0, marginTop = margin, marginRight = margin, marginBottom = margin, marginLeft = margin, className, clip = defaults === null || defaults === void 0 ? void 0 : defaults.clip, channels: extraChannels, tip, render } = options;
        this.data = data;
        this.sort = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isDomainSort"])(sort) ? sort : null;
        this.initializer = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$basic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["initializer"])(options).initializer;
        this.transform = this.initializer ? options.transform : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$basic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["basic"])(options).transform;
        if (facet === null || facet === false) {
            this.facet = null;
        } else {
            this.facet = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keyword"])(facet === true ? "include" : facet, "facet", [
                "auto",
                "include",
                "exclude",
                "super"
            ]);
            this.fx = data === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["singleton"] && typeof fx === "string" ? [
                fx
            ] : fx;
            this.fy = data === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["singleton"] && typeof fy === "string" ? [
                fy
            ] : fy;
        }
        this.facetAnchor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$facet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeFacetAnchor"])(facetAnchor);
        channels = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeNamed"])(channels);
        if (extraChannels !== undefined) channels = {
            ...maybeChannels(extraChannels),
            ...channels
        };
        if (defaults !== undefined) channels = {
            ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styles"])(this, options, defaults),
            ...channels
        };
        this.channels = Object.fromEntries(Object.entries(channels).map((param)=>{
            let [name, channel] = param;
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isOptions"])(channel.value)) {
                // apply scale and label overrides
                const { value, label = channel.label, scale = channel.scale } = channel.value;
                channel = {
                    ...channel,
                    label,
                    scale,
                    value
                };
            }
            if (data === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["singleton"] && typeof channel.value === "string") {
                // convert field names to singleton values for decoration marks (e.g., frame)
                const { value } = channel;
                channel = {
                    ...channel,
                    value: [
                        value
                    ]
                };
            }
            return [
                name,
                channel
            ];
        }).filter((param)=>{
            let [name, { value, optional }] = param;
            if (value != null) return true;
            if (optional) return false;
            throw new Error("missing channel value: ".concat(name));
        }));
        this.dx = +dx;
        this.dy = +dy;
        this.marginTop = +marginTop;
        this.marginRight = +marginRight;
        this.marginBottom = +marginBottom;
        this.marginLeft = +marginLeft;
        this.clip = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeClip"])(clip);
        this.tip = maybeTip(tip);
        this.className = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(className);
        // Super-faceting currently disallow position channels; in the future, we
        // could allow position to be specified in fx and fy in addition to (or
        // instead of) x and y.
        if (this.facet === "super") {
            if (fx || fy) throw new Error("super-faceting cannot use fx or fy");
            for(const name in this.channels){
                const { scale } = channels[name];
                if (scale !== "x" && scale !== "y") continue;
                throw new Error("super-faceting cannot use x or y");
            }
        }
        if (render != null) {
            this.render = composeRender(render, this.render);
        }
    }
}
function marks() {
    for(var _len = arguments.length, marks = new Array(_len), _key = 0; _key < _len; _key++){
        marks[_key] = arguments[_key];
    }
    marks.plot = Mark.prototype.plot;
    return marks;
}
function composeRender(r1, r2) {
    if (r1 == null) return r2 === null ? undefined : r2;
    if (r2 == null) return r1 === null ? undefined : r1;
    if (typeof r1 !== "function") throw new TypeError("invalid render transform: ".concat(r1));
    if (typeof r2 !== "function") throw new TypeError("invalid render transform: ".concat(r2));
    return function(i, s, v, d, c, next) {
        return r1.call(this, i, s, v, d, c, (i, s, v, d, c)=>{
            return r2.call(this, i, s, v, d, c, next); // preserve this
        });
    };
}
function maybeChannels(channels) {
    return Object.fromEntries(Object.entries((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeNamed"])(channels)).map((param)=>{
        let [name, channel] = param;
        channel = typeof channel === "string" ? {
            value: channel,
            label: name
        } : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeValue"])(channel); // for shorthand extra channels, use name as label
        if (channel.filter === undefined && channel.scale == null) channel = {
            ...channel,
            filter: null
        };
        return [
            name,
            channel
        ];
    }));
}
function maybeTip(tip) {
    return tip === true ? "xy" : tip === false || tip == null ? null : typeof tip === "string" ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keyword"])(tip, "tip", [
        "x",
        "y",
        "xy"
    ]) : tip; // tip options object
}
function withTip(options, pointer) {
    return (options === null || options === void 0 ? void 0 : options.tip) === true ? {
        ...options,
        tip: pointer
    } : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])(options === null || options === void 0 ? void 0 : options.tip) && options.tip.pointer === undefined ? {
        ...options,
        tip: {
            ...options.tip,
            pointer
        }
    } : options;
}
}),
"[project]/node_modules/@observablehq/plot/src/dimensions.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "createDimensions",
    ()=>createDimensions
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/extent.js [app-client] (ecmascript) <export default as extent>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$projection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/projection.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/style.js [app-client] (ecmascript)");
;
;
;
;
function createDimensions(scales, marks) {
    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    // Compute the default margins: the maximum of the marks’ margins. While not
    // always used, they may be needed to compute the default height of the plot.
    let marginTopDefault = 0.5 - __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["offset"], marginRightDefault = 0.5 + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["offset"], marginBottomDefault = 0.5 + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["offset"], marginLeftDefault = 0.5 - __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["offset"];
    for (const { marginTop, marginRight, marginBottom, marginLeft } of marks){
        if (marginTop > marginTopDefault) marginTopDefault = marginTop;
        if (marginRight > marginRightDefault) marginRightDefault = marginRight;
        if (marginBottom > marginBottomDefault) marginBottomDefault = marginBottom;
        if (marginLeft > marginLeftDefault) marginLeftDefault = marginLeft;
    }
    // Compute the actual margins. The order of precedence is: the side-specific
    // margin options, then the global margin option, then the defaults.
    let { margin, marginTop = margin !== undefined ? margin : marginTopDefault, marginRight = margin !== undefined ? margin : marginRightDefault, marginBottom = margin !== undefined ? margin : marginBottomDefault, marginLeft = margin !== undefined ? margin : marginLeftDefault } = options;
    // Coerce the margin options to numbers.
    marginTop = +marginTop;
    marginRight = +marginRight;
    marginBottom = +marginBottom;
    marginLeft = +marginLeft;
    // Compute the outer dimensions of the plot. If the top and bottom margins are
    // specified explicitly, adjust the automatic height accordingly.
    let { width = 640, height = autoHeight(scales, options, {
        width,
        marginTopDefault,
        marginRightDefault,
        marginBottomDefault,
        marginLeftDefault
    }) + Math.max(0, marginTop - marginTopDefault + marginBottom - marginBottomDefault) } = options;
    // Coerce the width and height.
    width = +width;
    height = +height;
    const dimensions = {
        width,
        height,
        marginTop,
        marginRight,
        marginBottom,
        marginLeft
    };
    // Compute the facet margins.
    if (scales.fx || scales.fy) {
        var _options_facet;
        let { margin: facetMargin, marginTop: facetMarginTop = facetMargin !== undefined ? facetMargin : marginTop, marginRight: facetMarginRight = facetMargin !== undefined ? facetMargin : marginRight, marginBottom: facetMarginBottom = facetMargin !== undefined ? facetMargin : marginBottom, marginLeft: facetMarginLeft = facetMargin !== undefined ? facetMargin : marginLeft } = (_options_facet = options.facet) !== null && _options_facet !== void 0 ? _options_facet : {};
        // Coerce the facet margin options to numbers.
        facetMarginTop = +facetMarginTop;
        facetMarginRight = +facetMarginRight;
        facetMarginBottom = +facetMarginBottom;
        facetMarginLeft = +facetMarginLeft;
        dimensions.facet = {
            marginTop: facetMarginTop,
            marginRight: facetMarginRight,
            marginBottom: facetMarginBottom,
            marginLeft: facetMarginLeft
        };
    }
    return dimensions;
}
function autoHeight(param, param1, param2) {
    let { x, y, fy, fx } = param, { projection, aspectRatio } = param1, { width, marginTopDefault, marginRightDefault, marginBottomDefault, marginLeftDefault } = param2;
    const nfy = fy ? fy.scale.domain().length || 1 : 1;
    // If a projection is specified, compute an aspect ratio based on the domain,
    // defaulting to the projection’s natural aspect ratio (if known).
    const ar = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$projection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["projectionAspectRatio"])(projection);
    if (ar) {
        const nfx = fx ? fx.scale.domain().length : 1;
        const far = (1.1 * nfy - 0.1) / (1.1 * nfx - 0.1) * ar; // 0.1 is default facet padding
        const lar = Math.max(0.1, Math.min(10, far)); // clamp the aspect ratio to a “reasonable” value
        return Math.round((width - marginLeftDefault - marginRightDefault) * lar + marginTopDefault + marginBottomDefault);
    }
    const ny = y ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isOrdinalScale"])(y) ? y.scale.domain().length || 1 : Math.max(7, 17 / nfy) : 1;
    // If a desired aspect ratio is given, compute a default height to match.
    if (aspectRatio != null) {
        aspectRatio = +aspectRatio;
        if (!(isFinite(aspectRatio) && aspectRatio > 0)) throw new Error("invalid aspectRatio: ".concat(aspectRatio));
        const ratio = aspectRatioLength("y", y) / (aspectRatioLength("x", x) * aspectRatio);
        const fxb = fx ? fx.scale.bandwidth() : 1;
        const fyb = fy ? fy.scale.bandwidth() : 1;
        const w = fxb * (width - marginLeftDefault - marginRightDefault) - x.insetLeft - x.insetRight;
        return (ratio * w + y.insetTop + y.insetBottom) / fyb + marginTopDefault + marginBottomDefault;
    }
    return !!(y || fy) * Math.max(1, Math.min(60, ny * nfy)) * 20 + !!fx * 30 + 60;
}
function aspectRatioLength(k, scale) {
    if (!scale) throw new Error("aspectRatio requires ".concat(k, " scale"));
    const { type, domain } = scale;
    let transform;
    switch(type){
        case "linear":
        case "utc":
        case "time":
            transform = Number;
            break;
        case "pow":
            {
                const exponent = scale.scale.exponent();
                transform = (x)=>Math.pow(x, exponent);
                break;
            }
        case "log":
            transform = Math.log;
            break;
        case "point":
        case "band":
            return domain.length;
        default:
            throw new Error("unsupported ".concat(k, " scale for aspectRatio: ").concat(type));
    }
    const [min, max] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__["extent"])(domain);
    return Math.abs(transform(max) - transform(min));
}
}),
"[project]/node_modules/@observablehq/plot/src/interactions/pointer.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "anchorX",
    ()=>anchorX,
    "anchorY",
    ()=>anchorY,
    "pointer",
    ()=>pointer,
    "pointerX",
    ()=>pointerX,
    "pointerY",
    ()=>pointerY
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$pointer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__pointer$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-selection/src/pointer.js [app-client] (ecmascript) <export default as pointer>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/mark.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/style.js [app-client] (ecmascript)");
;
;
;
;
const states = new WeakMap();
function pointerK(kx, ky) {
    let { x, y, px, py, maxRadius = 40, channels, render, ...options } = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    maxRadius = +maxRadius;
    // When px or py is used, register an extra channel that the pointer
    // interaction can use to control which point is focused; this allows pointing
    // to function independently of where the downstream mark (e.g., a tip) is
    // displayed. Also default x or y to null to disable maybeTuple etc.
    if (px != null) x !== null && x !== void 0 ? x : x = null, channels = {
        ...channels,
        px: {
            value: px,
            scale: "x"
        }
    };
    if (py != null) y !== null && y !== void 0 ? y : y = null, channels = {
        ...channels,
        py: {
            value: py,
            scale: "y"
        }
    };
    return {
        x,
        y,
        channels,
        ...options,
        // Unlike other composed transforms, the render transform must be the
        // outermost render function because it will re-render dynamically in
        // response to pointer events.
        render: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["composeRender"])(function(index, scales, values, dimensions, context, next) {
            context = {
                ...context,
                pointerSticky: false
            };
            const svg = context.ownerSVGElement;
            const { data } = context.getMarkState(this);
            // Isolate state per-pointer, per-plot; if the pointer is reused by
            // multiple marks, they will share the same state (e.g., sticky modality).
            let state = states.get(svg);
            if (!state) states.set(svg, state = {
                sticky: false,
                roots: [],
                renders: []
            });
            // This serves as a unique identifier of the rendered mark per-plot; it is
            // used to record the currently-rendered elements (state.roots) so that we
            // can tell when a rendered element is clicked on.
            let renderIndex = state.renders.push(render) - 1;
            // For faceting, we want to compute the local coordinates of each point,
            // which means subtracting out the facet translation, if any. (It’s
            // tempting to do this using the local coordinates in SVG, but that’s
            // complicated by mark-specific transforms such as dx and dy.) Also, since
            // band scales return the upper bound of the band, we have to offset by
            // half the bandwidth.
            const { x, y, fx, fy } = scales;
            let tx = fx ? fx(index.fx) - dimensions.marginLeft : 0;
            let ty = fy ? fy(index.fy) - dimensions.marginTop : 0;
            if (x === null || x === void 0 ? void 0 : x.bandwidth) tx += x.bandwidth() / 2;
            if (y === null || y === void 0 ? void 0 : y.bandwidth) ty += y.bandwidth() / 2;
            // For faceting, we also need to record the closest point per facet per
            // mark (!), since each facet has its own pointer event listeners; we only
            // want the closest point across facets to be visible.
            const faceted = index.fi != null;
            let facetState;
            if (faceted) {
                let facetStates = state.facetStates;
                if (!facetStates) state.facetStates = facetStates = new Map();
                facetState = facetStates.get(this);
                if (!facetState) facetStates.set(this, facetState = new Map());
            }
            // The order of precedence for the pointer position is: px & py; the
            // middle of x1 & y1 and x2 & y2; or x1 & y1 (e.g., area); or lastly x &
            // y. If a dimension is unspecified, the frame anchor is used.
            const [cx, cy] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyFrameAnchor"])(this, dimensions);
            const { px: PX, py: PY } = values;
            const px = PX ? (i)=>PX[i] : anchorX(values, cx);
            const py = PY ? (i)=>PY[i] : anchorY(values, cy);
            let i; // currently focused index
            let g; // currently rendered mark
            let s; // currently rendered stickiness
            let f; // current animation frame
            // When faceting, if more than one pointer would be visible, only show
            // this one if it is the closest. We defer rendering using an animation
            // frame to allow all pointer events to be received before deciding which
            // mark to render; although when hiding, we render immediately.
            function update(ii, ri) {
                if (faceted) {
                    if (f) f = cancelAnimationFrame(f);
                    if (ii == null) facetState.delete(index.fi);
                    else {
                        facetState.set(index.fi, ri);
                        f = requestAnimationFrame(()=>{
                            f = null;
                            for (const [fi, r] of facetState){
                                if (r < ri || r === ri && fi < index.fi) {
                                    ii = null;
                                    break;
                                }
                            }
                            render(ii);
                        });
                        return;
                    }
                }
                render(ii);
            }
            function render(ii) {
                if (i === ii && s === state.sticky) return; // the tooltip hasn’t moved
                i = ii;
                s = context.pointerSticky = state.sticky;
                const I = i == null ? [] : [
                    i
                ];
                if (faceted) I.fx = index.fx, I.fy = index.fy, I.fi = index.fi;
                const r = next(I, scales, values, dimensions, context);
                if (g) {
                    // When faceting, preserve swapped mark and facet transforms; also
                    // remove ARIA attributes since these are promoted to the parent. This
                    // is perhaps brittle in that it depends on how Plot renders facets,
                    // but it produces a cleaner and more accessible SVG structure.
                    if (faceted) {
                        const p = g.parentNode;
                        const ft = g.getAttribute("transform");
                        const mt = r.getAttribute("transform");
                        ft ? r.setAttribute("transform", ft) : r.removeAttribute("transform");
                        mt ? p.setAttribute("transform", mt) : p.removeAttribute("transform");
                        r.removeAttribute("aria-label");
                        r.removeAttribute("aria-description");
                        r.removeAttribute("aria-hidden");
                    }
                    g.replaceWith(r);
                }
                state.roots[renderIndex] = g = r;
                // Dispatch the value. When simultaneously exiting this facet and
                // entering a new one, prioritize the entering facet.
                if (!(i == null && (facetState === null || facetState === void 0 ? void 0 : facetState.size) > 1)) {
                    const value = i == null ? null : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(data) ? data[i] : data.get(i);
                    context.dispatchValue(value);
                }
                return r;
            }
            // Select the closest point to the mouse in the current facet; for
            // pointerX or pointerY, the orthogonal component of the distance is
            // squashed, selecting primarily on the dominant dimension. Across facets,
            // use unsquashed distance to determine the winner.
            function pointermove(event) {
                if (state.sticky || event.pointerType === "mouse" && event.buttons === 1) return; // dragging
                let [xp, yp] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$pointer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__pointer$3e$__["pointer"])(event);
                xp -= tx, yp -= ty; // correct for facets and band scales
                const kpx = xp < dimensions.marginLeft || xp > dimensions.width - dimensions.marginRight ? 1 : kx;
                const kpy = yp < dimensions.marginTop || yp > dimensions.height - dimensions.marginBottom ? 1 : ky;
                let ii = null;
                let ri = maxRadius * maxRadius;
                for (const j of index){
                    const dx = kpx * (px(j) - xp);
                    const dy = kpy * (py(j) - yp);
                    const rj = dx * dx + dy * dy;
                    if (rj <= ri) ii = j, ri = rj;
                }
                if (ii != null && (kx !== 1 || ky !== 1)) {
                    const dx = px(ii) - xp;
                    const dy = py(ii) - yp;
                    ri = dx * dx + dy * dy;
                }
                update(ii, ri);
            }
            function pointerdown(event) {
                if (event.pointerType !== "mouse") return;
                if (i == null) return; // not pointing
                if (state.sticky && state.roots.some((r)=>r === null || r === void 0 ? void 0 : r.contains(event.target))) return; // stay sticky
                if (state.sticky) state.sticky = false, state.renders.forEach((r)=>r(null)); // clear all pointers
                else state.sticky = true, render(i);
                event.stopImmediatePropagation(); // suppress other pointers
            }
            function pointerleave(event) {
                if (event.pointerType !== "mouse") return;
                if (!state.sticky) update(null);
            }
            // We listen to the svg element; listening to the window instead would let
            // us receive pointer events from farther away, but would also make it
            // hard to know when to remove the listeners. (Using a mutation observer
            // to watch the entire document is likely too expensive.)
            svg.addEventListener("pointerenter", pointermove);
            svg.addEventListener("pointermove", pointermove);
            svg.addEventListener("pointerdown", pointerdown);
            svg.addEventListener("pointerleave", pointerleave);
            return render(null);
        }, render)
    };
}
function pointer(options) {
    return pointerK(1, 1, options);
}
function pointerX(options) {
    return pointerK(1, 0.01, options);
}
function pointerY(options) {
    return pointerK(0.01, 1, options);
}
function anchorX(param, cx) {
    let { x1: X1, x2: X2, x: X = X1 } = param;
    return X1 && X2 ? (i)=>(X1[i] + X2[i]) / 2 : X ? (i)=>X[i] : ()=>cx;
}
function anchorY(param, cy) {
    let { y1: Y1, y2: Y2, y: Y = Y1 } = param;
    return Y1 && Y2 ? (i)=>(Y1[i] + Y2[i]) / 2 : Y ? (i)=>Y[i] : ()=>cy;
}
}),
"[project]/node_modules/@observablehq/plot/src/axes.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "inferFontVariant",
    ()=>inferFontVariant
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales.js [app-client] (ecmascript)");
;
function inferFontVariant(scale) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isOrdinalScale"])(scale) && scale.interval === undefined ? undefined : "tabular-nums";
}
}),
"[project]/node_modules/@observablehq/plot/src/legends/ramp.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "legendRamp",
    ()=>legendRamp
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$quantize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantize$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-interpolate/src/quantize.js [app-client] (ecmascript) <export default as quantize>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$number$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateNumber$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-interpolate/src/number.js [app-client] (ecmascript) <export default as interpolateNumber>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$piecewise$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__piecewise$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-interpolate/src/piecewise.js [app-client] (ecmascript) <export default as piecewise>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$format$2f$src$2f$defaultLocale$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-format/src/defaultLocale.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$band$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleBand$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale/src/band.js [app-client] (ecmascript) <export default as scaleBand>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$linear$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleLinear$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-scale/src/linear.js [app-client] (ecmascript) <export default as scaleLinear>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$axis$2f$src$2f$axis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-axis/src/axis.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$axes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/axes.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/context.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales/quantitative.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/style.js [app-client] (ecmascript)");
;
;
;
;
;
;
function legendRamp(color, options) {
    let { label = color.label, tickSize = 6, width = 240, height = 44 + tickSize, marginTop = 18, marginRight = 0, marginBottom = 16 + tickSize, marginLeft = 0, style, ticks = (width - marginLeft - marginRight) / 64, tickFormat, fontVariant = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$axes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["inferFontVariant"])(color), round = true, opacity, className } = options;
    const context = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createContext"])(options);
    className = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeClassName"])(className);
    opacity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeNumberChannel"])(opacity)[1];
    if (tickFormat === null) tickFormat = ()=>null;
    const svg = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["create"])("svg", context).attr("class", "".concat(className, "-ramp")).attr("font-family", "system-ui, sans-serif").attr("font-size", 10).attr("width", width).attr("height", height).attr("viewBox", "0 0 ".concat(width, " ").concat(height)).call((svg)=>// Warning: if you edit this, change defaultClassName.
        svg.append("style").text(":where(.".concat(className, "-ramp) {\n  display: block;\n  height: auto;\n  height: intrinsic;\n  max-width: 100%;\n  overflow: visible;\n}\n:where(.").concat(className, "-ramp text) {\n  white-space: pre;\n}"))).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyInlineStyles"], style);
    let tickAdjust = (g)=>g.selectAll(".tick line").attr("y1", marginTop + marginBottom - height);
    let x;
    // Some D3 scales use scale.interpolate, some scale.interpolator, and some
    // scale.round; this normalizes the API so it works with all scale types.
    const applyRange = round ? (x, range)=>x.rangeRound(range) : (x, range)=>x.range(range);
    const { type, domain, range, interpolate, scale, pivot } = color;
    // Continuous
    if (interpolate) {
        // Often interpolate is a “fixed” interpolator on the [0, 1] interval, as
        // with a built-in color scheme, but sometimes it is a function that takes
        // two arguments and is used in conjunction with the range.
        const interpolator = range === undefined ? interpolate : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$piecewise$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__piecewise$3e$__["piecewise"])(interpolate.length === 1 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$quantitative$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["interpolatePiecewise"])(interpolate) : interpolate, range);
        // Construct a D3 scale of the same type, but with a range that evenly
        // divides the horizontal extent of the legend. (In the common case, the
        // domain.length is two, and so the range is simply the extent.) For a
        // diverging scale, we need an extra point in the range for the pivot such
        // that the pivot is always drawn in the middle.
        x = applyRange(scale.copy(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$quantize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__quantize$3e$__["quantize"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$interpolate$2f$src$2f$number$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__interpolateNumber$3e$__["interpolateNumber"])(marginLeft, width - marginRight), Math.min(domain.length + (pivot !== undefined), range === undefined ? Infinity : range.length)));
        // Construct a 256×1 canvas, filling each pixel using the interpolator.
        const n = 256;
        const canvas = context.document.createElement("canvas");
        canvas.width = n;
        canvas.height = 1;
        const context2 = canvas.getContext("2d");
        for(let i = 0, j = n - 1; i < n; ++i){
            context2.fillStyle = interpolator(i / j);
            context2.fillRect(i, 0, 1, 1);
        }
        svg.append("image").attr("opacity", opacity).attr("x", marginLeft).attr("y", marginTop).attr("width", width - marginLeft - marginRight).attr("height", height - marginTop - marginBottom).attr("preserveAspectRatio", "none").attr("xlink:href", canvas.toDataURL());
    } else if (type === "threshold") {
        const thresholds = domain;
        const thresholdFormat = tickFormat === undefined ? (d)=>d : typeof tickFormat === "string" ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$format$2f$src$2f$defaultLocale$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["format"])(tickFormat) : tickFormat;
        // Construct a linear scale with evenly-spaced ticks for each of the
        // thresholds; the domain extends one beyond the threshold extent.
        x = applyRange((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$linear$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleLinear$3e$__["scaleLinear"])().domain([
            -1,
            range.length - 1
        ]), [
            marginLeft,
            width - marginRight
        ]);
        svg.append("g").attr("fill-opacity", opacity).selectAll().data(range).enter().append("rect").attr("x", (d, i)=>x(i - 1)).attr("y", marginTop).attr("width", (d, i)=>x(i) - x(i - 1)).attr("height", height - marginTop - marginBottom).attr("fill", (d)=>d);
        ticks = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["map"])(thresholds, (_, i)=>i);
        tickFormat = (i)=>thresholdFormat(thresholds[i], i);
    } else {
        x = applyRange((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$scale$2f$src$2f$band$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__scaleBand$3e$__["scaleBand"])().domain(domain), [
            marginLeft,
            width - marginRight
        ]);
        svg.append("g").attr("fill-opacity", opacity).selectAll().data(domain).enter().append("rect").attr("x", x).attr("y", marginTop).attr("width", Math.max(0, x.bandwidth() - 1)).attr("height", height - marginTop - marginBottom).attr("fill", scale);
        tickAdjust = ()=>{};
    }
    svg.append("g").attr("transform", "translate(0,".concat(height - marginBottom, ")")).call((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$axis$2f$src$2f$axis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axisBottom"])(x).ticks(Array.isArray(ticks) ? null : ticks, typeof tickFormat === "string" ? tickFormat : undefined).tickFormat(typeof tickFormat === "function" ? tickFormat : undefined).tickSize(tickSize).tickValues(Array.isArray(ticks) ? ticks : null)).attr("font-size", null).attr("font-family", null).attr("font-variant", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["impliedString"])(fontVariant, "normal")).call(tickAdjust).call((g)=>g.select(".domain").remove());
    if (label !== undefined) {
        svg.append("text").attr("x", marginLeft).attr("y", marginTop - 6).attr("fill", "currentColor") // TODO move to stylesheet?
        .attr("font-weight", "bold").text(label);
    }
    return svg.node();
}
}),
"[project]/node_modules/@observablehq/plot/src/math.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "radians",
    ()=>radians
]);
const radians = Math.PI / 180;
}),
"[project]/node_modules/@observablehq/plot/src/marker.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "applyGroupedMarkers",
    ()=>applyGroupedMarkers,
    "applyMarkers",
    ()=>applyMarkers,
    "markers",
    ()=>markers
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/context.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$memoize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/memoize.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
;
;
;
function markers(mark) {
    let { marker, markerStart = marker, markerMid = marker, markerEnd = marker } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    mark.markerStart = maybeMarker(markerStart);
    mark.markerMid = maybeMarker(markerMid);
    mark.markerEnd = maybeMarker(markerEnd);
}
function maybeMarker(marker) {
    if (marker == null || marker === false) return null;
    if (marker === true) return markerCircleFill;
    if (typeof marker === "function") return marker;
    switch("".concat(marker).toLowerCase()){
        case "none":
            return null;
        case "arrow":
            return markerArrow("auto");
        case "arrow-reverse":
            return markerArrow("auto-start-reverse");
        case "dot":
            return markerDot;
        case "circle":
        case "circle-fill":
            return markerCircleFill;
        case "circle-stroke":
            return markerCircleStroke;
        case "tick":
            return markerTick("auto");
        case "tick-x":
            return markerTick(90);
        case "tick-y":
            return markerTick(0);
    }
    throw new Error("invalid marker: ".concat(marker));
}
function markerArrow(orient) {
    return (color, context)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["create"])("svg:marker", context).attr("viewBox", "-5 -5 10 10").attr("markerWidth", 6.67).attr("markerHeight", 6.67).attr("orient", orient).attr("fill", "none").attr("stroke", color).attr("stroke-width", 1.5).attr("stroke-linecap", "round").attr("stroke-linejoin", "round").call((marker)=>marker.append("path").attr("d", "M-1.5,-3l3,3l-3,3")).node();
}
function markerDot(color, context) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["create"])("svg:marker", context).attr("viewBox", "-5 -5 10 10").attr("markerWidth", 6.67).attr("markerHeight", 6.67).attr("fill", color).attr("stroke", "none").call((marker)=>marker.append("circle").attr("r", 2.5)).node();
}
function markerCircleFill(color, context) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["create"])("svg:marker", context).attr("viewBox", "-5 -5 10 10").attr("markerWidth", 6.67).attr("markerHeight", 6.67).attr("fill", color).attr("stroke", "var(--plot-background)").attr("stroke-width", 1.5).call((marker)=>marker.append("circle").attr("r", 3)).node();
}
function markerCircleStroke(color, context) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["create"])("svg:marker", context).attr("viewBox", "-5 -5 10 10").attr("markerWidth", 6.67).attr("markerHeight", 6.67).attr("fill", "var(--plot-background)").attr("stroke", color).attr("stroke-width", 1.5).call((marker)=>marker.append("circle").attr("r", 3)).node();
}
function markerTick(orient) {
    return (color, context)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["create"])("svg:marker", context).attr("viewBox", "-3 -3 6 6").attr("markerWidth", 6).attr("markerHeight", 6).attr("orient", orient).attr("stroke", color).call((marker)=>marker.append("path").attr("d", "M0,-3v6")).node();
}
let nextMarkerId = 0;
function applyMarkers(path, mark, param, context) {
    let { stroke: S } = param;
    return applyMarkersColor(path, mark, S && ((i)=>S[i]), null, context);
}
function applyGroupedMarkers(path, mark, param, context) {
    let { stroke: S, z: Z } = param;
    return applyMarkersColor(path, mark, S && ((param)=>{
        let [i] = param;
        return S[i];
    }), Z, context);
}
const START = 1;
const END = 2;
/**
 * When rendering lines or areas with variable aesthetics, a single series
 * produces multiple path elements. The first path element is a START segment;
 * the last path element is an END segment. When there is only a single path
 * element, it is both a START and an END segment.
 */ function getGroupedOrientation(path, Z) {
    const O = new Uint8Array(Z.length);
    const D = path.data().filter((I)=>I.length > 1);
    const n = D.length;
    // Forward pass to find start segments.
    for(let i = 0, z = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$memoize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["unset"]; i < n; ++i){
        const I = D[i];
        if (I.length > 1) {
            const i = I[0];
            if (z !== (z = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keyof"])(Z[i]))) O[i] |= START;
        }
    }
    // Backwards pass to find end segments.
    for(let i = n - 1, z = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$memoize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["unset"]; i >= 0; --i){
        const I = D[i];
        if (I.length > 1) {
            const i = I[0];
            if (z !== (z = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keyof"])(Z[i]))) O[i] |= END;
        }
    }
    return (param)=>{
        let [i] = param;
        return O[i];
    };
}
function applyMarkersColor(path, param) {
    let { markerStart, markerMid, markerEnd, stroke } = param, strokeof = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ()=>stroke, Z = arguments.length > 3 ? arguments[3] : void 0, context = arguments.length > 4 ? arguments[4] : void 0;
    if (!markerStart && !markerMid && !markerEnd) return;
    const iriByMarkerColor = new Map();
    const orient = Z && getGroupedOrientation(path, Z);
    function applyMarker(name, marker, filter) {
        return function(i) {
            if (filter && !filter(i)) return;
            const color = strokeof(i);
            let iriByColor = iriByMarkerColor.get(marker);
            if (!iriByColor) iriByMarkerColor.set(marker, iriByColor = new Map());
            let iri = iriByColor.get(color);
            if (!iri) {
                const node = this.parentNode.insertBefore(marker(color, context), this);
                const id = "plot-marker-".concat(++nextMarkerId);
                node.setAttribute("id", id);
                iriByColor.set(color, iri = "url(#".concat(id, ")"));
            }
            this.setAttribute(name, iri);
        };
    }
    if (markerStart) path.each(applyMarker("marker-start", markerStart, orient && ((i)=>orient(i) & START)));
    if (markerMid && orient) path.each(applyMarker("marker-start", markerMid, (i)=>!(orient(i) & START)));
    if (markerMid) path.each(applyMarker("marker-mid", markerMid));
    if (markerEnd) path.each(applyMarker("marker-end", markerEnd, orient && ((i)=>orient(i) & END)));
}
}),
"[project]/node_modules/@observablehq/plot/src/transforms/inset.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "maybeInsetX",
    ()=>maybeInsetX,
    "maybeInsetY",
    ()=>maybeInsetY
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/style.js [app-client] (ecmascript)");
;
function maybeInsetX() {
    let { inset, insetLeft, insetRight, ...options } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    [insetLeft, insetRight] = maybeInset(inset, insetLeft, insetRight);
    return {
        inset,
        insetLeft,
        insetRight,
        ...options
    };
}
function maybeInsetY() {
    let { inset, insetTop, insetBottom, ...options } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    [insetTop, insetBottom] = maybeInset(inset, insetTop, insetBottom);
    return {
        inset,
        insetTop,
        insetBottom,
        ...options
    };
}
function maybeInset(inset, inset1, inset2) {
    return inset === undefined && inset1 === undefined && inset2 === undefined ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["offset"] ? [
        1,
        0
    ] : [
        0.5,
        0.5
    ] : [
        inset1,
        inset2
    ];
}
}),
"[project]/node_modules/@observablehq/plot/src/transforms/interval.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "maybeIntervalMidX",
    ()=>maybeIntervalMidX,
    "maybeIntervalMidY",
    ()=>maybeIntervalMidY,
    "maybeIntervalX",
    ()=>maybeIntervalX,
    "maybeIntervalY",
    ()=>maybeIntervalY,
    "maybeTrivialIntervalX",
    ()=>maybeTrivialIntervalX,
    "maybeTrivialIntervalY",
    ()=>maybeTrivialIntervalY
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$inset$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/inset.js [app-client] (ecmascript)");
;
;
// The interval may be specified either as x: {value, interval} or as {x,
// interval}. The former can be used to specify separate intervals for x and y,
// for example with Plot.rect.
function maybeIntervalValue(value, param) {
    let { interval } = param;
    value = {
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeValue"])(value)
    };
    value.interval = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeInterval"])(value.interval === undefined ? interval : value.interval);
    return value;
}
function maybeIntervalK(k, maybeInsetK, options, trivial) {
    const { [k]: v, ["".concat(k, "1")]: v1, ["".concat(k, "2")]: v2 } = options;
    const { value, interval } = maybeIntervalValue(v, options);
    if (value == null || interval == null && !trivial) return options;
    const label = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["labelof"])(v);
    if (interval == null) {
        let V;
        const kv = {
            transform: (data)=>V || (V = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, value)),
            label
        };
        return {
            ...options,
            [k]: undefined,
            ["".concat(k, "1")]: v1 === undefined ? kv : v1,
            ["".concat(k, "2")]: v2 === undefined && !(v1 === v2 && trivial) ? kv : v2
        };
    }
    let D1, V1;
    function transform(data) {
        if (V1 !== undefined && data === D1) return V1; // memoize
        return V1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["map"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(D1 = data, value), (v)=>interval.floor(v));
    }
    return maybeInsetK({
        ...options,
        [k]: undefined,
        ["".concat(k, "1")]: v1 === undefined ? {
            transform,
            label
        } : v1,
        ["".concat(k, "2")]: v2 === undefined ? {
            transform: (data)=>transform(data).map((v)=>interval.offset(v)),
            label
        } : v2
    });
}
function maybeIntervalMidK(k, maybeInsetK, options) {
    const { [k]: v } = options;
    const { value, interval } = maybeIntervalValue(v, options);
    if (value == null || interval == null) return options;
    return maybeInsetK({
        ...options,
        [k]: {
            label: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["labelof"])(v),
            transform: (data)=>{
                const V1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["map"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, value), (v)=>interval.floor(v));
                const V2 = V1.map((v)=>interval.offset(v));
                return V1.map((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isTemporal"])(V1) ? (v1, v2)=>v1 == null || isNaN(v1 = +v1) || (v2 = V2[v2], v2 == null) || isNaN(v2 = +v2) ? undefined : new Date((v1 + v2) / 2) : (v1, v2)=>v1 == null || (v2 = V2[v2], v2 == null) ? NaN : (+v1 + +v2) / 2);
            }
        }
    });
}
function maybeTrivialIntervalX() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return maybeIntervalK("x", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$inset$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeInsetX"], options, true);
}
function maybeTrivialIntervalY() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return maybeIntervalK("y", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$inset$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeInsetY"], options, true);
}
function maybeIntervalX() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return maybeIntervalK("x", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$inset$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeInsetX"], options);
}
function maybeIntervalY() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return maybeIntervalK("y", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$inset$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeInsetY"], options);
}
function maybeIntervalMidX() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return maybeIntervalMidK("x", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$inset$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeInsetX"], options);
}
function maybeIntervalMidY() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return maybeIntervalMidK("y", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$inset$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeInsetY"], options);
}
}),
"[project]/node_modules/@observablehq/plot/src/marks/rule.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "RuleX",
    ()=>RuleX,
    "RuleY",
    ()=>RuleY,
    "ruleX",
    ()=>ruleX,
    "ruleY",
    ()=>ruleY
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/context.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/mark.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marker$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/marker.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/style.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$interval$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/interval.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
const defaults = {
    ariaLabel: "rule",
    fill: null,
    stroke: "currentColor"
};
class RuleX extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Mark"] {
    render(index, scales, channels, dimensions, context) {
        const { x, y } = scales;
        const { x: X, y1: Y1, y2: Y2 } = channels;
        const { width, height, marginTop, marginRight, marginLeft, marginBottom } = dimensions;
        const { insetTop, insetBottom } = this;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["create"])("svg:g", context).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyIndirectStyles"], this, dimensions, context).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyTransform"], this, {
            x: X && x
        }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["offset"], 0).call((g)=>g.selectAll().data(index).enter().append("line").call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyDirectStyles"], this).attr("x1", X ? (i)=>X[i] : (marginLeft + width - marginRight) / 2).attr("x2", X ? (i)=>X[i] : (marginLeft + width - marginRight) / 2).attr("y1", Y1 && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isCollapsed"])(y) ? (i)=>Y1[i] + insetTop : marginTop + insetTop).attr("y2", Y2 && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isCollapsed"])(y) ? y.bandwidth ? (i)=>Y2[i] + y.bandwidth() - insetBottom : (i)=>Y2[i] - insetBottom : height - marginBottom - insetBottom).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyChannelStyles"], this, channels).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marker$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyMarkers"], this, channels, context)).node();
    }
    constructor(data, options = {}){
        const { x, y1, y2, inset = 0, insetTop = inset, insetBottom = inset } = options;
        super(data, {
            x: {
                value: x,
                scale: "x",
                optional: true
            },
            y1: {
                value: y1,
                scale: "y",
                optional: true
            },
            y2: {
                value: y2,
                scale: "y",
                optional: true
            }
        }, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["withTip"])(options, "x"), defaults);
        this.insetTop = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(insetTop);
        this.insetBottom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(insetBottom);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marker$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["markers"])(this, options);
    }
}
class RuleY extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Mark"] {
    render(index, scales, channels, dimensions, context) {
        const { x, y } = scales;
        const { y: Y, x1: X1, x2: X2 } = channels;
        const { width, height, marginTop, marginRight, marginLeft, marginBottom } = dimensions;
        const { insetLeft, insetRight } = this;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["create"])("svg:g", context).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyIndirectStyles"], this, dimensions, context).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyTransform"], this, {
            y: Y && y
        }, 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["offset"]).call((g)=>g.selectAll().data(index).enter().append("line").call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyDirectStyles"], this).attr("x1", X1 && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isCollapsed"])(x) ? (i)=>X1[i] + insetLeft : marginLeft + insetLeft).attr("x2", X2 && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isCollapsed"])(x) ? x.bandwidth ? (i)=>X2[i] + x.bandwidth() - insetRight : (i)=>X2[i] - insetRight : width - marginRight - insetRight).attr("y1", Y ? (i)=>Y[i] : (marginTop + height - marginBottom) / 2).attr("y2", Y ? (i)=>Y[i] : (marginTop + height - marginBottom) / 2).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyChannelStyles"], this, channels).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marker$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyMarkers"], this, channels, context)).node();
    }
    constructor(data, options = {}){
        const { x1, x2, y, inset = 0, insetRight = inset, insetLeft = inset } = options;
        super(data, {
            y: {
                value: y,
                scale: "y",
                optional: true
            },
            x1: {
                value: x1,
                scale: "x",
                optional: true
            },
            x2: {
                value: x2,
                scale: "x",
                optional: true
            }
        }, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["withTip"])(options, "y"), defaults);
        this.insetRight = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(insetRight);
        this.insetLeft = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(insetLeft);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marker$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["markers"])(this, options);
    }
}
function ruleX(data, options) {
    let { x = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"], y, y1, y2, ...rest } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$interval$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeIntervalY"])(options);
    [y1, y2] = maybeOptionalZero(y, y1, y2);
    return new RuleX(data, {
        ...rest,
        x,
        y1,
        y2
    });
}
function ruleY(data, options) {
    let { y = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"], x, x1, x2, ...rest } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$interval$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeIntervalX"])(options);
    [x1, x2] = maybeOptionalZero(x, x1, x2);
    return new RuleY(data, {
        ...rest,
        y,
        x1,
        x2
    });
}
// For marks specified either as [0, x] or [x1, x2], or nothing.
function maybeOptionalZero(x, x1, x2) {
    if (x == null) {
        if (x1 === undefined) {
            if (x2 !== undefined) return [
                0,
                x2
            ];
        } else {
            if (x2 === undefined) return [
                0,
                x1
            ];
        }
    } else if (x1 === undefined) {
        return x2 === undefined ? [
            0,
            x
        ] : [
            x,
            x2
        ];
    } else if (x2 === undefined) {
        return [
            x,
            x1
        ];
    }
    return [
        x1,
        x2
    ];
}
}),
"[project]/node_modules/@observablehq/plot/src/template.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "template",
    ()=>template
]);
function template(strings) {
    for(var _len = arguments.length, parts = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
        parts[_key - 1] = arguments[_key];
    }
    let n = parts.length;
    // If any of the interpolated parameters are strings rather than functions,
    // bake them into the template to optimize performance during render.
    for(let j = 0, copy = true; j < n; ++j){
        if (typeof parts[j] !== "function") {
            if (copy) {
                strings = strings.slice(); // copy before mutate
                copy = false;
            }
            strings.splice(j, 2, strings[j] + parts[j] + strings[j + 1]);
            parts.splice(j, 1);
            --j, --n;
        }
    }
    return (i)=>{
        let s = strings[0];
        for(let j = 0; j < n; ++j){
            s += parts[j](i) + strings[j + 1];
        }
        return s;
    };
}
}),
"[project]/node_modules/@observablehq/plot/src/marks/text.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Text",
    ()=>Text,
    "applyIndirectTextStyles",
    ()=>applyIndirectTextStyles,
    "clipEnd",
    ()=>clipEnd,
    "clipMiddle",
    ()=>clipMiddle,
    "clipStart",
    ()=>clipStart,
    "clipper",
    ()=>clipper,
    "cut",
    ()=>cut,
    "defaultWidth",
    ()=>defaultWidth,
    "ellipsis",
    ()=>ellipsis,
    "maybeTextOverflow",
    ()=>maybeTextOverflow,
    "monospaceWidth",
    ()=>monospaceWidth,
    "readCharacter",
    ()=>readCharacter,
    "splitter",
    ()=>splitter,
    "text",
    ()=>text,
    "textX",
    ()=>textX,
    "textY",
    ()=>textY
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_tagged_template_literal.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$namespaces$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__namespaces$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-selection/src/namespaces.js [app-client] (ecmascript) <export default as namespaces>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/context.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/defined.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$format$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/format.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/mark.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/style.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$template$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/template.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$interval$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/interval.js [app-client] (ecmascript)");
;
function _templateObject() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "translate(",
        ",",
        ")",
        ""
    ]);
    _templateObject = function() {
        return data;
    };
    return data;
}
;
;
;
;
;
;
;
;
;
const defaults = {
    ariaLabel: "text",
    strokeLinejoin: "round",
    strokeWidth: 3,
    paintOrder: "stroke"
};
const softHyphen = "\u00ad";
class Text extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Mark"] {
    render(index, scales, channels, dimensions, context) {
        const { x, y } = scales;
        const { x: X, y: Y, rotate: R, text: T, title: TL, fontSize: FS } = channels;
        const { rotate } = this;
        const [cx, cy] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyFrameAnchor"])(this, dimensions);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["create"])("svg:g", context).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyIndirectStyles"], this, dimensions, context).call(applyIndirectTextStyles, this, T, dimensions).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyTransform"], this, {
            x: X && x,
            y: Y && y
        }).call((g)=>g.selectAll().data(index).enter().append("text").call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyDirectStyles"], this).call(applyMultilineText, this, T, TL).attr("transform", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$template$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["template"])(_templateObject(), X ? (i)=>X[i] : cx, Y ? (i)=>Y[i] : cy, R ? (i)=>" rotate(".concat(R[i], ")") : rotate ? " rotate(".concat(rotate, ")") : "")).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyAttr"], "font-size", FS && ((i)=>FS[i])).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyChannelStyles"], this, channels)).node();
    }
    constructor(data, options = {}){
        const { x, y, text = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isIterable"])(data) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isTextual"])(data) ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["indexOf"], frameAnchor, textAnchor = /right$/i.test(frameAnchor) ? "end" : /left$/i.test(frameAnchor) ? "start" : "middle", lineAnchor = /^top/i.test(frameAnchor) ? "top" : /^bottom/i.test(frameAnchor) ? "bottom" : "middle", lineHeight = 1, lineWidth = Infinity, textOverflow, monospace, fontFamily = monospace ? "ui-monospace, monospace" : undefined, fontSize, fontStyle, fontVariant, fontWeight, rotate } = options;
        const [vrotate, crotate] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeNumberChannel"])(rotate, 0);
        const [vfontSize, cfontSize] = maybeFontSizeChannel(fontSize);
        super(data, {
            x: {
                value: x,
                scale: "x",
                optional: true
            },
            y: {
                value: y,
                scale: "y",
                optional: true
            },
            fontSize: {
                value: vfontSize,
                optional: true
            },
            rotate: {
                value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["numberChannel"])(vrotate),
                optional: true
            },
            text: {
                value: text,
                filter: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nonempty"],
                optional: true
            }
        }, options, defaults);
        this.rotate = crotate;
        this.textAnchor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["impliedString"])(textAnchor, "middle");
        this.lineAnchor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keyword"])(lineAnchor, "lineAnchor", [
            "top",
            "middle",
            "bottom"
        ]);
        this.lineHeight = +lineHeight;
        this.lineWidth = +lineWidth;
        this.textOverflow = maybeTextOverflow(textOverflow);
        this.monospace = !!monospace;
        this.fontFamily = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(fontFamily);
        this.fontSize = cfontSize;
        this.fontStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(fontStyle);
        this.fontVariant = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(fontVariant);
        this.fontWeight = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(fontWeight);
        this.frameAnchor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeFrameAnchor"])(frameAnchor);
        if (!(this.lineWidth >= 0)) throw new Error("invalid lineWidth: ".concat(lineWidth));
        this.splitLines = splitter(this);
        this.clipLine = clipper(this);
    }
}
function maybeTextOverflow(textOverflow) {
    return textOverflow == null ? null : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keyword"])(textOverflow, "textOverflow", [
        "clip",
        "ellipsis",
        "clip-start",
        "clip-end",
        "ellipsis-start",
        "ellipsis-middle",
        "ellipsis-end"
    ]).replace(/^(clip|ellipsis)$/, "$1-end");
}
function applyMultilineText(selection, mark, T, TL) {
    if (!T) return;
    const { lineAnchor, lineHeight, textOverflow, splitLines, clipLine } = mark;
    selection.each(function(i) {
        var _formatDefault;
        const lines = splitLines((_formatDefault = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$format$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatDefault"])(T[i])) !== null && _formatDefault !== void 0 ? _formatDefault : "").map(clipLine);
        const n = lines.length;
        const y = lineAnchor === "top" ? 0.71 : lineAnchor === "bottom" ? 1 - n : (164 - n * 100) / 200;
        if (n > 1) {
            let m = 0;
            for(let i = 0; i < n; ++i){
                ++m;
                if (!lines[i]) continue;
                const tspan = this.ownerDocument.createElementNS(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$namespaces$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__namespaces$3e$__["namespaces"].svg, "tspan");
                tspan.setAttribute("x", 0);
                if (i === m - 1) tspan.setAttribute("y", "".concat((y + i) * lineHeight, "em"));
                else tspan.setAttribute("dy", "".concat(m * lineHeight, "em"));
                tspan.textContent = lines[i];
                this.appendChild(tspan);
                m = 0;
            }
        } else {
            if (y) this.setAttribute("y", "".concat(y * lineHeight, "em"));
            this.textContent = lines[0];
        }
        if (textOverflow && !TL && lines[0] !== T[i]) {
            const title = this.ownerDocument.createElementNS(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$namespaces$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__namespaces$3e$__["namespaces"].svg, "title");
            title.textContent = T[i];
            this.appendChild(title);
        }
    });
}
function text(data) {
    let { x, y, ...options } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (options.frameAnchor === undefined) [x, y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeTuple"])(x, y);
    return new Text(data, {
        ...options,
        x,
        y
    });
}
function textX(data) {
    let { x = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"], ...options } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return new Text(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$interval$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeIntervalMidY"])({
        ...options,
        x
    }));
}
function textY(data) {
    let { y = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"], ...options } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return new Text(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$interval$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeIntervalMidX"])({
        ...options,
        y
    }));
}
function applyIndirectTextStyles(selection, mark, T) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyAttr"])(selection, "text-anchor", mark.textAnchor);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyAttr"])(selection, "font-family", mark.fontFamily);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyAttr"])(selection, "font-size", mark.fontSize);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyAttr"])(selection, "font-style", mark.fontStyle);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyAttr"])(selection, "font-variant", mark.fontVariant === undefined ? inferFontVariant(T) : mark.fontVariant);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyAttr"])(selection, "font-weight", mark.fontWeight);
}
function inferFontVariant(T) {
    return T && ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNumeric"])(T) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isTemporal"])(T)) ? "tabular-nums" : undefined;
}
// https://developer.mozilla.org/en-US/docs/Web/CSS/font-size
const fontSizes = new Set([
    // global keywords
    "inherit",
    "initial",
    "revert",
    "unset",
    // absolute keywords
    "xx-small",
    "x-small",
    "small",
    "medium",
    "large",
    "x-large",
    "xx-large",
    "xxx-large",
    // relative keywords
    "larger",
    "smaller"
]);
// The font size may be expressed as a constant in the following forms:
// - number in pixels
// - string keyword: see above
// - string <length>: e.g., "12px"
// - string <percentage>: e.g., "80%"
// Anything else is assumed to be a channel definition.
function maybeFontSizeChannel(fontSize) {
    if (fontSize == null || typeof fontSize === "number") return [
        undefined,
        fontSize
    ];
    if (typeof fontSize !== "string") return [
        fontSize,
        undefined
    ];
    fontSize = fontSize.trim().toLowerCase();
    return fontSizes.has(fontSize) || /^[+-]?\d*\.?\d+(e[+-]?\d+)?(\w*|%)$/.test(fontSize) ? [
        undefined,
        fontSize
    ] : [
        fontSize,
        undefined
    ];
}
// This is a greedy algorithm for line wrapping. It would be better to use the
// Knuth–Plass line breaking algorithm (but that would be much more complex).
// https://en.wikipedia.org/wiki/Line_wrap_and_word_wrap
function lineWrap(input, maxWidth, widthof) {
    const lines = [];
    let lineStart, lineEnd = 0;
    for (const [wordStart, wordEnd, required] of lineBreaks(input)){
        // Record the start of a line. This isn’t the same as the previous line’s
        // end because we often skip spaces between lines.
        if (lineStart === undefined) lineStart = wordStart;
        // If the current line is not empty, and if adding the current word would
        // make the line longer than the allowed width, then break the line at the
        // previous word end.
        if (lineEnd > lineStart && widthof(input, lineStart, wordEnd) > maxWidth) {
            lines.push(input.slice(lineStart, lineEnd) + (input[lineEnd - 1] === softHyphen ? "-" : ""));
            lineStart = wordStart;
        }
        // If this is a required break (a newline), emit the line and reset.
        if (required) {
            lines.push(input.slice(lineStart, wordEnd));
            lineStart = undefined;
            continue;
        }
        // Extend the current line to include the new word.
        lineEnd = wordEnd;
    }
    return lines;
}
// This is a rudimentary (and U.S.-centric) algorithm for finding opportunities
// to break lines between words. A better and far more comprehensive approach
// would be to use the official Unicode Line Breaking Algorithm.
// https://unicode.org/reports/tr14/
function* lineBreaks(input) {
    let i = 0, j = 0;
    const n = input.length;
    while(j < n){
        let k = 1;
        switch(input[j]){
            case softHyphen:
            case "-":
                ++j;
                yield [
                    i,
                    j,
                    false
                ];
                i = j;
                break;
            case " ":
                yield [
                    i,
                    j,
                    false
                ];
                while(input[++j] === " "); // skip multiple spaces
                i = j;
                break;
            case "\r":
                if (input[j + 1] === "\n") ++k; // falls through
            case "\n":
                yield [
                    i,
                    j,
                    true
                ];
                j += k;
                i = j;
                break;
            default:
                ++j;
                break;
        }
    }
    yield [
        i,
        j,
        true
    ];
}
// Computed as round(measureText(text).width * 10) at 10px system-ui. For
// characters that are not represented in this map, we’d ideally want to use a
// weighted average of what we expect to see. But since we don’t really know
// what that is, using “e” seems reasonable.
const defaultWidthMap = {
    a: 56,
    b: 63,
    c: 57,
    d: 63,
    e: 58,
    f: 37,
    g: 62,
    h: 60,
    i: 26,
    j: 26,
    k: 55,
    l: 26,
    m: 88,
    n: 60,
    o: 60,
    p: 62,
    q: 62,
    r: 39,
    s: 54,
    t: 38,
    u: 60,
    v: 55,
    w: 79,
    x: 54,
    y: 55,
    z: 55,
    A: 69,
    B: 67,
    C: 73,
    D: 74,
    E: 61,
    F: 58,
    G: 76,
    H: 75,
    I: 28,
    J: 55,
    K: 67,
    L: 58,
    M: 89,
    N: 75,
    O: 78,
    P: 65,
    Q: 78,
    R: 67,
    S: 65,
    T: 65,
    U: 75,
    V: 69,
    W: 98,
    X: 69,
    Y: 67,
    Z: 67,
    0: 64,
    1: 48,
    2: 62,
    3: 64,
    4: 66,
    5: 63,
    6: 65,
    7: 58,
    8: 65,
    9: 65,
    " ": 29,
    "!": 32,
    '"': 49,
    "'": 31,
    "(": 39,
    ")": 39,
    ",": 31,
    "-": 48,
    ".": 31,
    "/": 32,
    ":": 31,
    ";": 31,
    "?": 52,
    "‘": 31,
    "’": 31,
    "“": 47,
    "”": 47,
    "…": 82
};
function defaultWidth(text) {
    let start = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, end = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : text.length;
    let sum = 0;
    for(let i = start; i < end; i = readCharacter(text, i)){
        var _defaultWidthMap_text_i;
        sum += (_defaultWidthMap_text_i = defaultWidthMap[text[i]]) !== null && _defaultWidthMap_text_i !== void 0 ? _defaultWidthMap_text_i : isPictographic(text, i) ? 120 : defaultWidthMap.e;
    }
    return sum;
}
function monospaceWidth(text) {
    let start = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, end = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : text.length;
    let sum = 0;
    for(let i = start; i < end; i = readCharacter(text, i)){
        sum += isPictographic(text, i) ? 126 : 63;
    }
    return sum;
}
function splitter(param) {
    let { monospace, lineWidth, textOverflow } = param;
    if (textOverflow != null || lineWidth == Infinity) return (text)=>text.split(/\r\n?|\n/g);
    const widthof = monospace ? monospaceWidth : defaultWidth;
    const maxWidth = lineWidth * 100;
    return (text)=>lineWrap(text, maxWidth, widthof);
}
function clipper(param) {
    let { monospace, lineWidth, textOverflow } = param;
    if (textOverflow == null || lineWidth == Infinity) return (text)=>text;
    const widthof = monospace ? monospaceWidth : defaultWidth;
    const maxWidth = lineWidth * 100;
    switch(textOverflow){
        case "clip-start":
            return (text)=>clipStart(text, maxWidth, widthof, "");
        case "clip-end":
            return (text)=>clipEnd(text, maxWidth, widthof, "");
        case "ellipsis-start":
            return (text)=>clipStart(text, maxWidth, widthof, ellipsis);
        case "ellipsis-middle":
            return (text)=>clipMiddle(text, maxWidth, widthof, ellipsis);
        case "ellipsis-end":
            return (text)=>clipEnd(text, maxWidth, widthof, ellipsis);
    }
}
const ellipsis = "…";
function cut(text, width, widthof, inset) {
    const I = []; // indexes of read character boundaries
    let w = 0; // current line width
    for(let i = 0, j = 0, n = text.length; i < n; i = j){
        j = readCharacter(text, i); // read the next character
        const l = widthof(text, i, j); // current character width
        if (w + l > width) {
            w += inset;
            while(w > width && i > 0)j = i, i = I.pop(), w -= widthof(text, i, j); // remove excess
            return [
                i,
                width - w
            ];
        }
        w += l;
        I.push(i);
    }
    return [
        -1,
        0
    ];
}
function clipEnd(text, width, widthof, ellipsis) {
    text = text.trim(); // ignore leading and trailing whitespace
    const e = widthof(ellipsis);
    const [i] = cut(text, width, widthof, e);
    return i < 0 ? text : text.slice(0, i).trimEnd() + ellipsis;
}
function clipMiddle(text, width, widthof, ellipsis) {
    text = text.trim(); // ignore leading and trailing whitespace
    const w = widthof(text);
    if (w <= width) return text;
    const e = widthof(ellipsis) / 2;
    const [i, ei] = cut(text, width / 2, widthof, e);
    const [j] = cut(text, w - width / 2 - ei + e, widthof, -e); // TODO read spaces?
    return j < 0 ? ellipsis : text.slice(0, i).trimEnd() + ellipsis + text.slice(readCharacter(text, j)).trimStart();
}
function clipStart(text, width, widthof, ellipsis) {
    text = text.trim(); // ignore leading and trailing whitespace
    const w = widthof(text);
    if (w <= width) return text;
    const e = widthof(ellipsis);
    const [j] = cut(text, w - width + e, widthof, -e); // TODO read spaces?
    return j < 0 ? ellipsis : ellipsis + text.slice(readCharacter(text, j)).trimStart();
}
const reCombiner = RegExp("[\\p{Combining_Mark}\\p{Emoji_Modifier}]+", "uy");
const rePictographic = RegExp("\\p{Extended_Pictographic}", "uy");
function readCharacter(text, i) {
    i += isSurrogatePair(text, i) ? 2 : 1;
    if (isCombiner(text, i)) i = reCombiner.lastIndex;
    if (isZeroWidthJoiner(text, i)) return readCharacter(text, i + 1);
    return i;
}
// We avoid more expensive regex tests involving Unicode property classes by
// first checking for the common case of 7-bit ASCII characters.
function isAscii(text, i) {
    return text.charCodeAt(i) < 0x80;
}
function isSurrogatePair(text, i) {
    const hi = text.charCodeAt(i);
    if (hi >= 0xd800 && hi < 0xdc00) {
        const lo = text.charCodeAt(i + 1);
        return lo >= 0xdc00 && lo < 0xe000;
    }
    return false;
}
function isZeroWidthJoiner(text, i) {
    return text.charCodeAt(i) === 0x200d;
}
function isCombiner(text, i) {
    return isAscii(text, i) ? false : (reCombiner.lastIndex = i, reCombiner.test(text));
}
function isPictographic(text, i) {
    return isAscii(text, i) ? false : (rePictographic.lastIndex = i, rePictographic.test(text));
}
}),
"[project]/node_modules/@observablehq/plot/src/marks/vector.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Vector",
    ()=>Vector,
    "spike",
    ()=>spike,
    "vector",
    ()=>vector,
    "vectorX",
    ()=>vectorX,
    "vectorY",
    ()=>vectorY
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_tagged_template_literal.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$path$2f$src$2f$path$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-path/src/path.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/context.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/mark.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/style.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$template$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/template.js [app-client] (ecmascript)");
;
function _templateObject() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "translate(",
        ",",
        ")",
        "",
        ""
    ]);
    _templateObject = function() {
        return data;
    };
    return data;
}
;
;
;
;
;
;
const defaults = {
    ariaLabel: "vector",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: 1.5,
    strokeLinejoin: "round",
    strokeLinecap: "round"
};
const defaultRadius = 3.5;
// The size of the arrowhead is proportional to its length, but we still allow
// the relative size of the head to be controlled via the mark’s width option;
// doubling the default radius will produce an arrowhead that is twice as big.
// That said, we’ll probably want a arrow with a fixed head size, too.
const wingRatio = defaultRadius * 5;
const shapeArrow = {
    draw (context, l, r) {
        const wing = l * r / wingRatio;
        context.moveTo(0, 0);
        context.lineTo(0, -l);
        context.moveTo(-wing, wing - l);
        context.lineTo(0, -l);
        context.lineTo(wing, wing - l);
    }
};
const shapeSpike = {
    draw (context, l, r) {
        context.moveTo(-r, 0);
        context.lineTo(0, -l);
        context.lineTo(r, 0);
    }
};
const shapes = new Map([
    [
        "arrow",
        shapeArrow
    ],
    [
        "spike",
        shapeSpike
    ]
]);
function isShapeObject(value) {
    return value && typeof value.draw === "function";
}
function maybeShape(shape) {
    if (isShapeObject(shape)) return shape;
    const value = shapes.get("".concat(shape).toLowerCase());
    if (value) return value;
    throw new Error("invalid shape: ".concat(shape));
}
class Vector extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Mark"] {
    render(index, scales, channels, dimensions, context) {
        const { x, y } = scales;
        const { x: X, y: Y, length: L, rotate: A } = channels;
        const { length, rotate, anchor, shape, r } = this;
        const [cx, cy] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyFrameAnchor"])(this, dimensions);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["create"])("svg:g", context).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyIndirectStyles"], this, dimensions, context).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyTransform"], this, {
            x: X && x,
            y: Y && y
        }).call((g)=>g.selectAll().data(index).enter().append("path").call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyDirectStyles"], this).attr("transform", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$template$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["template"])(_templateObject(), X ? (i)=>X[i] : cx, Y ? (i)=>Y[i] : cy, A ? (i)=>" rotate(".concat(A[i], ")") : rotate ? " rotate(".concat(rotate, ")") : "", anchor === "start" ? "" : anchor === "end" ? L ? (i)=>" translate(0,".concat(L[i], ")") : " translate(0,".concat(length, ")") : L ? (i)=>" translate(0,".concat(L[i] / 2, ")") : " translate(0,".concat(length / 2, ")"))).attr("d", L ? (i)=>{
                const p = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$path$2f$src$2f$path$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pathRound"])();
                shape.draw(p, L[i], r);
                return p;
            } : (()=>{
                const p = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$path$2f$src$2f$path$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pathRound"])();
                shape.draw(p, length, r);
                return p;
            })()).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyChannelStyles"], this, channels)).node();
    }
    constructor(data, options = {}){
        const { x, y, r = defaultRadius, length, rotate, shape = shapeArrow, anchor = "middle", frameAnchor } = options;
        const [vl, cl] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeNumberChannel"])(length, 12);
        const [vr, cr] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeNumberChannel"])(rotate, 0);
        super(data, {
            x: {
                value: x,
                scale: "x",
                optional: true
            },
            y: {
                value: y,
                scale: "y",
                optional: true
            },
            length: {
                value: vl,
                scale: "length",
                optional: true
            },
            rotate: {
                value: vr,
                optional: true
            }
        }, options, defaults);
        this.r = +r;
        this.length = cl;
        this.rotate = cr;
        this.shape = maybeShape(shape);
        this.anchor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keyword"])(anchor, "anchor", [
            "start",
            "middle",
            "end"
        ]);
        this.frameAnchor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeFrameAnchor"])(frameAnchor);
    }
}
function vector(data) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    let { x, y, ...rest } = options;
    if (options.frameAnchor === undefined) [x, y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeTuple"])(x, y);
    return new Vector(data, {
        ...rest,
        x,
        y
    });
}
function vectorX(data) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const { x = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"], ...rest } = options;
    return new Vector(data, {
        ...rest,
        x
    });
}
function vectorY(data) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const { y = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"], ...rest } = options;
    return new Vector(data, {
        ...rest,
        y
    });
}
function spike(data) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const { shape = shapeSpike, stroke = defaults.stroke, strokeWidth = 1, fill = stroke, fillOpacity = 0.3, anchor = "start", ...rest } = options;
    return vector(data, {
        ...rest,
        shape,
        stroke,
        strokeWidth,
        fill,
        fillOpacity,
        anchor
    });
}
}),
"[project]/node_modules/@observablehq/plot/src/marks/axis.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "axisFx",
    ()=>axisFx,
    "axisFy",
    ()=>axisFy,
    "axisX",
    ()=>axisX,
    "axisY",
    ()=>axisY,
    "gridFx",
    ()=>gridFx,
    "gridFy",
    ()=>gridFy,
    "gridX",
    ()=>gridX,
    "gridY",
    ()=>gridY,
    "inferTickFormat",
    ()=>inferTickFormat
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$internmap$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/internmap/src/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/extent.js [app-client] (ecmascript) <export default as extent>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$format$2f$src$2f$defaultLocale$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-format/src/defaultLocale.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2d$format$2f$src$2f$defaultLocale$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-time-format/src/defaultLocale.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$format$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/format.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/mark.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$math$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/math.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/style.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$time$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/time.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$basic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/basic.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$warnings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/warnings.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$rule$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/marks/rule.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/marks/text.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/marks/vector.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
function maybeData(data, options) {
    if (arguments.length < 2 && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isIterable"])(data)) options = data, data = null;
    if (options === undefined) options = {};
    return [
        data,
        options
    ];
}
function maybeAnchor() {
    let { anchor } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, anchors = arguments.length > 1 ? arguments[1] : void 0;
    return anchor === undefined ? anchors[0] : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keyword"])(anchor, "anchor", anchors);
}
function anchorY(options) {
    return maybeAnchor(options, [
        "left",
        "right"
    ]);
}
function anchorFy(options) {
    return maybeAnchor(options, [
        "right",
        "left"
    ]);
}
function anchorX(options) {
    return maybeAnchor(options, [
        "bottom",
        "top"
    ]);
}
function anchorFx(options) {
    return maybeAnchor(options, [
        "top",
        "bottom"
    ]);
}
function axisY() {
    const [data, options] = maybeData(...arguments);
    return axisKy("y", anchorY(options), data, options);
}
function axisFy() {
    const [data, options] = maybeData(...arguments);
    return axisKy("fy", anchorFy(options), data, options);
}
function axisX() {
    const [data, options] = maybeData(...arguments);
    return axisKx("x", anchorX(options), data, options);
}
function axisFx() {
    const [data, options] = maybeData(...arguments);
    return axisKx("fx", anchorFx(options), data, options);
}
function axisKy(k, anchor, data, param) {
    let { color = "currentColor", opacity = 1, stroke = color, strokeOpacity = opacity, strokeWidth = 1, fill = color, fillOpacity = opacity, textAnchor, textStroke, textStrokeOpacity, textStrokeWidth, tickSize = k === "y" ? 6 : 0, tickPadding, tickRotate, x, margin, marginTop = margin === undefined ? 20 : margin, marginRight = margin === undefined ? anchor === "right" ? 40 : 0 : margin, marginBottom = margin === undefined ? 20 : margin, marginLeft = margin === undefined ? anchor === "left" ? 40 : 0 : margin, label, labelAnchor, labelArrow, labelOffset, ariaLabel = "".concat(k, "-axis"), ...options } = param;
    tickSize = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(tickSize);
    tickPadding = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(tickPadding);
    tickRotate = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(tickRotate);
    if (labelAnchor !== undefined) labelAnchor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keyword"])(labelAnchor, "labelAnchor", [
        "center",
        "top",
        "bottom"
    ]);
    labelArrow = maybeLabelArrow(labelArrow);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["marks"])(tickSize && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNoneish"])(stroke) ? axisTickKy(k, anchor, data, {
        stroke,
        strokeOpacity,
        strokeWidth,
        tickSize,
        tickPadding,
        tickRotate,
        x,
        ariaLabel,
        ...options
    }) : null, !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNoneish"])(fill) ? axisTextKy(k, anchor, data, {
        fill,
        fillOpacity,
        stroke: textStroke,
        strokeOpacity: textStrokeOpacity,
        strokeWidth: textStrokeWidth,
        textAnchor,
        tickSize,
        tickPadding,
        tickRotate,
        x,
        marginTop,
        marginRight,
        marginBottom,
        marginLeft,
        ariaLabel,
        ...options
    }) : null, !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNoneish"])(fill) && label !== null ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["text"])([], labelOptions({
        fill,
        fillOpacity,
        ...options
    }, function(data, facets, channels, scales, dimensions) {
        const scale = scales[k];
        const { marginTop, marginRight, marginBottom, marginLeft } = k === "y" && dimensions.inset || dimensions;
        const cla = labelAnchor !== null && labelAnchor !== void 0 ? labelAnchor : scale.bandwidth ? "center" : "top";
        const clo = labelOffset !== null && labelOffset !== void 0 ? labelOffset : (anchor === "right" ? marginRight : marginLeft) - 3;
        if (cla === "center") {
            this.textAnchor = undefined; // middle
            this.lineAnchor = anchor === "right" ? "bottom" : "top";
            this.frameAnchor = anchor;
            this.rotate = -90;
        } else {
            this.textAnchor = anchor === "right" ? "end" : "start";
            this.lineAnchor = cla;
            this.frameAnchor = "".concat(cla, "-").concat(anchor);
            this.rotate = 0;
        }
        this.dy = cla === "top" ? 3 - marginTop : cla === "bottom" ? marginBottom - 3 : 0;
        this.dx = anchor === "right" ? clo : -clo;
        this.ariaLabel = "".concat(ariaLabel, " label");
        return {
            facets: [
                [
                    0
                ]
            ],
            channels: {
                text: {
                    value: [
                        formatAxisLabel(k, scale, {
                            anchor,
                            label,
                            labelAnchor: cla,
                            labelArrow
                        })
                    ]
                }
            }
        };
    })) : null);
}
function axisKx(k, anchor, data, param) {
    let { color = "currentColor", opacity = 1, stroke = color, strokeOpacity = opacity, strokeWidth = 1, fill = color, fillOpacity = opacity, textAnchor, textStroke, textStrokeOpacity, textStrokeWidth, tickSize = k === "x" ? 6 : 0, tickPadding, tickRotate, y, margin, marginTop = margin === undefined ? anchor === "top" ? 30 : 0 : margin, marginRight = margin === undefined ? 20 : margin, marginBottom = margin === undefined ? anchor === "bottom" ? 30 : 0 : margin, marginLeft = margin === undefined ? 20 : margin, label, labelAnchor, labelArrow, labelOffset, ariaLabel = "".concat(k, "-axis"), ...options } = param;
    tickSize = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(tickSize);
    tickPadding = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(tickPadding);
    tickRotate = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(tickRotate);
    if (labelAnchor !== undefined) labelAnchor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keyword"])(labelAnchor, "labelAnchor", [
        "center",
        "left",
        "right"
    ]);
    labelArrow = maybeLabelArrow(labelArrow);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["marks"])(tickSize && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNoneish"])(stroke) ? axisTickKx(k, anchor, data, {
        stroke,
        strokeOpacity,
        strokeWidth,
        tickSize,
        tickPadding,
        tickRotate,
        y,
        ariaLabel,
        ...options
    }) : null, !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNoneish"])(fill) ? axisTextKx(k, anchor, data, {
        fill,
        fillOpacity,
        stroke: textStroke,
        strokeOpacity: textStrokeOpacity,
        strokeWidth: textStrokeWidth,
        textAnchor,
        tickSize,
        tickPadding,
        tickRotate,
        y,
        marginTop,
        marginRight,
        marginBottom,
        marginLeft,
        ariaLabel,
        ...options
    }) : null, !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNoneish"])(fill) && label !== null ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["text"])([], labelOptions({
        fill,
        fillOpacity,
        ...options
    }, function(data, facets, channels, scales, dimensions) {
        const scale = scales[k];
        const { marginTop, marginRight, marginBottom, marginLeft } = k === "x" && dimensions.inset || dimensions;
        const cla = labelAnchor !== null && labelAnchor !== void 0 ? labelAnchor : scale.bandwidth ? "center" : "right";
        const clo = labelOffset !== null && labelOffset !== void 0 ? labelOffset : (anchor === "top" ? marginTop : marginBottom) - 3;
        if (cla === "center") {
            this.frameAnchor = anchor;
            this.textAnchor = undefined; // middle
        } else {
            this.frameAnchor = "".concat(anchor, "-").concat(cla);
            this.textAnchor = cla === "right" ? "end" : "start";
        }
        this.lineAnchor = anchor;
        this.dy = anchor === "top" ? -clo : clo;
        this.dx = cla === "right" ? marginRight - 3 : cla === "left" ? 3 - marginLeft : 0;
        this.ariaLabel = "".concat(ariaLabel, " label");
        return {
            facets: [
                [
                    0
                ]
            ],
            channels: {
                text: {
                    value: [
                        formatAxisLabel(k, scale, {
                            anchor,
                            label,
                            labelAnchor: cla,
                            labelArrow
                        })
                    ]
                }
            }
        };
    })) : null);
}
function axisTickKy(k, anchor, data, param) {
    let { strokeWidth = 1, strokeLinecap = null, strokeLinejoin = null, facetAnchor = anchor + (k === "y" ? "-empty" : ""), frameAnchor = anchor, tickSize, inset = 0, insetLeft = inset, insetRight = inset, dx = 0, y = k === "y" ? undefined : null, ariaLabel, ...options } = param;
    return axisMark(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["vectorY"], k, data, {
        ariaLabel: "".concat(ariaLabel, " tick"),
        ariaHidden: true
    }, {
        strokeWidth,
        strokeLinecap,
        strokeLinejoin,
        facetAnchor,
        frameAnchor,
        y,
        ...options,
        dx: anchor === "left" ? +dx - __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["offset"] + +insetLeft : +dx + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["offset"] - insetRight,
        anchor: "start",
        length: tickSize,
        shape: anchor === "left" ? shapeTickLeft : shapeTickRight
    });
}
function axisTickKx(k, anchor, data, param) {
    let { strokeWidth = 1, strokeLinecap = null, strokeLinejoin = null, facetAnchor = anchor + (k === "x" ? "-empty" : ""), frameAnchor = anchor, tickSize, inset = 0, insetTop = inset, insetBottom = inset, dy = 0, x = k === "x" ? undefined : null, ariaLabel, ...options } = param;
    return axisMark(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["vectorX"], k, data, {
        ariaLabel: "".concat(ariaLabel, " tick"),
        ariaHidden: true
    }, {
        strokeWidth,
        strokeLinejoin,
        strokeLinecap,
        facetAnchor,
        frameAnchor,
        x,
        ...options,
        dy: anchor === "bottom" ? +dy - __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["offset"] - insetBottom : +dy + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["offset"] + +insetTop,
        anchor: "start",
        length: tickSize,
        shape: anchor === "bottom" ? shapeTickBottom : shapeTickTop
    });
}
function axisTextKy(k, anchor, data, param) {
    let { facetAnchor = anchor + (k === "y" ? "-empty" : ""), frameAnchor = anchor, tickSize, tickRotate = 0, tickPadding = Math.max(3, 9 - tickSize) + (Math.abs(tickRotate) > 60 ? 4 * Math.cos(tickRotate * __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$math$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["radians"]) : 0), text, textAnchor = Math.abs(tickRotate) > 60 ? "middle" : anchor === "left" ? "end" : "start", lineAnchor = tickRotate > 60 ? "top" : tickRotate < -60 ? "bottom" : "middle", fontVariant, inset = 0, insetLeft = inset, insetRight = inset, dx = 0, ariaLabel, y = k === "y" ? undefined : null, ...options } = param;
    return axisMark(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["textY"], k, data, {
        ariaLabel: "".concat(ariaLabel, " tick label")
    }, {
        facetAnchor,
        frameAnchor,
        text,
        textAnchor,
        lineAnchor,
        fontVariant,
        rotate: tickRotate,
        y,
        ...options,
        dx: anchor === "left" ? +dx - tickSize - tickPadding + +insetLeft : +dx + +tickSize + +tickPadding - insetRight
    }, function(scale, data, ticks, tickFormat, channels) {
        if (fontVariant === undefined) this.fontVariant = inferFontVariant(scale);
        if (text === undefined) channels.text = inferTextChannel(scale, data, ticks, tickFormat, anchor);
    });
}
function axisTextKx(k, anchor, data, param) {
    let { facetAnchor = anchor + (k === "x" ? "-empty" : ""), frameAnchor = anchor, tickSize, tickRotate = 0, tickPadding = Math.max(3, 9 - tickSize) + (Math.abs(tickRotate) >= 10 ? 4 * Math.cos(tickRotate * __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$math$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["radians"]) : 0), text, textAnchor = Math.abs(tickRotate) >= 10 ? tickRotate < 0 ^ anchor === "bottom" ? "start" : "end" : "middle", lineAnchor = Math.abs(tickRotate) >= 10 ? "middle" : anchor === "bottom" ? "top" : "bottom", fontVariant, inset = 0, insetTop = inset, insetBottom = inset, dy = 0, x = k === "x" ? undefined : null, ariaLabel, ...options } = param;
    return axisMark(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["textX"], k, data, {
        ariaLabel: "".concat(ariaLabel, " tick label")
    }, {
        facetAnchor,
        frameAnchor,
        text: text === undefined ? null : text,
        textAnchor,
        lineAnchor,
        fontVariant,
        rotate: tickRotate,
        x,
        ...options,
        dy: anchor === "bottom" ? +dy + +tickSize + +tickPadding - insetBottom : +dy - tickSize - tickPadding + +insetTop
    }, function(scale, data, ticks, tickFormat, channels) {
        if (fontVariant === undefined) this.fontVariant = inferFontVariant(scale);
        if (text === undefined) channels.text = inferTextChannel(scale, data, ticks, tickFormat, anchor);
    });
}
function gridY() {
    const [data, options] = maybeData(...arguments);
    return gridKy("y", anchorY(options), data, options);
}
function gridFy() {
    const [data, options] = maybeData(...arguments);
    return gridKy("fy", anchorFy(options), data, options);
}
function gridX() {
    const [data, options] = maybeData(...arguments);
    return gridKx("x", anchorX(options), data, options);
}
function gridFx() {
    const [data, options] = maybeData(...arguments);
    return gridKx("fx", anchorFx(options), data, options);
}
function gridKy(k, anchor, data, param) {
    let { y = k === "y" ? undefined : null, x = null, x1 = anchor === "left" ? x : null, x2 = anchor === "right" ? x : null, ariaLabel = "".concat(k, "-grid"), ariaHidden = true, ...options } = param;
    return axisMark(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$rule$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ruleY"], k, data, {
        ariaLabel,
        ariaHidden
    }, {
        y,
        x1,
        x2,
        ...gridDefaults(options)
    });
}
function gridKx(k, anchor, data, param) {
    let { x = k === "x" ? undefined : null, y = null, y1 = anchor === "top" ? y : null, y2 = anchor === "bottom" ? y : null, ariaLabel = "".concat(k, "-grid"), ariaHidden = true, ...options } = param;
    return axisMark(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$rule$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ruleX"], k, data, {
        ariaLabel,
        ariaHidden
    }, {
        x,
        y1,
        y2,
        ...gridDefaults(options)
    });
}
function gridDefaults(param) {
    let { color = "currentColor", opacity = 0.1, stroke = color, strokeOpacity = opacity, strokeWidth = 1, ...options } = param;
    return {
        stroke,
        strokeOpacity,
        strokeWidth,
        ...options
    };
}
function labelOptions(param, initializer) {
    let { fill, fillOpacity, fontFamily, fontSize, fontStyle, fontVariant, fontWeight, monospace, pointerEvents, shapeRendering, clip = false } = param;
    // Only propagate these options if constant.
    [, fill] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColorChannel"])(fill);
    [, fillOpacity] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeNumberChannel"])(fillOpacity);
    return {
        facet: "super",
        x: null,
        y: null,
        fill,
        fillOpacity,
        fontFamily,
        fontSize,
        fontStyle,
        fontVariant,
        fontWeight,
        monospace,
        pointerEvents,
        shapeRendering,
        clip,
        initializer
    };
}
function axisMark(mark, k, data, properties, options, initialize) {
    let channels;
    function axisInitializer(data, facets, _channels, scales, dimensions, context) {
        const initializeFacets = data == null && (k === "fx" || k === "fy");
        const { [k]: scale } = scales;
        if (!scale) throw new Error("missing scale: ".concat(k));
        const domain = scale.domain();
        let { interval, ticks, tickFormat, tickSpacing = k === "x" ? 80 : 35 } = options;
        // For a scale with a temporal domain, also allow the ticks to be specified
        // as a string which is promoted to a time interval. In the case of ordinal
        // scales, the interval is interpreted as UTC.
        if (typeof ticks === "string" && hasTemporalDomain(scale)) interval = ticks, ticks = undefined;
        var _maybeRangeInterval;
        // The interval axis option is an alternative method of specifying ticks;
        // for example, for a numeric scale, ticks = 5 means “about 5 ticks” whereas
        // interval = 5 means “ticks every 5 units”. (This is not to be confused
        // with the interval scale option, which affects the scale’s behavior!)
        // Lastly use the tickSpacing option to infer the desired tick count.
        if (ticks === undefined) ticks = (_maybeRangeInterval = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeRangeInterval"])(interval, scale.type)) !== null && _maybeRangeInterval !== void 0 ? _maybeRangeInterval : inferTickCount(scale, tickSpacing);
        if (data == null) {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isIterable"])(ticks)) {
                // Use explicit ticks, if specified.
                data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["arrayify"])(ticks);
            } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInterval"])(ticks)) {
                // Use the tick interval, if specified.
                data = inclusiveRange(ticks, ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__["extent"])(domain));
            } else if (scale.interval) {
                // If the scale interval is a standard time interval such as "day", we
                // may be able to generalize the scale interval it to a larger aligned
                // time interval to create the desired number of ticks.
                let interval = scale.interval;
                if (scale.ticks) {
                    const [min, max] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__["extent"])(domain);
                    const n = (max - min) / interval[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$time$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["intervalDuration"]]; // current tick count
                    var _generalizeTimeInterval;
                    // We don’t explicitly check that given interval is a time interval;
                    // in that case the generalized interval will be undefined, just like
                    // a nonstandard interval. TODO Generalize integer intervals, too.
                    interval = (_generalizeTimeInterval = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$time$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generalizeTimeInterval"])(interval, n / ticks)) !== null && _generalizeTimeInterval !== void 0 ? _generalizeTimeInterval : interval;
                    data = inclusiveRange(interval, min, max);
                } else {
                    data = domain;
                    const n = data.length; // current tick count
                    var _generalizeTimeInterval1;
                    interval = (_generalizeTimeInterval1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$time$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generalizeTimeInterval"])(interval, n / ticks)) !== null && _generalizeTimeInterval1 !== void 0 ? _generalizeTimeInterval1 : interval;
                    if (interval !== scale.interval) data = inclusiveRange(interval, ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__["extent"])(data));
                }
                if (interval === scale.interval) {
                    // If we weren’t able to generalize the scale’s interval, compute the
                    // positive number n such that taking every nth value from the scale’s
                    // domain produces as close as possible to the desired number of
                    // ticks. For example, if the domain has 100 values and 5 ticks are
                    // desired, n = 20.
                    const n = Math.round(data.length / ticks);
                    if (n > 1) data = data.filter((d, i)=>i % n === 0);
                }
            } else if (scale.ticks) {
                data = scale.ticks(ticks);
            } else {
                // For ordinal scales, the domain will already be generated using the
                // scale’s interval, if any.
                data = domain;
            }
            if (!scale.ticks && data.length && data !== domain) {
                // For ordinal scales, intersect the ticks with the scale domain since
                // the scale is only defined on its domain. If all of the ticks are
                // removed, then warn that the ticks and scale domain may be misaligned
                // (e.g., "year" ticks and "4 weeks" interval).
                const domainSet = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$internmap$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InternSet"](domain);
                data = data.filter((d)=>domainSet.has(d));
                if (!data.length) (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$warnings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["warn"])("Warning: the ".concat(k, "-axis ticks appear to not align with the scale domain, resulting in no ticks. Try different ticks?")); // prettier-ignore
            }
            if (k === "y" || k === "x") {
                facets = [
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["range"])(data)
                ];
            } else {
                channels[k] = {
                    scale: k,
                    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"]
                };
            }
        }
        initialize === null || initialize === void 0 ? void 0 : initialize.call(this, scale, data, ticks, tickFormat, channels);
        const initializedChannels = Object.fromEntries(Object.entries(channels).map((param)=>{
            let [name, channel] = param;
            return [
                name,
                {
                    ...channel,
                    value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, channel.value)
                }
            ];
        }));
        if (initializeFacets) facets = context.filterFacets(data, initializedChannels);
        return {
            data,
            facets,
            channels: initializedChannels
        };
    }
    // Apply any basic initializers after the axis initializer computes the ticks.
    const basicInitializer = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$basic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["initializer"])(options).initializer;
    const m = mark(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$basic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["initializer"])({
        ...options,
        initializer: axisInitializer
    }, basicInitializer));
    if (data == null) {
        channels = m.channels;
        m.channels = {};
    } else {
        channels = {};
    }
    if (properties !== undefined) Object.assign(m, properties);
    if (m.clip === undefined) m.clip = false; // don’t clip axes by default
    return m;
}
function inferTickCount(scale, tickSpacing) {
    const [min, max] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__["extent"])(scale.range());
    return (max - min) / tickSpacing;
}
function inferTextChannel(scale, data, ticks, tickFormat, anchor) {
    return {
        value: inferTickFormat(scale, data, ticks, tickFormat, anchor)
    };
}
function inferTickFormat(scale, data, ticks, tickFormat, anchor) {
    var _inferTimeFormat;
    return typeof tickFormat === "function" && !(scale.type === "log" && scale.tickFormat) ? tickFormat : tickFormat === undefined && data && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isTemporal"])(data) ? (_inferTimeFormat = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$time$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["inferTimeFormat"])(scale.type, data, anchor)) !== null && _inferTimeFormat !== void 0 ? _inferTimeFormat : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$format$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatDefault"] : scale.tickFormat ? scale.tickFormat(typeof ticks === "number" ? ticks : null, tickFormat) : typeof tickFormat === "string" && scale.domain().length > 0 ? ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isTemporal"])(scale.domain()) ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2d$format$2f$src$2f$defaultLocale$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcFormat"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$format$2f$src$2f$defaultLocale$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["format"])(tickFormat) : tickFormat === undefined ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$format$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatDefault"] : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["constant"])(tickFormat);
}
function inclusiveRange(interval, min, max) {
    return interval.range(min, interval.offset(interval.floor(max)));
}
const shapeTickBottom = {
    draw (context, l) {
        context.moveTo(0, 0);
        context.lineTo(0, l);
    }
};
const shapeTickTop = {
    draw (context, l) {
        context.moveTo(0, 0);
        context.lineTo(0, -l);
    }
};
const shapeTickLeft = {
    draw (context, l) {
        context.moveTo(0, 0);
        context.lineTo(-l, 0);
    }
};
const shapeTickRight = {
    draw (context, l) {
        context.moveTo(0, 0);
        context.lineTo(l, 0);
    }
};
// TODO Unify this with the other inferFontVariant; here we only have a scale
// function rather than a scale descriptor.
function inferFontVariant(scale) {
    return scale.bandwidth && !scale.interval ? undefined : "tabular-nums";
}
// Takes the scale label, and if this is not an ordinal scale and the label was
// inferred from an associated channel, adds an orientation-appropriate arrow.
function formatAxisLabel(k, scale) {
    let { anchor, label = scale.label, labelAnchor, labelArrow } = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    if (label == null || label.inferred && hasTemporalDomain(scale) && /^(date|time|year)$/i.test(label)) return;
    label = String(label); // coerce to a string after checking if inferred
    if (labelArrow === "auto") labelArrow = (!scale.bandwidth || scale.interval) && !/[↑↓→←]/.test(label);
    if (!labelArrow) return label;
    if (labelArrow === true) {
        const order = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["inferScaleOrder"])(scale);
        if (order) labelArrow = /x$/.test(k) || labelAnchor === "center" ? /x$/.test(k) === order < 0 ? "left" : "right" : order < 0 ? "up" : "down";
    }
    switch(labelArrow){
        case "left":
            return "← ".concat(label);
        case "right":
            return "".concat(label, " →");
        case "up":
            return anchor === "right" ? "".concat(label, " ↑") : "↑ ".concat(label);
        case "down":
            return anchor === "right" ? "".concat(label, " ↓") : "↓ ".concat(label);
    }
    return label;
}
function maybeLabelArrow() {
    let labelArrow = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "auto";
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNoneish"])(labelArrow) ? false : typeof labelArrow === "boolean" ? labelArrow : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keyword"])(labelArrow, "labelArrow", [
        "auto",
        "up",
        "right",
        "down",
        "left"
    ]);
}
function hasTemporalDomain(scale) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isTemporal"])(scale.domain());
}
}),
"[project]/node_modules/@observablehq/plot/src/legends/swatches.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "legendSwatches",
    ()=>legendSwatches,
    "legendSymbols",
    ()=>legendSymbols
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$path$2f$src$2f$path$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-path/src/path.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$axes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/axes.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/context.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/style.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$axis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/marks/axis.js [app-client] (ecmascript)");
var _symbol_hint, _symbol_hint1;
;
;
;
;
;
;
;
function maybeScale(scale, key) {
    if (key == null) return key;
    const s = scale(key);
    if (!s) throw new Error("scale not found: ".concat(key));
    return s;
}
function legendSwatches(color) {
    let { opacity, ...options } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isOrdinalScale"])(color) && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isThresholdScale"])(color)) throw new Error("swatches legend requires ordinal or threshold color scale (not ".concat(color.type, ")"));
    return legendItems(color, options, (selection, scale, width, height)=>selection.append("svg").attr("width", width).attr("height", height).attr("fill", scale.scale).attr("fill-opacity", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeNumberChannel"])(opacity)[1]).append("rect").attr("width", "100%").attr("height", "100%"));
}
function legendSymbols(symbol) {
    let { fill = ((_symbol_hint = symbol.hint) === null || _symbol_hint === void 0 ? void 0 : _symbol_hint.fill) !== undefined ? symbol.hint.fill : "none", fillOpacity = 1, stroke = ((_symbol_hint1 = symbol.hint) === null || _symbol_hint1 === void 0 ? void 0 : _symbol_hint1.stroke) !== undefined ? symbol.hint.stroke : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNoneish"])(fill) ? "currentColor" : "none", strokeOpacity = 1, strokeWidth = 1.5, r = 4.5, ...options } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, scale = arguments.length > 2 ? arguments[2] : void 0;
    const [vf, cf] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColorChannel"])(fill);
    const [vs, cs] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColorChannel"])(stroke);
    const sf = maybeScale(scale, vf);
    const ss = maybeScale(scale, vs);
    const size = r * r * Math.PI;
    fillOpacity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeNumberChannel"])(fillOpacity)[1];
    strokeOpacity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeNumberChannel"])(strokeOpacity)[1];
    strokeWidth = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeNumberChannel"])(strokeWidth)[1];
    return legendItems(symbol, options, (selection, scale, width, height)=>selection.append("svg").attr("viewBox", "-8 -8 16 16").attr("width", width).attr("height", height).attr("fill", vf === "color" ? (d)=>sf.scale(d) : cf).attr("fill-opacity", fillOpacity).attr("stroke", vs === "color" ? (d)=>ss.scale(d) : cs).attr("stroke-opacity", strokeOpacity).attr("stroke-width", strokeWidth).append("path").attr("d", (d)=>{
            const p = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$path$2f$src$2f$path$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pathRound"])();
            symbol.scale(d).draw(p, size);
            return p;
        }));
}
function legendItems(scale) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, swatch = arguments.length > 2 ? arguments[2] : void 0;
    let { columns, tickFormat, fontVariant = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$axes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["inferFontVariant"])(scale), // TODO label,
    swatchSize = 15, swatchWidth = swatchSize, swatchHeight = swatchSize, marginLeft = 0, className, style, width } = options;
    const context = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createContext"])(options);
    className = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeClassName"])(className);
    tickFormat = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$axis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["inferTickFormat"])(scale.scale, scale.domain, undefined, tickFormat);
    const swatches = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["create"])("div", context).attr("class", "".concat(className, "-swatches ").concat(className, "-swatches-").concat(columns != null ? "columns" : "wrap"));
    let extraStyle;
    if (columns != null) {
        extraStyle = ":where(.".concat(className, "-swatches-columns .").concat(className, "-swatch) {\n  display: flex;\n  align-items: center;\n  break-inside: avoid;\n  padding-bottom: 1px;\n}\n:where(.").concat(className, "-swatches-columns .").concat(className, "-swatch::before) {\n  flex-shrink: 0;\n}\n:where(.").concat(className, "-swatches-columns .").concat(className, "-swatch-label) {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}");
        swatches.style("columns", columns).selectAll().data(scale.domain).enter().append("div").attr("class", "".concat(className, "-swatch")).call(swatch, scale, swatchWidth, swatchHeight).call((item)=>item.append("div").attr("class", "".concat(className, "-swatch-label")).attr("title", tickFormat).text(tickFormat));
    } else {
        extraStyle = ":where(.".concat(className, "-swatches-wrap) {\n  display: flex;\n  align-items: center;\n  min-height: 33px;\n  flex-wrap: wrap;\n}\n:where(.").concat(className, "-swatches-wrap .").concat(className, "-swatch) {\n  display: inline-flex;\n  align-items: center;\n  margin-right: 1em;\n}");
        swatches.selectAll().data(scale.domain).enter().append("span").attr("class", "".concat(className, "-swatch")).call(swatch, scale, swatchWidth, swatchHeight).append(function() {
            return this.ownerDocument.createTextNode(tickFormat.apply(this, arguments));
        });
    }
    return swatches.call((div)=>div.insert("style", "*").text(":where(.".concat(className, "-swatches) {\n  font-family: system-ui, sans-serif;\n  font-size: 10px;\n  margin-bottom: 0.5em;\n}\n:where(.").concat(className, "-swatch > svg) {\n  margin-right: 0.5em;\n  overflow: visible;\n}\n").concat(extraStyle))).style("margin-left", marginLeft ? "".concat(+marginLeft, "px") : null).style("width", width === undefined ? null : "".concat(+width, "px")).style("font-variant", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["impliedString"])(fontVariant, "normal")).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyInlineStyles"], style).node();
}
}),
"[project]/node_modules/@observablehq/plot/src/legends.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "createLegends",
    ()=>createLegends,
    "exposeLegends",
    ()=>exposeLegends,
    "legend",
    ()=>legend
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$color$2f$src$2f$color$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-color/src/color.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/context.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$legends$2f$ramp$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/legends/ramp.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$legends$2f$swatches$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/legends/swatches.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales.js [app-client] (ecmascript)");
;
;
;
;
;
;
const legendRegistry = new Map([
    [
        "symbol",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$legends$2f$swatches$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["legendSymbols"]
    ],
    [
        "color",
        legendColor
    ],
    [
        "opacity",
        legendOpacity
    ]
]);
function legend() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    for (const [key, value] of legendRegistry){
        const scale = options[key];
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isScaleOptions"])(scale)) {
            // e.g., ignore {color: "red"}
            const context = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createContext"])(options);
            let hint;
            // For symbol legends, pass a hint to the symbol scale.
            if (key === "symbol") {
                const { fill, stroke = fill === undefined && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isScaleOptions"])(options.color) ? "color" : undefined } = options;
                hint = {
                    fill,
                    stroke
                };
            }
            return value((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeScale"])(key, scale, hint), legendOptions(context, scale, options), (key)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isScaleOptions"])(options[key]) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeScale"])(key, options[key]) : null);
        }
    }
    throw new Error("unknown legend type; no scale found");
}
function exposeLegends(scales, context) {
    let defaults = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    return (key, options)=>{
        if (!legendRegistry.has(key)) throw new Error("unknown legend type: ".concat(key));
        if (!(key in scales)) return;
        return legendRegistry.get(key)(scales[key], legendOptions(context, defaults[key], options), (key)=>scales[key]);
    };
}
function legendOptions(param) {
    let { className, ...context } = param, { label, ticks, tickFormat } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, options = arguments.length > 2 ? arguments[2] : void 0;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["inherit"])(options, {
        className,
        ...context
    }, {
        label,
        ticks,
        tickFormat
    });
}
function legendColor(color, param) {
    let { legend = true, ...options } = param;
    if (legend === true) legend = color.type === "ordinal" ? "swatches" : "ramp";
    if (color.domain === undefined) return; // no identity legend
    switch("".concat(legend).toLowerCase()){
        case "swatches":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$legends$2f$swatches$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["legendSwatches"])(color, options);
        case "ramp":
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$legends$2f$ramp$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["legendRamp"])(color, options);
        default:
            throw new Error("unknown legend type: ".concat(legend));
    }
}
function legendOpacity(param, param1) {
    let { type, interpolate, ...scale } = param, { legend = true, color = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$color$2f$src$2f$color$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rgb"])(0, 0, 0), ...options } = param1;
    if (!interpolate) throw new Error("".concat(type, " opacity scales are not supported"));
    if (legend === true) legend = "ramp";
    if ("".concat(legend).toLowerCase() !== "ramp") throw new Error("".concat(legend, " opacity legends are not supported"));
    return legendColor({
        type,
        ...scale,
        interpolate: interpolateOpacity(color)
    }, {
        legend,
        ...options
    });
}
function interpolateOpacity(color) {
    const { r, g, b } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$color$2f$src$2f$color$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rgb"])(color) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$color$2f$src$2f$color$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rgb"])(0, 0, 0); // treat invalid color as black
    return (t)=>"rgba(".concat(r, ",").concat(g, ",").concat(b, ",").concat(t, ")");
}
function createLegends(scales, context, options) {
    const legends = [];
    for (const [key, value] of legendRegistry){
        const o = options[key];
        if ((o === null || o === void 0 ? void 0 : o.legend) && key in scales) {
            const legend = value(scales[key], legendOptions(context, scales[key], o), (key)=>scales[key]);
            if (legend != null) legends.push(legend);
        }
    }
    return legends;
}
}),
"[project]/node_modules/@observablehq/plot/src/transforms/identity.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "maybeIdentityX",
    ()=>maybeIdentityX,
    "maybeIdentityY",
    ()=>maybeIdentityY
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
;
function maybeIdentityX() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, k = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "x";
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasX"])(options) ? options : {
        ...options,
        [k]: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"]
    };
}
function maybeIdentityY() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, k = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "y";
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasY"])(options) ? options : {
        ...options,
        [k]: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"]
    };
}
}),
"[project]/node_modules/@observablehq/plot/src/transforms/exclusiveFacets.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "exclusiveFacets",
    ()=>exclusiveFacets
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
;
function exclusiveFacets(data, facets) {
    if (facets.length === 1) return {
        data,
        facets
    }; // only one facet; trivially exclusive
    const n = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["lengthof"])(data);
    const O = new Uint8Array(n);
    let overlaps = 0;
    // Count the number of overlapping indexes across facets.
    for (const facet of facets){
        for (const i of facet){
            if (O[i]) ++overlaps;
            O[i] = 1;
        }
    }
    // Do nothing if the facets are already exclusive.
    if (overlaps === 0) return {
        data,
        facets
    }; // facets are exclusive
    // For each overlapping index (duplicate), assign a new unique index at the
    // end of the existing array, duplicating the datum. For example, [[0, 1, 2],
    // [2, 1, 3]] would become [[0, 1, 2], [4, 5, 3]]. Also attach a reindex to
    // the data to preserve the association of channel values specified as arrays.
    data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["slice"])(data);
    const R = data[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["reindex"]] = new Uint32Array(n + overlaps);
    facets = facets.map((facet)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["slice"])(facet, Uint32Array));
    let j = n;
    O.fill(0);
    for (const facet of facets){
        for(let k = 0, m = facet.length; k < m; ++k){
            const i = facet[k];
            if (O[i]) facet[k] = j, data[j] = data[i], R[j] = i, ++j;
            else R[i] = i;
            O[i] = 1;
        }
    }
    return {
        data,
        facets
    };
}
}),
"[project]/node_modules/@observablehq/plot/src/transforms/stack.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "maybeStackX",
    ()=>maybeStackX,
    "maybeStackY",
    ()=>maybeStackY,
    "stackX",
    ()=>stackX,
    "stackX1",
    ()=>stackX1,
    "stackX2",
    ()=>stackX2,
    "stackY",
    ()=>stackY,
    "stackY1",
    ()=>stackY1,
    "stackY2",
    ()=>stackY2
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$internmap$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/internmap/src/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$cumsum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__cumsum$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/cumsum.js [app-client] (ecmascript) <export default as cumsum>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$greatest$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__greatest$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/greatest.js [app-client] (ecmascript) <export default as greatest>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/group.js [app-client] (ecmascript) <export default as group>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$groupSort$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__groupSort$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/groupSort.js [app-client] (ecmascript) <export default as groupSort>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/max.js [app-client] (ecmascript) <export default as max>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$min$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__min$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/min.js [app-client] (ecmascript) <export default as min>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/group.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sum$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/sum.js [app-client] (ecmascript) <export default as sum>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/defined.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/mark.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$basic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/basic.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$exclusiveFacets$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/exclusiveFacets.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
function stackX() {
    let stackOptions = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (arguments.length === 1) [stackOptions, options] = mergeOptions(stackOptions);
    const { y1, y = y1, x, ...rest } = options; // note: consumes x!
    const [transform, Y, x1, x2] = stack(y, x, "y", "x", stackOptions, rest);
    return {
        ...transform,
        y1,
        y: Y,
        x1,
        x2,
        x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mid"])(x1, x2)
    };
}
function stackX1() {
    let stackOptions = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (arguments.length === 1) [stackOptions, options] = mergeOptions(stackOptions);
    const { y1, y = y1, x } = options;
    const [transform, Y, X] = stack(y, x, "y", "x", stackOptions, options);
    return {
        ...transform,
        y1,
        y: Y,
        x: X
    };
}
function stackX2() {
    let stackOptions = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (arguments.length === 1) [stackOptions, options] = mergeOptions(stackOptions);
    const { y1, y = y1, x } = options;
    const [transform, Y, , X] = stack(y, x, "y", "x", stackOptions, options);
    return {
        ...transform,
        y1,
        y: Y,
        x: X
    };
}
function stackY() {
    let stackOptions = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (arguments.length === 1) [stackOptions, options] = mergeOptions(stackOptions);
    const { x1, x = x1, y, ...rest } = options; // note: consumes y!
    const [transform, X, y1, y2] = stack(x, y, "x", "y", stackOptions, rest);
    return {
        ...transform,
        x1,
        x: X,
        y1,
        y2,
        y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mid"])(y1, y2)
    };
}
function stackY1() {
    let stackOptions = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (arguments.length === 1) [stackOptions, options] = mergeOptions(stackOptions);
    const { x1, x = x1, y } = options;
    const [transform, X, Y] = stack(x, y, "x", "y", stackOptions, options);
    return {
        ...transform,
        x1,
        x: X,
        y: Y
    };
}
function stackY2() {
    let stackOptions = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (arguments.length === 1) [stackOptions, options] = mergeOptions(stackOptions);
    const { x1, x = x1, y } = options;
    const [transform, X, , Y] = stack(x, y, "x", "y", stackOptions, options);
    return {
        ...transform,
        x1,
        x: X,
        y: Y
    };
}
function maybeStackX() {
    let { x, x1, x2, ...options } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    options = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["withTip"])(options, "y");
    if (x1 === undefined && x2 === undefined) return stackX({
        x,
        ...options
    });
    [x1, x2] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeZero"])(x, x1, x2);
    return {
        ...options,
        x1,
        x2
    };
}
function maybeStackY() {
    let { y, y1, y2, ...options } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    options = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["withTip"])(options, "x");
    if (y1 === undefined && y2 === undefined) return stackY({
        y,
        ...options
    });
    [y1, y2] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeZero"])(y, y1, y2);
    return {
        ...options,
        y1,
        y2
    };
}
// The reverse option is ambiguous: it is both a stack option and a basic
// transform. If only one options object is specified, we interpret it as a
// stack option, and therefore must remove it from the propagated options.
function mergeOptions(options) {
    const { offset, order, reverse, ...rest } = options;
    return [
        {
            offset,
            order,
            reverse
        },
        rest
    ];
}
// This is a hint to the tooltip mark that the y1 and y2 channels (for stackY,
// or conversely x1 and x2 for stackX) represent a stacked length, and that the
// tooltip should therefore show y2-y1 instead of an extent.
const lengthy = {
    length: true
};
function stack(x) {
    let y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["one"], kx = arguments.length > 2 ? arguments[2] : void 0, ky = arguments.length > 3 ? arguments[3] : void 0, { offset, order, reverse } = arguments.length > 4 ? arguments[4] : void 0, options = arguments.length > 5 ? arguments[5] : void 0;
    if (y === null) throw new Error("stack requires ".concat(ky));
    const z = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeZ"])(options);
    const [X, setX] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColumn"])(x);
    const [Y1, setY1] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(y);
    const [Y2, setY2] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(y);
    Y1.hint = Y2.hint = lengthy;
    offset = maybeOffset(offset);
    order = maybeOrder(order, offset, ky);
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$basic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["basic"])(options, (data, facets, plotOptions)=>{
            ({ data, facets } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$exclusiveFacets$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["exclusiveFacets"])(data, facets));
            const X = x == null ? undefined : setX((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeApplyInterval"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, x), plotOptions === null || plotOptions === void 0 ? void 0 : plotOptions[kx]));
            const Y = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, y, Float64Array);
            const Z = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, z);
            const compare = order && order(data, X, Y, Z);
            const n = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["lengthof"])(data);
            const Y1 = setY1(new Float64Array(n));
            const Y2 = setY2(new Float64Array(n));
            const facetstacks = [];
            for (const facet of facets){
                const stacks = X ? Array.from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__["group"])(facet, (i)=>X[i]).values()) : [
                    facet
                ];
                if (compare) for (const stack of stacks)stack.sort(compare);
                for (const stack of stacks){
                    let yn = 0;
                    let yp = 0;
                    if (reverse) stack.reverse();
                    for (const i of stack){
                        const y = Y[i];
                        if (y < 0) yn = Y2[i] = (Y1[i] = yn) + y;
                        else if (y > 0) yp = Y2[i] = (Y1[i] = yp) + y;
                        else Y2[i] = Y1[i] = yp; // NaN or zero
                    }
                }
                facetstacks.push(stacks);
            }
            if (offset) offset(facetstacks, Y1, Y2, Z);
            return {
                data,
                facets
            };
        }),
        X,
        Y1,
        Y2
    ];
}
function maybeOffset(offset) {
    if (offset == null) return;
    if (typeof offset === "function") return offset;
    switch("".concat(offset).toLowerCase()){
        case "expand":
        case "normalize":
            return offsetExpand;
        case "center":
        case "silhouette":
            return offsetCenter;
        case "wiggle":
            return offsetWiggle;
    }
    throw new Error("unknown offset: ".concat(offset));
}
// Given a single stack, returns the minimum and maximum values from the given
// Y2 column. Note that this relies on Y2 always being the outer column for
// diverging values.
function extent(stack, Y2) {
    let min = 0, max = 0;
    for (const i of stack){
        const y = Y2[i];
        if (y < min) min = y;
        if (y > max) max = y;
    }
    return [
        min,
        max
    ];
}
function offsetExpand(facetstacks, Y1, Y2) {
    for (const stacks of facetstacks){
        for (const stack of stacks){
            const [yn, yp] = extent(stack, Y2);
            for (const i of stack){
                const m = 1 / (yp - yn || 1);
                Y1[i] = m * (Y1[i] - yn);
                Y2[i] = m * (Y2[i] - yn);
            }
        }
    }
}
function offsetCenter(facetstacks, Y1, Y2) {
    for (const stacks of facetstacks){
        for (const stack of stacks){
            const [yn, yp] = extent(stack, Y2);
            for (const i of stack){
                const m = (yp + yn) / 2;
                Y1[i] -= m;
                Y2[i] -= m;
            }
        }
        offsetZero(stacks, Y1, Y2);
    }
    offsetCenterFacets(facetstacks, Y1, Y2);
}
function offsetWiggle(facetstacks, Y1, Y2, Z) {
    for (const stacks of facetstacks){
        const prev = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$internmap$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InternMap"]();
        let y = 0;
        for (const stack of stacks){
            let j = -1;
            const Fi = stack.map((i)=>Math.abs(Y2[i] - Y1[i]));
            const Df = stack.map((i)=>{
                j = Z ? Z[i] : ++j;
                const value = Y2[i] - Y1[i];
                const diff = prev.has(j) ? value - prev.get(j) : 0;
                prev.set(j, value);
                return diff;
            });
            const Cf1 = [
                0,
                ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$cumsum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__cumsum$3e$__["cumsum"])(Df)
            ];
            for (const i of stack){
                Y1[i] += y;
                Y2[i] += y;
            }
            const s1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sum$3e$__["sum"])(Fi);
            if (s1) y -= (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sum$3e$__["sum"])(Fi, (d, i)=>(Df[i] / 2 + Cf1[i]) * d) / s1;
        }
        offsetZero(stacks, Y1, Y2);
    }
    offsetCenterFacets(facetstacks, Y1, Y2);
}
function offsetZero(stacks, Y1, Y2) {
    const m = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$min$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__min$3e$__["min"])(stacks, (stack)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$min$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__min$3e$__["min"])(stack, (i)=>Y1[i]));
    for (const stack of stacks){
        for (const i of stack){
            Y1[i] -= m;
            Y2[i] -= m;
        }
    }
}
function offsetCenterFacets(facetstacks, Y1, Y2) {
    const n = facetstacks.length;
    if (n === 1) return;
    const facets = facetstacks.map((stacks)=>stacks.flat());
    const m = facets.map((I)=>((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$min$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__min$3e$__["min"])(I, (i)=>Y1[i]) + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__["max"])(I, (i)=>Y2[i])) / 2);
    const m0 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$min$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__min$3e$__["min"])(m);
    for(let j = 0; j < n; j++){
        const p = m0 - m[j];
        for (const i of facets[j]){
            Y1[i] += p;
            Y2[i] += p;
        }
    }
}
function maybeOrder(order, offset, ky) {
    if (order === undefined && offset === offsetWiggle) return orderInsideOut(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ascendingDefined"]);
    if (order == null) return;
    if (typeof order === "string") {
        const negate = order.startsWith("-");
        const compare = negate ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["descendingDefined"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ascendingDefined"];
        switch((negate ? order.slice(1) : order).toLowerCase()){
            case "value":
            case ky:
                return orderY(compare);
            case "z":
                return orderZ(compare);
            case "sum":
                return orderSum(compare);
            case "appearance":
                return orderAppearance(compare);
            case "inside-out":
                return orderInsideOut(compare);
        }
        return orderAccessor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["field"])(order));
    }
    if (typeof order === "function") return (order.length === 1 ? orderAccessor : orderComparator)(order);
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(order)) return orderGiven(order);
    throw new Error("invalid order: ".concat(order));
}
// by value
function orderY(compare) {
    return (data, X, Y)=>(i, j)=>compare(Y[i], Y[j]);
}
// by location
function orderZ(compare) {
    return (data, X, Y, Z)=>(i, j)=>compare(Z[i], Z[j]);
}
// by sum of value (a.k.a. “ascending”)
function orderSum(compare) {
    return orderZDomain(compare, (data, X, Y, Z)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$groupSort$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__groupSort$3e$__["groupSort"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["range"])(data), (I)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sum$3e$__["sum"])(I, (i)=>Y[i]), (i)=>Z[i]));
}
// by x = argmax of value
function orderAppearance(compare) {
    return orderZDomain(compare, (data, X, Y, Z)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$groupSort$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__groupSort$3e$__["groupSort"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["range"])(data), (I)=>X[(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$greatest$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__greatest$3e$__["greatest"])(I, (i)=>Y[i])], (i)=>Z[i]));
}
// by x = argmax of value, but rearranged inside-out by alternating series
// according to the sign of a running divergence of sums
function orderInsideOut(compare) {
    return orderZDomain(compare, (data, X, Y, Z)=>{
        const I = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["range"])(data);
        const K = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$groupSort$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__groupSort$3e$__["groupSort"])(I, (I)=>X[(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$greatest$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__greatest$3e$__["greatest"])(I, (i)=>Y[i])], (i)=>Z[i]);
        const sums = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rollup"])(I, (I)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sum$3e$__["sum"])(I, (i)=>Y[i]), (i)=>Z[i]);
        const Kp = [], Kn = [];
        let s = 0;
        for (const k of K){
            if (s < 0) {
                s += sums.get(k);
                Kp.push(k);
            } else {
                s -= sums.get(k);
                Kn.push(k);
            }
        }
        return Kn.reverse().concat(Kp);
    });
}
function orderAccessor(f) {
    return (data)=>{
        const O = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, f);
        return (i, j)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ascendingDefined"])(O[i], O[j]);
    };
}
function orderComparator(f) {
    return (data)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(data) ? (i, j)=>f(data[i], data[j]) : (i, j)=>f(data.get(i), data.get(j));
    };
}
function orderGiven(domain) {
    return orderZDomain(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ascendingDefined"], ()=>domain);
}
// Given an ordering (domain) of distinct values in z that can be derived from
// the data, returns a comparator that can be used to sort stacks. Note that
// this is a series order: it will be consistent across stacks.
function orderZDomain(compare, domain) {
    return (data, X, Y, Z)=>{
        if (!Z) throw new Error("missing channel: z");
        const map = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$internmap$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InternMap"](domain(data, X, Y, Z).map((d, i)=>[
                d,
                i
            ]));
        return (i, j)=>compare(map.get(Z[i]), map.get(Z[j]));
    };
}
}),
"[project]/node_modules/@observablehq/plot/src/marks/rect.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Rect",
    ()=>Rect,
    "applyRoundedRect",
    ()=>applyRoundedRect,
    "rect",
    ()=>rect,
    "rectInsets",
    ()=>rectInsets,
    "rectRadii",
    ()=>rectRadii,
    "rectX",
    ()=>rectX,
    "rectY",
    ()=>rectY
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/context.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/mark.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/style.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$identity$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/identity.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$interval$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/interval.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$stack$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/stack.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
const defaults = {
    ariaLabel: "rect"
};
class Rect extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Mark"] {
    render(index, scales, channels, dimensions, context) {
        const { x, y } = scales;
        let { x1: X1, y1: Y1, x2: X2, y2: Y2 } = channels;
        const { marginTop, marginRight, marginBottom, marginLeft, width, height } = dimensions;
        const { projection } = context;
        const { insetTop, insetRight, insetBottom, insetLeft } = this;
        const { rx, ry, rx1y1, rx1y2, rx2y1, rx2y2 } = this;
        if ((X1 || X2) && !projection && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isCollapsed"])(x)) X1 = X2 = null; // ignore if collapsed
        if ((Y1 || Y2) && !projection && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isCollapsed"])(y)) Y1 = Y2 = null; // ignore if collapsed
        const bx = (x === null || x === void 0 ? void 0 : x.bandwidth) ? x.bandwidth() : 0;
        const by = (y === null || y === void 0 ? void 0 : y.bandwidth) ? y.bandwidth() : 0;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["create"])("svg:g", context).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyIndirectStyles"], this, dimensions, context).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyTransform"], this, {}, 0, 0).call((g)=>g.selectAll().data(index).enter().call(rx1y1 || rx1y2 || rx2y1 || rx2y2 ? (g)=>g.append("path").call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyDirectStyles"], this).call(applyRoundedRect, X1 && X2 ? (i)=>X1[i] + (X2[i] < X1[i] ? -insetRight : insetLeft) : X1 ? (i)=>X1[i] + insetLeft : marginLeft + insetLeft, Y1 && Y2 ? (i)=>Y1[i] + (Y2[i] < Y1[i] ? -insetBottom : insetTop) : Y1 ? (i)=>Y1[i] + insetTop : marginTop + insetTop, X1 && X2 ? (i)=>X2[i] - (X2[i] < X1[i] ? -insetLeft : insetRight) : X1 ? (i)=>X1[i] + bx - insetRight : width - marginRight - insetRight, Y1 && Y2 ? (i)=>Y2[i] - (Y2[i] < Y1[i] ? -insetTop : insetBottom) : Y1 ? (i)=>Y1[i] + by - insetBottom : height - marginBottom - insetBottom, this).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyChannelStyles"], this, channels) : (g)=>g.append("rect").call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyDirectStyles"], this).attr("x", X1 ? X2 ? (i)=>Math.min(X1[i], X2[i]) + insetLeft : (i)=>X1[i] + insetLeft : marginLeft + insetLeft).attr("y", Y1 ? Y2 ? (i)=>Math.min(Y1[i], Y2[i]) + insetTop : (i)=>Y1[i] + insetTop : marginTop + insetTop).attr("width", X1 ? X2 ? (i)=>Math.max(0, Math.abs(X2[i] - X1[i]) + bx - insetLeft - insetRight) : bx - insetLeft - insetRight : width - marginRight - marginLeft - insetRight - insetLeft).attr("height", Y1 ? Y2 ? (i)=>Math.max(0, Math.abs(Y1[i] - Y2[i]) + by - insetTop - insetBottom) : by - insetTop - insetBottom : height - marginTop - marginBottom - insetTop - insetBottom).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyAttr"], "rx", rx).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyAttr"], "ry", ry).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyChannelStyles"], this, channels))).node();
    }
    constructor(data, options = {}){
        const { x1, y1, x2, y2 } = options;
        super(data, {
            x1: {
                value: x1,
                scale: "x",
                type: x1 != null && x2 == null ? "band" : undefined,
                optional: true
            },
            y1: {
                value: y1,
                scale: "y",
                type: y1 != null && y2 == null ? "band" : undefined,
                optional: true
            },
            x2: {
                value: x2,
                scale: "x",
                optional: true
            },
            y2: {
                value: y2,
                scale: "y",
                optional: true
            }
        }, options, defaults);
        rectInsets(this, options);
        rectRadii(this, options);
    }
}
function rectInsets(mark) {
    let { inset = 0, insetTop = inset, insetRight = inset, insetBottom = inset, insetLeft = inset } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    mark.insetTop = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(insetTop);
    mark.insetRight = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(insetRight);
    mark.insetBottom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(insetBottom);
    mark.insetLeft = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(insetLeft);
}
function rectRadii(mark) {
    let { r, rx, ry, rx1 = r, ry1 = r, rx2 = r, ry2 = r, rx1y1 = rx1 !== undefined ? +rx1 : ry1 !== undefined ? +ry1 : 0, rx1y2 = rx1 !== undefined ? +rx1 : ry2 !== undefined ? +ry2 : 0, rx2y1 = rx2 !== undefined ? +rx2 : ry1 !== undefined ? +ry1 : 0, rx2y2 = rx2 !== undefined ? +rx2 : ry2 !== undefined ? +ry2 : 0 } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (rx1y1 || rx1y2 || rx2y1 || rx2y2) {
        mark.rx1y1 = rx1y1;
        mark.rx1y2 = rx1y2;
        mark.rx2y1 = rx2y1;
        mark.rx2y2 = rx2y2;
    } else {
        mark.rx = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["impliedString"])(rx, "auto"); // number or percentage
        mark.ry = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["impliedString"])(ry, "auto");
    }
}
function applyRoundedRect(selection, X1, Y1, X2, Y2, mark) {
    const { rx1y1: r11, rx1y2: r12, rx2y1: r21, rx2y2: r22 } = mark;
    if (typeof X1 !== "function") X1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["constant"])(X1);
    if (typeof Y1 !== "function") Y1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["constant"])(Y1);
    if (typeof X2 !== "function") X2 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["constant"])(X2);
    if (typeof Y2 !== "function") Y2 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["constant"])(Y2);
    const rx = Math.max(Math.abs(r11 + r21), Math.abs(r12 + r22));
    const ry = Math.max(Math.abs(r11 + r12), Math.abs(r21 + r22));
    selection.attr("d", (i)=>{
        const x1 = X1(i);
        const y1 = Y1(i);
        const x2 = X2(i);
        const y2 = Y2(i);
        const ix = x1 > x2;
        const iy = y1 > y2;
        const l = ix ? x2 : x1;
        const r = ix ? x1 : x2;
        const t = iy ? y2 : y1;
        const b = iy ? y1 : y2;
        const k = Math.min(1, (r - l) / rx, (b - t) / ry);
        const tl = k * (ix ? iy ? r22 : r21 : iy ? r12 : r11);
        const tr = k * (ix ? iy ? r12 : r11 : iy ? r22 : r21);
        const br = k * (ix ? iy ? r11 : r12 : iy ? r21 : r22);
        const bl = k * (ix ? iy ? r21 : r22 : iy ? r11 : r12);
        return "M".concat(l, ",").concat(t + biasY(tl, bl), "A").concat(tl, ",").concat(tl, " 0 0 ").concat(tl < 0 ? 0 : 1, " ").concat(l + biasX(tl, bl), ",").concat(t) + "H".concat(r - biasX(tr, br), "A").concat(tr, ",").concat(tr, " 0 0 ").concat(tr < 0 ? 0 : 1, " ").concat(r, ",").concat(t + biasY(tr, br)) + "V".concat(b - biasY(br, tr), "A").concat(br, ",").concat(br, " 0 0 ").concat(br < 0 ? 0 : 1, " ").concat(r - biasX(br, tr), ",").concat(b) + "H".concat(l + biasX(bl, tl), "A").concat(bl, ",").concat(bl, " 0 0 ").concat(bl < 0 ? 0 : 1, " ").concat(l, ",").concat(b - biasY(bl, tl)) + "Z";
    });
}
/**
 * If the opposing corner has a negative radius r2, if this corner has a
 * negative radius r1, this corner’s “wing” will extend horizontally rather than
 * vertically.
 */ function biasX(r1, r2) {
    return r2 < 0 ? r1 : Math.abs(r1);
}
/**
 * If the opposing corner has a negative radius r2, if this corner has a
 * negative radius r1, this corner’s “wing” will extend horizontally rather than
 * vertically.
 */ function biasY(r1, r2) {
    return r2 < 0 ? Math.abs(r1) : r1;
}
function rect(data, options) {
    return new Rect(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$interval$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeTrivialIntervalX"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$interval$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeTrivialIntervalY"])(options)));
}
function rectX(data) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasXY"])(options)) options = {
        ...options,
        y: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["indexOf"],
        x2: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"],
        interval: 1
    };
    return new Rect(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$stack$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeStackX"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$interval$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeTrivialIntervalY"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$identity$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeIdentityX"])(options))));
}
function rectY(data) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasXY"])(options)) options = {
        ...options,
        x: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["indexOf"],
        y2: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"],
        interval: 1
    };
    return new Rect(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$stack$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeStackY"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$interval$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeTrivialIntervalX"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$identity$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeIdentityY"])(options))));
}
}),
"[project]/node_modules/@observablehq/plot/src/marks/frame.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Frame",
    ()=>Frame,
    "frame",
    ()=>frame
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/context.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/mark.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/style.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$rect$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/marks/rect.js [app-client] (ecmascript)");
;
;
;
;
;
const defaults = {
    ariaLabel: "frame",
    fill: "none",
    stroke: "currentColor",
    clip: false
};
const lineDefaults = {
    ariaLabel: "frame",
    fill: null,
    stroke: "currentColor",
    strokeLinecap: "square",
    clip: false
};
class Frame extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Mark"] {
    render(index, scales, channels, dimensions, context) {
        const { marginTop, marginRight, marginBottom, marginLeft, width, height } = dimensions;
        const { anchor, insetTop, insetRight, insetBottom, insetLeft } = this;
        const { rx, ry, rx1y1, rx1y2, rx2y1, rx2y2 } = this;
        const x1 = marginLeft + insetLeft;
        const x2 = width - marginRight - insetRight;
        const y1 = marginTop + insetTop;
        const y2 = height - marginBottom - insetBottom;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["create"])(anchor ? "svg:line" : rx1y1 || rx1y2 || rx2y1 || rx2y2 ? "svg:path" : "svg:rect", context).datum(0).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyIndirectStyles"], this, dimensions, context).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyDirectStyles"], this).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyChannelStyles"], this, channels).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyTransform"], this, {}).call(anchor === "left" ? (line)=>line.attr("x1", x1).attr("x2", x1).attr("y1", y1).attr("y2", y2) : anchor === "right" ? (line)=>line.attr("x1", x2).attr("x2", x2).attr("y1", y1).attr("y2", y2) : anchor === "top" ? (line)=>line.attr("x1", x1).attr("x2", x2).attr("y1", y1).attr("y2", y1) : anchor === "bottom" ? (line)=>line.attr("x1", x1).attr("x2", x2).attr("y1", y2).attr("y2", y2) : rx1y1 || rx1y2 || rx2y1 || rx2y2 ? (path)=>path.call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$rect$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyRoundedRect"], x1, y1, x2, y2, this) : (rect)=>rect.attr("x", x1).attr("y", y1).attr("width", x2 - x1).attr("height", y2 - y1).attr("rx", rx).attr("ry", ry)).node();
    }
    constructor(options = {}){
        const { anchor = null } = options;
        super(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["singleton"], undefined, options, anchor == null ? defaults : lineDefaults);
        this.anchor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeKeyword"])(anchor, "anchor", [
            "top",
            "right",
            "bottom",
            "left"
        ]);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$rect$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rectInsets"])(this, options);
        if (!anchor) (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$rect$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rectRadii"])(this, options);
    }
}
function frame(options) {
    return new Frame(options);
}
}),
"[project]/node_modules/@observablehq/plot/src/marks/tip.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Tip",
    ()=>Tip,
    "tip",
    ()=>tip
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$select$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__select$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-selection/src/select.js [app-client] (ecmascript) <export default as select>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$format$2f$src$2f$defaultLocale$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-format/src/defaultLocale.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2d$format$2f$src$2f$defaultLocale$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-time-format/src/defaultLocale.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$channel$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/channel.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/context.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/defined.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$format$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/format.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$interactions$2f$pointer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/interactions/pointer.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/mark.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/style.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$axis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/marks/axis.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/marks/text.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
const defaults = {
    ariaLabel: "tip",
    fill: "var(--plot-background)",
    stroke: "currentColor"
};
// These channels are not displayed in the default tip; see formatChannels.
const ignoreChannels = new Set([
    "geometry",
    "href",
    "src",
    "ariaLabel",
    "scales"
]);
class Tip extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Mark"] {
    render(index, scales, values, dimensions, context) {
        const mark = this;
        const { x, y, fx, fy } = scales;
        const { ownerSVGElement: svg, document } = context;
        const { anchor, monospace, lineHeight, lineWidth } = this;
        const { textPadding: r, pointerSize: m, pathFilter } = this;
        const { marginTop, marginLeft } = dimensions;
        // The anchor position is the middle of x1 & y1 and x2 & y2, if available,
        // or x & y; the former is considered more specific because it’s how we
        // disable the implicit stack and interval transforms. If any dimension is
        // unspecified, we fallback to the frame anchor. We also need to know the
        // facet offsets to detect when the tip would draw outside the plot, and
        // thus we need to change the orientation.
        const { x1: X1, y1: Y1, x2: X2, y2: Y2, x: X = X1 !== null && X1 !== void 0 ? X1 : X2, y: Y = Y1 !== null && Y1 !== void 0 ? Y1 : Y2 } = values;
        const ox = fx ? fx(index.fx) - marginLeft : 0;
        const oy = fy ? fy(index.fy) - marginTop : 0;
        // The order of precedence for the anchor position is: the middle of x1 & y1
        // and x2 & y2; or x1 & y1 (e.g., area); or lastly x & y. If a dimension is
        // unspecified, the frame anchor is used.
        const [cx, cy] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyFrameAnchor"])(this, dimensions);
        const px = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$interactions$2f$pointer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["anchorX"])(values, cx);
        const py = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$interactions$2f$pointer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["anchorY"])(values, cy);
        // Resolve the text metric implementation. We may need an ellipsis for text
        // truncation, so we optimistically compute the ellipsis width.
        const widthof = monospace ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["monospaceWidth"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultWidth"];
        const ee = widthof(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ellipsis"]);
        // If there’s a title channel, display that as-is; otherwise, show multiple
        // channels as name-value pairs.
        let sources, format;
        if ("title" in values) {
            sources = getSourceChannels.call(this, {
                title: values.channels.title
            }, scales);
            format = formatTitle;
        } else {
            sources = getSourceChannels.call(this, values.channels, scales);
            format = formatChannels;
        }
        // We don’t call applyChannelStyles because we only use the channels to
        // derive the content of the tip, not its aesthetics.
        const g = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["create"])("svg:g", context).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyIndirectStyles"], this, dimensions, context).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyIndirectTextStyles"], this).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyTransform"], this, {
            x: X && x,
            y: Y && y
        }).call((g)=>g.selectAll().data(index).enter().append("g").attr("transform", (i)=>"translate(".concat(Math.round(px(i)), ",").concat(Math.round(py(i)), ")")) // crisp edges
            .call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyDirectStyles"], this).call((g)=>g.append("path").attr("filter", pathFilter)).call((g)=>g.append("text").each(function(i) {
                    const that = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$select$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__select$3e$__["select"])(this);
                    // prevent style inheritance (from path)
                    this.setAttribute("fill", "currentColor");
                    this.setAttribute("fill-opacity", 1);
                    this.setAttribute("stroke", "none");
                    // iteratively render each channel value
                    const lines = format.call(mark, i, index, sources, scales, values);
                    if (typeof lines === "string") {
                        for (const line of mark.splitLines(lines)){
                            renderLine(that, {
                                value: mark.clipLine(line)
                            });
                        }
                    } else {
                        const labels = new Set();
                        for (const line of lines){
                            const { label = "" } = line;
                            if (label && labels.has(label)) continue;
                            else labels.add(label);
                            renderLine(that, line);
                        }
                    }
                })));
        // Renders a single line (a name-value pair) to the tip, truncating the text
        // as needed, and adding a title if the text is truncated. Note that this is
        // just the initial layout of the text; in postrender we will compute the
        // exact text metrics and translate the text as needed once we know the
        // tip’s orientation (anchor).
        function renderLine(selection, param) {
            let { label, value, color, opacity } = param;
            label !== null && label !== void 0 ? label : label = "", value !== null && value !== void 0 ? value : value = "";
            const swatch = color != null || opacity != null;
            let title;
            let w = lineWidth * 100;
            const [j] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cut"])(label, w, widthof, ee);
            if (j >= 0) {
                // label is truncated
                label = label.slice(0, j).trimEnd() + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ellipsis"];
                title = value.trim();
                value = "";
            } else {
                if (label || !value && !swatch) value = " " + value;
                const [k] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cut"])(value, w - widthof(label), widthof, ee);
                if (k >= 0) {
                    // value is truncated
                    title = value.trim();
                    value = value.slice(0, k).trimEnd() + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ellipsis"];
                }
            }
            const line = selection.append("tspan").attr("x", 0).attr("dy", "".concat(lineHeight, "em")).text("\u200b"); // zwsp for double-click
            if (label) line.append("tspan").attr("font-weight", "bold").text(label);
            if (value) line.append(()=>document.createTextNode(value));
            if (swatch) line.append("tspan").text(" ■").attr("fill", color).attr("fill-opacity", opacity).style("user-select", "none"); // prettier-ignore
            if (title) line.append("title").text(title);
        }
        // Only after the plot is attached to the page can we compute the exact text
        // metrics needed to determine the tip size and orientation (anchor).
        function postrender() {
            var _dimensions_facet;
            const { width, height } = (_dimensions_facet = dimensions.facet) !== null && _dimensions_facet !== void 0 ? _dimensions_facet : dimensions;
            g.selectChildren().each(function(i) {
                let { x: tx, width: w, height: h } = this.getBBox();
                w = Math.round(w), h = Math.round(h); // crisp edges
                let a = anchor; // use the specified anchor, if any
                if (a === undefined) {
                    const x = px(i) + ox;
                    const y = py(i) + oy;
                    const fitLeft = x + w + m + r * 2 < width;
                    const fitRight = x - w - m - r * 2 > 0;
                    const fitTop = y + h + m + r * 2 < height;
                    const fitBottom = y - h - m - r * 2 > 0;
                    a = fitLeft && fitRight ? fitTop && fitBottom ? mark.preferredAnchor : fitBottom ? "bottom" : "top" : fitTop && fitBottom ? fitLeft ? "left" : "right" : (fitLeft || fitRight) && (fitTop || fitBottom) ? "".concat(fitBottom ? "bottom" : "top", "-").concat(fitLeft ? "left" : "right") : mark.preferredAnchor;
                }
                const path = this.firstChild; // note: assumes exactly two children!
                const text = this.lastChild; // note: assumes exactly two children!
                path.setAttribute("d", getPath(a, m, r, w, h));
                if (tx) for (const t of text.childNodes)t.setAttribute("x", -tx);
                text.setAttribute("y", "".concat(+getLineOffset(a, text.childNodes.length, lineHeight).toFixed(6), "em"));
                text.setAttribute("transform", "translate(".concat(getTextTranslate(a, m, r, w, h), ")"));
            });
            g.attr("visibility", null);
        }
        // Wait until the plot is inserted into the page so that we can use getBBox
        // to compute the exact text dimensions. If the SVG is already connected, as
        // when the pointer interaction triggers the re-render, use a faster
        // microtask instead of an animation frame; if this SSR (e.g., JSDOM), skip
        // this step. Perhaps this could be done synchronously; getting the
        // dimensions of the SVG is easy, and although accurate text metrics are
        // hard, we could use approximate heuristics.
        if (index.length) {
            g.attr("visibility", "hidden"); // hide until postrender
            if (svg.isConnected) Promise.resolve().then(postrender);
            else if (typeof requestAnimationFrame !== "undefined") requestAnimationFrame(postrender);
        }
        return g.node();
    }
    constructor(data, options = {}){
        if (options.tip) options = {
            ...options,
            tip: false
        };
        if (options.title === undefined && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isIterable"])(data) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isTextual"])(data)) options = {
            ...options,
            title: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"]
        };
        const { x, y, x1, x2, y1, y2, anchor, preferredAnchor = "bottom", monospace, fontFamily = monospace ? "ui-monospace, monospace" : undefined, fontSize, fontStyle, fontVariant, fontWeight, lineHeight = 1, lineWidth = 20, frameAnchor, format, textAnchor = "start", textOverflow, textPadding = 8, title, pointerSize = 12, pathFilter = "drop-shadow(0 3px 4px rgba(0,0,0,0.2))" } = options;
        super(data, {
            x: {
                value: x1 != null && x2 != null ? null : x,
                scale: "x",
                optional: true
            },
            y: {
                value: y1 != null && y2 != null ? null : y,
                scale: "y",
                optional: true
            },
            x1: {
                value: x1,
                scale: "x",
                optional: x2 == null
            },
            y1: {
                value: y1,
                scale: "y",
                optional: y2 == null
            },
            x2: {
                value: x2,
                scale: "x",
                optional: x1 == null
            },
            y2: {
                value: y2,
                scale: "y",
                optional: y1 == null
            },
            title: {
                value: title,
                optional: true
            } // filter: defined
        }, options, defaults);
        this.anchor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeAnchor"])(anchor, "anchor");
        this.preferredAnchor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeAnchor"])(preferredAnchor, "preferredAnchor");
        this.frameAnchor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeFrameAnchor"])(frameAnchor);
        this.textAnchor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["impliedString"])(textAnchor, "middle");
        this.textPadding = +textPadding;
        this.pointerSize = +pointerSize;
        this.pathFilter = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(pathFilter);
        this.lineHeight = +lineHeight;
        this.lineWidth = +lineWidth;
        this.textOverflow = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeTextOverflow"])(textOverflow);
        this.monospace = !!monospace;
        this.fontFamily = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(fontFamily);
        this.fontSize = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(fontSize);
        this.fontStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(fontStyle);
        this.fontVariant = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(fontVariant);
        this.fontWeight = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["string"])(fontWeight);
        for(const key in defaults)if (key in this.channels) this[key] = defaults[key]; // apply default even if channel
        this.splitLines = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["splitter"])(this);
        this.clipLine = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clipper"])(this);
        this.format = typeof format === "string" || typeof format === "function" ? {
            title: format
        } : {
            ...format
        }; // defensive copy before mutate; also promote nullish to empty
    }
}
function tip(data) {
    let { x, y, ...options } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (options.frameAnchor === undefined) [x, y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeTuple"])(x, y);
    return new Tip(data, {
        ...options,
        x,
        y
    });
}
function getLineOffset(anchor, length, lineHeight) {
    return /^top(?:-|$)/.test(anchor) ? 0.94 - lineHeight : ("TURBOPACK compile-time truthy", 1) ? -0.29 - length * lineHeight : "TURBOPACK unreachable";
}
function getTextTranslate(anchor, m, r, width, height) {
    switch(anchor){
        case "middle":
            return [
                -width / 2,
                height / 2
            ];
        case "top-left":
            return [
                r,
                m + r
            ];
        case "top":
            return [
                -width / 2,
                m / 2 + r
            ];
        case "top-right":
            return [
                -width - r,
                m + r
            ];
        case "right":
            return [
                -m / 2 - width - r,
                height / 2
            ];
        case "bottom-left":
            return [
                r,
                -m - r
            ];
        case "bottom":
            return [
                -width / 2,
                -m / 2 - r
            ];
        case "bottom-right":
            return [
                -width - r,
                -m - r
            ];
        case "left":
            return [
                r + m / 2,
                height / 2
            ];
    }
}
function getPath(anchor, m, r, width, height) {
    const w = width + r * 2;
    const h = height + r * 2;
    switch(anchor){
        case "middle":
            return "M".concat(-w / 2, ",").concat(-h / 2, "h").concat(w, "v").concat(h, "h").concat(-w, "z");
        case "top-left":
            return "M0,0l".concat(m, ",").concat(m, "h").concat(w - m, "v").concat(h, "h").concat(-w, "z");
        case "top":
            return "M0,0l".concat(m / 2, ",").concat(m / 2, "h").concat((w - m) / 2, "v").concat(h, "h").concat(-w, "v").concat(-h, "h").concat((w - m) / 2, "z");
        case "top-right":
            return "M0,0l".concat(-m, ",").concat(m, "h").concat(m - w, "v").concat(h, "h").concat(w, "z");
        case "right":
            return "M0,0l".concat(-m / 2, ",").concat(-m / 2, "v").concat(m / 2 - h / 2, "h").concat(-w, "v").concat(h, "h").concat(w, "v").concat(m / 2 - h / 2, "z");
        case "bottom-left":
            return "M0,0l".concat(m, ",").concat(-m, "h").concat(w - m, "v").concat(-h, "h").concat(-w, "z");
        case "bottom":
            return "M0,0l".concat(m / 2, ",").concat(-m / 2, "h").concat((w - m) / 2, "v").concat(-h, "h").concat(-w, "v").concat(h, "h").concat((w - m) / 2, "z");
        case "bottom-right":
            return "M0,0l".concat(-m, ",").concat(-m, "h").concat(m - w, "v").concat(-h, "h").concat(w, "z");
        case "left":
            return "M0,0l".concat(m / 2, ",").concat(-m / 2, "v").concat(m / 2 - h / 2, "h").concat(w, "v").concat(h, "h").concat(-w, "v").concat(m / 2 - h / 2, "z");
    }
}
// Note: mutates this.format!
function getSourceChannels(channels, scales) {
    const sources = {};
    // Promote x and y shorthand for paired channels (in order).
    let format = this.format;
    format = maybeExpandPairedFormat(format, channels, "x");
    format = maybeExpandPairedFormat(format, channels, "y");
    this.format = format;
    // Prioritize channels with explicit formats, in the given order.
    for(const key in format){
        const value = format[key];
        if (value === null || value === false) {
            continue;
        } else if (key === "fx" || key === "fy") {
            sources[key] = true;
        } else {
            const source = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$channel$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getSource"])(channels, key);
            if (source) sources[key] = source;
        }
    }
    // Then fallback to all other (non-ignored) channels.
    for(const key in channels){
        if (key in sources || key in format || ignoreChannels.has(key)) continue;
        if ((key === "x" || key === "y") && channels.geometry) continue; // ignore x & y on geo
        const source = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$channel$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getSource"])(channels, key);
        if (source) {
            // Ignore color channels if the values are all literal colors.
            if (source.scale == null && source.defaultScale === "color") continue;
            sources[key] = source;
        }
    }
    // And lastly facet channels, but only if this mark is faceted.
    if (this.facet) {
        if (scales.fx && !("fx" in format)) sources.fx = true;
        if (scales.fy && !("fy" in format)) sources.fy = true;
    }
    // Promote shorthand string formats, and materialize default formats.
    for(const key in sources){
        const format = this.format[key];
        if (typeof format === "string") {
            var _sources_key, _scales_key;
            var _sources_key_value, _ref;
            const value = (_ref = (_sources_key_value = (_sources_key = sources[key]) === null || _sources_key === void 0 ? void 0 : _sources_key.value) !== null && _sources_key_value !== void 0 ? _sources_key_value : (_scales_key = scales[key]) === null || _scales_key === void 0 ? void 0 : _scales_key.domain()) !== null && _ref !== void 0 ? _ref : [];
            this.format[key] = ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isTemporal"])(value) ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2d$format$2f$src$2f$defaultLocale$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcFormat"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$format$2f$src$2f$defaultLocale$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["format"])(format);
        } else if (format === undefined || format === true) {
            // For ordinal scales, the inferred tick format can be more concise, such
            // as only showing the year for yearly data.
            const scale = scales[key];
            this.format[key] = (scale === null || scale === void 0 ? void 0 : scale.bandwidth) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$axis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["inferTickFormat"])(scale, scale.domain()) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$format$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatDefault"];
        }
    }
    return sources;
}
// Promote x and y shorthand for paired channels, while preserving order.
function maybeExpandPairedFormat(format, channels, key) {
    if (!(key in format)) return format;
    const key1 = "".concat(key, "1");
    const key2 = "".concat(key, "2");
    if ((key1 in format || !(key1 in channels)) && (key2 in format || !(key2 in channels))) return format;
    const entries = Object.entries(format);
    const value = format[key];
    entries.splice(entries.findIndex((param)=>{
        let [name] = param;
        return name === key;
    }) + 1, 0, [
        key1,
        value
    ], [
        key2,
        value
    ]);
    return Object.fromEntries(entries);
}
function formatTitle(i, index, param) {
    let { title } = param;
    return this.format.title(title.value[i], i);
}
function* formatChannels(i, index, channels, scales, values) {
    for(const key in channels){
        if (key === "fx" || key === "fy") {
            yield {
                label: formatLabel(scales, channels, key),
                value: this.format[key](index[key], i)
            };
            continue;
        }
        if (key === "x1" && "x2" in channels) continue;
        if (key === "y1" && "y2" in channels) continue;
        const channel = channels[key];
        if (key === "x2" && "x1" in channels) {
            yield {
                label: formatPairLabel(scales, channels, "x"),
                value: formatPair(this.format.x2, channels.x1, channel, i)
            };
        } else if (key === "y2" && "y1" in channels) {
            yield {
                label: formatPairLabel(scales, channels, "y"),
                value: formatPair(this.format.y2, channels.y1, channel, i)
            };
        } else {
            const value = channel.value[i];
            const scale = channel.scale;
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defined"])(value) && scale == null) continue;
            yield {
                label: formatLabel(scales, channels, key),
                value: this.format[key](value, i),
                color: scale === "color" ? values[key][i] : null,
                opacity: scale === "opacity" ? values[key][i] : null
            };
        }
    }
}
function formatPair(formatValue, c1, c2, i) {
    var _c2_hint;
    return ((_c2_hint = c2.hint) === null || _c2_hint === void 0 ? void 0 : _c2_hint.length // e.g., stackY’s y1 and y2
    ) ? "".concat(formatValue(c2.value[i] - c1.value[i], i)) : "".concat(formatValue(c1.value[i], i), "–").concat(formatValue(c2.value[i], i));
}
function formatPairLabel(scales, channels, key) {
    const l1 = formatLabel(scales, channels, "".concat(key, "1"), key);
    const l2 = formatLabel(scales, channels, "".concat(key, "2"), key);
    return l1 === l2 ? l1 : "".concat(l1, "–").concat(l2);
}
function formatLabel(scales, channels, key) {
    let defaultLabel = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : key;
    const channel = channels[key];
    var _channel_scale;
    const scale = scales[(_channel_scale = channel === null || channel === void 0 ? void 0 : channel.scale) !== null && _channel_scale !== void 0 ? _channel_scale : key];
    var _scale_label, _ref;
    return String((_ref = (_scale_label = scale === null || scale === void 0 ? void 0 : scale.label) !== null && _scale_label !== void 0 ? _scale_label : channel === null || channel === void 0 ? void 0 : channel.label) !== null && _ref !== void 0 ? _ref : defaultLabel);
}
}),
"[project]/node_modules/@observablehq/plot/src/plot.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "plot",
    ()=>plot
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$creator$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__creator$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-selection/src/creator.js [app-client] (ecmascript) <export default as creator>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$path$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoPath$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-geo/src/path/index.js [app-client] (ecmascript) <export default as geoPath>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$select$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__select$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-selection/src/select.js [app-client] (ecmascript) <export default as select>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$channel$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/channel.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/context.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$dimensions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/dimensions.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$facet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/facet.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$interactions$2f$pointer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/interactions/pointer.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$legends$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/legends.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/mark.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$axis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/marks/axis.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$frame$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/marks/frame.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$tip$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/marks/tip.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$projection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/projection.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/scales/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/style.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$basic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/basic.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$warnings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/warnings.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
function plot() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const { facet, style, title, subtitle, caption, ariaLabel, ariaDescription } = options;
    // className for inline styles
    const className = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeClassName"])(options.className);
    // Flatten any nested marks.
    const marks = options.marks === undefined ? [] : flatMarks(options.marks);
    // Add implicit tips.
    marks.push(...inferTips(marks));
    // Compute the top-level facet state. This has roughly the same structure as
    // mark-specific facet state, except there isn’t a facetsIndex, and there’s a
    // data and dataLength so we can warn the user if a different data of the same
    // length is used in a mark.
    const topFacetState = maybeTopFacet(facet, options);
    // Construct a map from (faceted) Mark instance to facet state, including:
    // channels - an {fx?, fy?} object to add to the fx and fy scale
    // groups - a possibly-nested map from facet values to indexes in the data array
    // facetsIndex - a sparse nested array of indices corresponding to the valid facets
    const facetStateByMark = new Map();
    for (const mark of marks){
        const facetState = maybeMarkFacet(mark, topFacetState, options);
        if (facetState) facetStateByMark.set(mark, facetState);
    }
    // Compute a Map from scale name to an array of associated channels.
    const channelsByScale = new Map();
    if (topFacetState) addScaleChannels(channelsByScale, [
        topFacetState
    ], options);
    addScaleChannels(channelsByScale, facetStateByMark, options);
    // Add implicit axis marks. Because this happens after faceting (because it
    // depends on whether faceting is present), we must initialize the facet state
    // of any implicit axes, too.
    const axes = flatMarks(inferAxes(marks, channelsByScale, options));
    for (const mark of axes){
        const facetState = maybeMarkFacet(mark, topFacetState, options);
        if (facetState) facetStateByMark.set(mark, facetState);
    }
    marks.unshift(...axes);
    // All the possible facets are given by the domains of the fx or fy scales, or
    // the cross-product of these domains if we facet by both x and y. We sort
    // them in order to apply the facet filters afterwards.
    let facets = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$facet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createFacets"])(channelsByScale, options);
    if (facets !== undefined) {
        const topFacetsIndex = topFacetState ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$facet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["facetFilter"])(facets, topFacetState) : undefined;
        // Compute a facet index for each mark, parallel to the facets array. For
        // mark-level facets, compute an index for that mark’s data and options.
        // Otherwise, use the top-level facet index.
        for (const mark of marks){
            if (mark.facet === null || mark.facet === "super") continue;
            const facetState = facetStateByMark.get(mark);
            if (facetState === undefined) continue;
            facetState.facetsIndex = mark.fx != null || mark.fy != null ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$facet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["facetFilter"])(facets, facetState) : topFacetsIndex;
        }
        // The cross product of the domains of fx and fy can include fx-fy
        // combinations for which no mark has an instance associated with that
        // combination, and therefore we don’t want to render this facet (not even
        // the frame). The same can occur if you specify the domain of fx and fy
        // explicitly, but there is no mark instance associated with some values in
        // the domain. Expunge empty facets, and clear the corresponding elements
        // from the nested index in each mark.
        const nonEmpty = new Set();
        for (const { facetsIndex } of facetStateByMark.values()){
            facetsIndex === null || facetsIndex === void 0 ? void 0 : facetsIndex.forEach((index, i)=>{
                if ((index === null || index === void 0 ? void 0 : index.length) > 0) {
                    nonEmpty.add(i);
                }
            });
        }
        // If all the facets are empty (as when none of the marks are actually
        // faceted), none of them are empty.
        facets.forEach(0 < nonEmpty.size && nonEmpty.size < facets.length ? (f, i)=>f.empty = !nonEmpty.has(i) : (f)=>f.empty = false);
        // For any mark using the “exclude” facet mode, invert the index.
        for (const mark of marks){
            if (mark.facet === "exclude") {
                const facetState = facetStateByMark.get(mark);
                if (facetState !== undefined) facetState.facetsIndex = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$facet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["facetExclude"])(facetState.facetsIndex);
            }
        }
    }
    // If a scale is explicitly declared in options, initialize its associated
    // channels to the empty array; this will guarantee that a corresponding scale
    // will be created later (even if there are no other channels). Ignore facet
    // scale declarations, which are handled above.
    for (const key of __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].keys()){
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isScaleOptions"])(options[key]) && key !== "fx" && key !== "fy") {
            channelsByScale.set(key, []);
        }
    }
    // A Map from Mark instance to its render state, including:
    // index - the data index e.g. [0, 1, 2, 3, …]
    // channels - an array of materialized channels e.g. [["x", {value}], …]
    // faceted - a boolean indicating whether this mark is faceted
    // values - an object of scaled values e.g. {x: [40, 32, …], …}
    const stateByMark = new Map();
    // Initialize the marks’ state.
    for (const mark of marks){
        if (stateByMark.has(mark)) throw new Error("duplicate mark; each mark must be unique");
        var _facetStateByMark_get;
        const { facetsIndex, channels: facetChannels } = (_facetStateByMark_get = facetStateByMark.get(mark)) !== null && _facetStateByMark_get !== void 0 ? _facetStateByMark_get : {};
        const { data, facets, channels } = mark.initialize(facetsIndex, facetChannels, options);
        applyScaleTransforms(channels, options);
        stateByMark.set(mark, {
            data,
            facets,
            channels
        });
    }
    // Initalize the scales and dimensions.
    const scaleDescriptors = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScales"])(addScaleChannels(channelsByScale, stateByMark, options), options);
    const dimensions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$dimensions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createDimensions"])(scaleDescriptors, marks, options);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["autoScaleRange"])(scaleDescriptors, dimensions);
    const scales = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleFunctions"])(scaleDescriptors);
    const { fx, fy } = scales;
    const subdimensions = fx || fy ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["innerDimensions"])(scaleDescriptors, dimensions) : dimensions;
    const superdimensions = fx || fy ? actualDimensions(scales, dimensions) : dimensions;
    // Initialize the context.
    const context = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createContext"])(options);
    const document = context.document;
    const svg = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$creator$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__creator$3e$__["creator"])("svg").call(document.documentElement);
    let figure = svg; // replaced with the figure element, if any
    context.ownerSVGElement = svg;
    context.className = className;
    context.projection = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$projection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createProjection"])(options, subdimensions);
    // A path generator for marks that want to draw GeoJSON.
    context.path = function() {
        var _this_projection;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$geo$2f$src$2f$path$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__geoPath$3e$__["geoPath"])((_this_projection = this.projection) !== null && _this_projection !== void 0 ? _this_projection : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$projection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["xyProjection"])(scales));
    };
    // Allows e.g. the axis mark to determine faceting lazily.
    context.filterFacets = (data, channels)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$facet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["facetFilter"])(facets, {
            channels,
            groups: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$facet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["facetGroups"])(data, channels)
        });
    };
    // Allows e.g. the tip mark to reference channels and data on other marks.
    context.getMarkState = (mark)=>{
        const state = stateByMark.get(mark);
        const facetState = facetStateByMark.get(mark);
        return {
            ...state,
            channels: {
                ...state.channels,
                ...facetState === null || facetState === void 0 ? void 0 : facetState.channels
            }
        };
    };
    // Allows e.g. the pointer transform to support viewof.
    context.dispatchValue = (value)=>{
        if (figure.value === value) return;
        figure.value = value;
        figure.dispatchEvent(new context.document.defaultView.Event("input", {
            bubbles: true
        }));
    };
    // Reinitialize; for deriving channels dependent on other channels.
    const newByScale = new Set();
    for (const [mark, state] of stateByMark){
        if (mark.initializer != null) {
            const dimensions = mark.facet === "super" ? superdimensions : subdimensions;
            const update = mark.initializer(state.data, state.facets, state.channels, scales, dimensions, context);
            if (update.data !== undefined) {
                state.data = update.data;
            }
            if (update.facets !== undefined) {
                state.facets = update.facets;
            }
            if (update.channels !== undefined) {
                const { fx, fy, ...channels } = update.channels; // separate facet channels
                inferChannelScales(channels);
                Object.assign(state.channels, channels);
                for (const channel of Object.values(channels)){
                    const { scale } = channel;
                    // Initializers aren’t allowed to redefine position scales as this
                    // would introduce a circular dependency; so simply scale these
                    // channels as-is rather than creating new scales, and assume that
                    // they already have the scale’s transform applied, if any (e.g., when
                    // generating ticks for the axis mark).
                    if (scale != null && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isPosition"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registry"].get(scale))) {
                        applyScaleTransform(channel, options);
                        newByScale.add(scale);
                    }
                }
                // If the initializer returns new mark-level facet channels, we must
                // record that the mark is now faceted. Note: we aren’t actually
                // populating the facet state, but subsequently we won’t need it.
                if (fx != null || fy != null) facetStateByMark.set(mark, true);
            }
        }
    }
    // Reconstruct scales if new scaled channels were created during
    // reinitialization. Preserve existing scale labels, if any.
    if (newByScale.size) {
        const newChannelsByScale = new Map();
        addScaleChannels(newChannelsByScale, stateByMark, options, (key)=>newByScale.has(key));
        addScaleChannels(channelsByScale, stateByMark, options, (key)=>newByScale.has(key));
        const newScaleDescriptors = inheritScaleLabels((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScales"])(newChannelsByScale, options), scaleDescriptors);
        const { scales: newExposedScales, ...newScales } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createScaleFunctions"])(newScaleDescriptors);
        Object.assign(scaleDescriptors, newScaleDescriptors);
        Object.assign(scales, newScales);
        Object.assign(scales.scales, newExposedScales);
    }
    // Sort and filter the facets to match the fx and fy domains; this is needed
    // because the facets were constructed prior to the fx and fy scales.
    let facetDomains, facetTranslate;
    if (facets !== undefined) {
        facetDomains = {
            x: fx === null || fx === void 0 ? void 0 : fx.domain(),
            y: fy === null || fy === void 0 ? void 0 : fy.domain()
        };
        facets = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$facet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["recreateFacets"])(facets, facetDomains);
        facetTranslate = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$facet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["facetTranslator"])(fx, fy, dimensions);
    }
    // Compute value objects, applying scales and projection as needed.
    for (const [mark, state] of stateByMark){
        state.values = mark.scale(state.channels, scales, context);
    }
    const { width, height } = dimensions;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$select$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__select$3e$__["select"])(svg).attr("class", className).attr("fill", "currentColor").attr("font-family", "system-ui, sans-serif").attr("font-size", 10).attr("text-anchor", "middle").attr("width", width).attr("height", height).attr("viewBox", "0 0 ".concat(width, " ").concat(height)).attr("aria-label", ariaLabel).attr("aria-description", ariaDescription).call((svg)=>// Warning: if you edit this, change defaultClassName.
        svg.append("style").text(":where(.".concat(className, ") {\n  --plot-background: white;\n  display: block;\n  height: auto;\n  height: intrinsic;\n  max-width: 100%;\n}\n:where(.").concat(className, " text),\n:where(.").concat(className, " tspan) {\n  white-space: pre;\n}"))).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyInlineStyles"], style);
    // Render marks.
    for (const mark of marks){
        const { channels, values, facets: indexes } = stateByMark.get(mark);
        // Render a non-faceted mark.
        if (facets === undefined || mark.facet === "super") {
            let index = null;
            if (indexes) {
                index = indexes[0];
                index = mark.filter(index, channels, values);
                if (index.length === 0) continue;
            }
            const node = mark.render(index, scales, values, superdimensions, context);
            if (node == null) continue;
            svg.appendChild(node);
        } else {
            let g;
            for (const f of facets){
                var _mark_facetAnchor;
                var _mark_facetAnchor1;
                if (!((_mark_facetAnchor1 = (_mark_facetAnchor = mark.facetAnchor) === null || _mark_facetAnchor === void 0 ? void 0 : _mark_facetAnchor.call(mark, facets, facetDomains, f)) !== null && _mark_facetAnchor1 !== void 0 ? _mark_facetAnchor1 : !f.empty)) continue;
                let index = null;
                if (indexes) {
                    const faceted = facetStateByMark.has(mark);
                    index = indexes[faceted ? f.i : 0];
                    index = mark.filter(index, channels, values);
                    if (index.length === 0) continue;
                    if (!faceted && index === indexes[0]) index = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["subarray"])(index); // copy before assigning fx, fy, fi
                    index.fx = f.x, index.fy = f.y, index.fi = f.i;
                }
                const node = mark.render(index, scales, values, subdimensions, context);
                if (node == null) continue;
                // Lazily construct the shared group (to drop empty marks).
                (g !== null && g !== void 0 ? g : g = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$select$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__select$3e$__["select"])(svg).append("g")).append(()=>node).datum(f);
                // Promote ARIA attributes and mark transform to avoid repetition on
                // each facet; this assumes that these attributes are consistent across
                // facets, but that should be the case!
                for (const name of [
                    "aria-label",
                    "aria-description",
                    "aria-hidden",
                    "transform"
                ]){
                    if (node.hasAttribute(name)) {
                        g.attr(name, node.getAttribute(name));
                        node.removeAttribute(name);
                    }
                }
            }
            g === null || g === void 0 ? void 0 : g.selectChildren().each(facetTranslate);
        }
    }
    // Wrap the plot in a figure, if needed.
    const legends = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$legends$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createLegends"])(scaleDescriptors, context, options);
    const { figure: figured = title != null || subtitle != null || caption != null || legends.length > 0 } = options;
    if (figured) {
        figure = document.createElement("figure");
        figure.className = "".concat(className, "-figure");
        figure.style.maxWidth = "initial"; // avoid Observable default style
        if (title != null) figure.append(createTitleElement(document, title, "h2"));
        if (subtitle != null) figure.append(createTitleElement(document, subtitle, "h3"));
        figure.append(...legends, svg);
        if (caption != null) figure.append(createFigcaption(document, caption));
        if ("value" in svg) figure.value = svg.value, delete svg.value;
    }
    figure.scale = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["exposeScales"])(scales.scales);
    figure.legend = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$legends$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["exposeLegends"])(scaleDescriptors, context, options);
    const w = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$warnings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["consumeWarnings"])();
    if (w > 0) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$selection$2f$src$2f$select$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__select$3e$__["select"])(svg).append("text").attr("x", width).attr("y", 20).attr("dy", "-1em").attr("text-anchor", "end").attr("font-family", "initial") // fix emoji rendering in Chrome
        .text("\u26a0\ufe0f") // emoji variation selector
        .append("title").text("".concat(w.toLocaleString("en-US"), " warning").concat(w === 1 ? "" : "s", ". Please check the console."));
    }
    return figure;
}
function createTitleElement(document, contents, tag) {
    if (contents.ownerDocument) return contents;
    const e = document.createElement(tag);
    e.append(contents);
    return e;
}
function createFigcaption(document, caption) {
    const e = document.createElement("figcaption");
    e.append(caption);
    return e;
}
function flatMarks(marks) {
    return marks.flat(Infinity).filter((mark)=>mark != null).map(markify);
}
function markify(mark) {
    return typeof mark.render === "function" ? mark : new Render(mark);
}
class Render extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Mark"] {
    render() {}
    constructor(render){
        if (typeof render !== "function") throw new TypeError("invalid mark; missing render function");
        super();
        this.render = render;
    }
}
// Note: mutates channel.value to apply the scale transform, if any.
function applyScaleTransforms(channels, options) {
    for(const name in channels)applyScaleTransform(channels[name], options);
    return channels;
}
// Note: mutates channel.value to apply the scale transform, if any. Also sets
// channel.transform to false to prevent duplicate transform application.
function applyScaleTransform(channel, options) {
    const { scale, transform: t = true } = channel;
    if (scale == null || !t) return;
    var _options_scale;
    const { type, percent, interval, transform = percent ? (x)=>x == null ? NaN : x * 100 : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeIntervalTransform"])(interval, type) } = (_options_scale = options[scale]) !== null && _options_scale !== void 0 ? _options_scale : {};
    if (transform == null) return;
    channel.value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["map"])(channel.value, transform);
    channel.transform = false;
}
// An initializer may generate channels without knowing how the downstream mark
// will use them. Marks are typically responsible associated scales with
// channels, but here we assume common behavior across marks.
function inferChannelScales(channels) {
    for(const name in channels){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$channel$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["inferChannelScale"])(name, channels[name]);
    }
}
function addScaleChannels(channelsByScale, stateByMark, options) {
    let filter = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["yes"];
    for (const { channels } of stateByMark.values()){
        for(const name in channels){
            const channel = channels[name];
            const { scale } = channel;
            if (scale != null && filter(scale)) {
                // Geo marks affect the default x and y domains if there is no
                // projection. Skip this (as an optimization) when a projection is
                // specified, or when the domains for x and y are specified.
                if (scale === "projection") {
                    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$projection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasProjection"])(options)) {
                        var _options_x, _options_y;
                        const gx = ((_options_x = options.x) === null || _options_x === void 0 ? void 0 : _options_x.domain) === undefined;
                        const gy = ((_options_y = options.y) === null || _options_y === void 0 ? void 0 : _options_y.domain) === undefined;
                        if (gx || gy) {
                            const [x, y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$projection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGeometryChannels"])(channel);
                            if (gx) addScaleChannel(channelsByScale, "x", x);
                            if (gy) addScaleChannel(channelsByScale, "y", y);
                        }
                    }
                } else {
                    addScaleChannel(channelsByScale, scale, channel);
                }
            }
        }
    }
    return channelsByScale;
}
function addScaleChannel(channelsByScale, scale, channel) {
    const scaleChannels = channelsByScale.get(scale);
    if (scaleChannels !== undefined) scaleChannels.push(channel);
    else channelsByScale.set(scale, [
        channel
    ]);
}
// Returns the facet groups, and possibly fx and fy channels, associated with
// the top-level facet option {data, x, y}.
function maybeTopFacet(facet, options) {
    if (facet == null) return;
    const { x, y } = facet;
    if (x == null && y == null) return;
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["dataify"])(facet.data);
    if (data == null) throw new Error("missing facet data");
    const channels = {};
    if (x != null) channels.fx = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$channel$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createChannel"])(data, {
        value: x,
        scale: "fx"
    });
    if (y != null) channels.fy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$channel$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createChannel"])(data, {
        value: y,
        scale: "fy"
    });
    applyScaleTransforms(channels, options);
    const groups = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$facet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["facetGroups"])(data, channels);
    return {
        channels,
        groups,
        data: facet.data
    };
}
// Returns the facet groups, and possibly fx and fy channels, associated with a
// mark, either through top-level faceting or mark-level facet options {fx, fy}.
function maybeMarkFacet(mark, topFacetState, options) {
    if (mark.facet === null || mark.facet === "super") return;
    // This mark defines a mark-level facet. TODO There’s some code duplication
    // here with maybeTopFacet that we could reduce.
    const { fx, fy } = mark;
    if (fx != null || fy != null) {
        var _mark_data, _ref;
        const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["dataify"])((_ref = (_mark_data = mark.data) !== null && _mark_data !== void 0 ? _mark_data : fx) !== null && _ref !== void 0 ? _ref : fy);
        if (data === undefined) throw new Error("missing facet data in ".concat(mark.ariaLabel));
        if (data === null) return; // ignore channel definitions if no data is provided TODO this right?
        const channels = {};
        if (fx != null) channels.fx = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$channel$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createChannel"])(data, {
            value: fx,
            scale: "fx"
        });
        if (fy != null) channels.fy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$channel$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createChannel"])(data, {
            value: fy,
            scale: "fy"
        });
        applyScaleTransforms(channels, options);
        return {
            channels,
            groups: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$facet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["facetGroups"])(data, channels)
        };
    }
    // This mark links to a top-level facet, if present.
    if (topFacetState === undefined) return;
    // TODO Can we link the top-level facet channels here?
    const { channels, groups, data } = topFacetState;
    if (mark.facet !== "auto" || mark.data === data) return {
        channels,
        groups
    };
    // Warn for the common pitfall of wanting to facet mapped data with the
    // top-level facet option.
    if (data.length > 0 && (groups.size > 1 || groups.size === 1 && channels.fx && channels.fy && [
        ...groups
    ][0][1].size > 1) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["lengthof"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["dataify"])(mark.data)) === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["lengthof"])(data)) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$warnings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["warn"])("Warning: the ".concat(mark.ariaLabel, ' mark appears to use faceted data, but isn’t faceted. The mark data has the same length as the facet data and the mark facet option is "auto", but the mark data and facet data are distinct. If this mark should be faceted, set the mark facet option to true; otherwise, suppress this warning by setting the mark facet option to false.'));
    }
}
function derive(mark) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$basic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["initializer"])({
        ...options,
        x: null,
        y: null
    }, (data, facets, channels, scales, dimensions, context)=>{
        return context.getMarkState(mark);
    });
}
function inferTips(marks) {
    const tips = [];
    for (const mark of marks){
        let tipOptions = mark.tip;
        if (tipOptions) {
            if (tipOptions === true) tipOptions = {};
            else if (typeof tipOptions === "string") tipOptions = {
                pointer: tipOptions
            };
            let { pointer: p, preferredAnchor: a } = tipOptions;
            p = /^x$/i.test(p) ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$interactions$2f$pointer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pointerX"] : /^y$/i.test(p) ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$interactions$2f$pointer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pointerY"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$interactions$2f$pointer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pointer"]; // TODO validate?
            tipOptions = p(derive(mark, tipOptions));
            tipOptions.title = null; // prevent implicit title for primitive data
            if (a === undefined) tipOptions.preferredAnchor = p === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$interactions$2f$pointer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pointerY"] ? "left" : "bottom";
            const t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$tip$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["tip"])(mark.data, tipOptions);
            t.facet = mark.facet; // inherit facet settings
            t.facetAnchor = mark.facetAnchor; // inherit facet settings
            tips.push(t);
        }
    }
    return tips;
}
function inferAxes(marks, channelsByScale, options) {
    let { projection, x = {}, y = {}, fx = {}, fy = {}, axis, grid, facet = {}, facet: { axis: facetAxis = axis, grid: facetGrid } = facet, x: { axis: xAxis = axis, grid: xGrid = xAxis === null ? null : grid } = x, y: { axis: yAxis = axis, grid: yGrid = yAxis === null ? null : grid } = y, fx: { axis: fxAxis = facetAxis, grid: fxGrid = fxAxis === null ? null : facetGrid } = fx, fy: { axis: fyAxis = facetAxis, grid: fyGrid = fyAxis === null ? null : facetGrid } = fy } = options;
    // Disable axes if the corresponding scale is not present.
    if (projection || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isScaleOptions"])(x) && !hasPositionChannel("x", marks)) xAxis = xGrid = null;
    if (projection || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isScaleOptions"])(y) && !hasPositionChannel("y", marks)) yAxis = yGrid = null;
    if (!channelsByScale.has("fx")) fxAxis = fxGrid = null;
    if (!channelsByScale.has("fy")) fyAxis = fyGrid = null;
    // Resolve the default implicit axes by checking for explicit ones.
    if (xAxis === undefined) xAxis = !hasAxis(marks, "x");
    if (yAxis === undefined) yAxis = !hasAxis(marks, "y");
    if (fxAxis === undefined) fxAxis = !hasAxis(marks, "fx");
    if (fyAxis === undefined) fyAxis = !hasAxis(marks, "fy");
    // Resolve the default orientation of axes.
    if (xAxis === true) xAxis = "bottom";
    if (yAxis === true) yAxis = "left";
    if (fxAxis === true) fxAxis = xAxis === "top" || xAxis === null ? "bottom" : "top";
    if (fyAxis === true) fyAxis = yAxis === "right" || yAxis === null ? "left" : "right";
    const axes = [];
    maybeGrid(axes, fyGrid, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$axis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["gridFy"], fy);
    maybeAxis(axes, fyAxis, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$axis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axisFy"], "right", "left", facet, fy);
    maybeGrid(axes, fxGrid, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$axis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["gridFx"], fx);
    maybeAxis(axes, fxAxis, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$axis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axisFx"], "top", "bottom", facet, fx);
    maybeGrid(axes, yGrid, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$axis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["gridY"], y);
    maybeAxis(axes, yAxis, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$axis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axisY"], "left", "right", options, y);
    maybeGrid(axes, xGrid, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$axis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["gridX"], x);
    maybeAxis(axes, xAxis, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$axis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axisX"], "bottom", "top", options, x);
    return axes;
}
function maybeAxis(axes, axis, axisType, primary, secondary, defaults, options) {
    if (!axis) return;
    const both = isBoth(axis);
    options = axisOptions(both ? primary : axis, defaults, options);
    const { line } = options;
    if ((axisType === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$axis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axisY"] || axisType === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$axis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axisX"]) && line && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNone"])(line)) axes.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marks$2f$frame$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["frame"])(lineOptions(options)));
    axes.push(axisType(options));
    if (both) axes.push(axisType({
        ...options,
        anchor: secondary,
        label: null
    }));
}
function maybeGrid(axes, grid, gridType, options) {
    if (!grid || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNone"])(grid)) return;
    axes.push(gridType(gridOptions(grid, options)));
}
function isBoth(value) {
    return /^\s*both\s*$/i.test(value);
}
function axisOptions(anchor, defaults, param) {
    let { line = defaults.line, ticks, tickSize, tickSpacing, tickPadding, tickFormat, tickRotate, fontVariant, ariaLabel, ariaDescription, label = defaults.label, labelAnchor, labelArrow = defaults.labelArrow, labelOffset } = param;
    return {
        anchor,
        line,
        ticks,
        tickSize,
        tickSpacing,
        tickPadding,
        tickFormat,
        tickRotate,
        fontVariant,
        ariaLabel,
        ariaDescription,
        label,
        labelAnchor,
        labelArrow,
        labelOffset
    };
}
function lineOptions(options) {
    const { anchor, line } = options;
    return {
        anchor,
        facetAnchor: anchor + "-empty",
        stroke: line === true ? undefined : line
    };
}
function gridOptions(grid, param) {
    let { stroke = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isColor"])(grid) ? grid : undefined, ticks = isGridTicks(grid) ? grid : undefined, tickSpacing, ariaLabel, ariaDescription } = param;
    return {
        stroke,
        ticks,
        tickSpacing,
        ariaLabel,
        ariaDescription
    };
}
function isGridTicks(grid) {
    switch(typeof grid){
        case "number":
            return true;
        case "string":
            return !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isColor"])(grid);
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isIterable"])(grid) || typeof (grid === null || grid === void 0 ? void 0 : grid.range) === "function";
}
// Is there an explicit axis already present? TODO We probably want a more
// explicit test than looking for the ARIA label, but it does afford some
// flexibility in axis implementation which is nice.
function hasAxis(marks, k) {
    const prefix = "".concat(k, "-axis ");
    return marks.some((m)=>{
        var _m_ariaLabel;
        return (_m_ariaLabel = m.ariaLabel) === null || _m_ariaLabel === void 0 ? void 0 : _m_ariaLabel.startsWith(prefix);
    });
}
function hasPositionChannel(k, marks) {
    for (const mark of marks){
        for(const key in mark.channels){
            const { scale } = mark.channels[key];
            if (scale === k || scale === "projection") {
                return true;
            }
        }
    }
    return false;
}
function inheritScaleLabels(newScales, scales) {
    for(const key in newScales){
        const newScale = newScales[key];
        const scale = scales[key];
        if (newScale.label === undefined && scale) {
            newScale.label = scale.label;
        }
    }
    return newScales;
}
// This differs from the other outerDimensions in that it accounts for rounding
// and outer padding in the facet scales; we want the frame to align exactly
// with the actual range, not the desired range.
function actualDimensions(param, dimensions) {
    let { fx, fy } = param;
    const { marginTop, marginRight, marginBottom, marginLeft, width, height } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$scales$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["outerDimensions"])(dimensions);
    const fxr = fx && outerRange(fx);
    const fyr = fy && outerRange(fy);
    return {
        marginTop: fy ? fyr[0] : marginTop,
        marginRight: fx ? width - fxr[1] : marginRight,
        marginBottom: fy ? height - fyr[1] : marginBottom,
        marginLeft: fx ? fxr[0] : marginLeft,
        // Some marks, namely the x- and y-axis labels, want to know what the
        // desired (rather than actual) margins are for positioning.
        inset: {
            marginTop: dimensions.marginTop,
            marginRight: dimensions.marginRight,
            marginBottom: dimensions.marginBottom,
            marginLeft: dimensions.marginLeft
        },
        width,
        height
    };
}
function outerRange(scale) {
    const domain = scale.domain();
    if (domain.length === 0) return [
        0,
        scale.bandwidth()
    ];
    let x1 = scale(domain[0]);
    let x2 = scale(domain[domain.length - 1]);
    if (x2 < x1) [x1, x2] = [
        x2,
        x1
    ];
    return [
        x1,
        x2 + scale.bandwidth()
    ];
}
}),
"[project]/node_modules/@observablehq/plot/src/index.js [app-client] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/mark.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$plot$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/plot.js [app-client] (ecmascript)");
;
;
// Note: this side effect avoids a circular dependency.
__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Mark"].prototype.plot = function() {
    let { marks = [], ...options } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$plot$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["plot"])({
        ...options,
        marks: [
            ...marks,
            this
        ]
    });
};
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
}),
"[project]/node_modules/@observablehq/plot/src/curve.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "curveAuto",
    ()=>curveAuto,
    "maybeCurve",
    ()=>maybeCurve,
    "maybeCurveAuto",
    ()=>maybeCurveAuto
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$basis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveBasis$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/basis.js [app-client] (ecmascript) <export default as curveBasis>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$basisClosed$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveBasisClosed$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/basisClosed.js [app-client] (ecmascript) <export default as curveBasisClosed>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$basisOpen$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveBasisOpen$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/basisOpen.js [app-client] (ecmascript) <export default as curveBasisOpen>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$bundle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveBundle$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/bundle.js [app-client] (ecmascript) <export default as curveBundle>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$bump$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__bumpX__as__curveBumpX$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/bump.js [app-client] (ecmascript) <export bumpX as curveBumpX>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$bump$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__bumpY__as__curveBumpY$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/bump.js [app-client] (ecmascript) <export bumpY as curveBumpY>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$cardinal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveCardinal$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/cardinal.js [app-client] (ecmascript) <export default as curveCardinal>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$cardinalClosed$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveCardinalClosed$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/cardinalClosed.js [app-client] (ecmascript) <export default as curveCardinalClosed>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$cardinalOpen$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveCardinalOpen$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/cardinalOpen.js [app-client] (ecmascript) <export default as curveCardinalOpen>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$catmullRom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveCatmullRom$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/catmullRom.js [app-client] (ecmascript) <export default as curveCatmullRom>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$catmullRomClosed$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveCatmullRomClosed$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/catmullRomClosed.js [app-client] (ecmascript) <export default as curveCatmullRomClosed>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$catmullRomOpen$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveCatmullRomOpen$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/catmullRomOpen.js [app-client] (ecmascript) <export default as curveCatmullRomOpen>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$linear$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveLinear$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/linear.js [app-client] (ecmascript) <export default as curveLinear>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$linearClosed$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveLinearClosed$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/linearClosed.js [app-client] (ecmascript) <export default as curveLinearClosed>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$monotone$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__monotoneX__as__curveMonotoneX$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/monotone.js [app-client] (ecmascript) <export monotoneX as curveMonotoneX>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$monotone$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__monotoneY__as__curveMonotoneY$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/monotone.js [app-client] (ecmascript) <export monotoneY as curveMonotoneY>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$natural$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveNatural$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/natural.js [app-client] (ecmascript) <export default as curveNatural>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$step$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveStep$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/step.js [app-client] (ecmascript) <export default as curveStep>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$step$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__stepAfter__as__curveStepAfter$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/step.js [app-client] (ecmascript) <export stepAfter as curveStepAfter>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$step$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__stepBefore__as__curveStepBefore$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/curve/step.js [app-client] (ecmascript) <export stepBefore as curveStepBefore>");
;
const curves = new Map([
    [
        "basis",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$basis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveBasis$3e$__["curveBasis"]
    ],
    [
        "basis-closed",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$basisClosed$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveBasisClosed$3e$__["curveBasisClosed"]
    ],
    [
        "basis-open",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$basisOpen$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveBasisOpen$3e$__["curveBasisOpen"]
    ],
    [
        "bundle",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$bundle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveBundle$3e$__["curveBundle"]
    ],
    [
        "bump-x",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$bump$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__bumpX__as__curveBumpX$3e$__["curveBumpX"]
    ],
    [
        "bump-y",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$bump$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__bumpY__as__curveBumpY$3e$__["curveBumpY"]
    ],
    [
        "cardinal",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$cardinal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveCardinal$3e$__["curveCardinal"]
    ],
    [
        "cardinal-closed",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$cardinalClosed$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveCardinalClosed$3e$__["curveCardinalClosed"]
    ],
    [
        "cardinal-open",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$cardinalOpen$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveCardinalOpen$3e$__["curveCardinalOpen"]
    ],
    [
        "catmull-rom",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$catmullRom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveCatmullRom$3e$__["curveCatmullRom"]
    ],
    [
        "catmull-rom-closed",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$catmullRomClosed$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveCatmullRomClosed$3e$__["curveCatmullRomClosed"]
    ],
    [
        "catmull-rom-open",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$catmullRomOpen$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveCatmullRomOpen$3e$__["curveCatmullRomOpen"]
    ],
    [
        "linear",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$linear$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveLinear$3e$__["curveLinear"]
    ],
    [
        "linear-closed",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$linearClosed$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveLinearClosed$3e$__["curveLinearClosed"]
    ],
    [
        "monotone-x",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$monotone$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__monotoneX__as__curveMonotoneX$3e$__["curveMonotoneX"]
    ],
    [
        "monotone-y",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$monotone$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__monotoneY__as__curveMonotoneY$3e$__["curveMonotoneY"]
    ],
    [
        "natural",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$natural$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveNatural$3e$__["curveNatural"]
    ],
    [
        "step",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$step$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveStep$3e$__["curveStep"]
    ],
    [
        "step-after",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$step$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__stepAfter__as__curveStepAfter$3e$__["curveStepAfter"]
    ],
    [
        "step-before",
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$step$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__stepBefore__as__curveStepBefore$3e$__["curveStepBefore"]
    ]
]);
function maybeCurve() {
    let curve = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$linear$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveLinear$3e$__["curveLinear"], tension = arguments.length > 1 ? arguments[1] : void 0;
    if (typeof curve === "function") return curve; // custom curve
    const c = curves.get("".concat(curve).toLowerCase());
    if (!c) throw new Error("unknown curve: ".concat(curve));
    if (tension !== undefined) {
        if ("beta" in c) {
            return c.beta(tension);
        } else if ("tension" in c) {
            return c.tension(tension);
        } else if ("alpha" in c) {
            return c.alpha(tension);
        }
    }
    return c;
}
function maybeCurveAuto() {
    let curve = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : curveAuto, tension = arguments.length > 1 ? arguments[1] : void 0;
    return typeof curve !== "function" && "".concat(curve).toLowerCase() === "auto" ? curveAuto : maybeCurve(curve, tension);
}
function curveAuto(context) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$curve$2f$linear$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__curveLinear$3e$__["curveLinear"])(context);
}
}),
"[project]/node_modules/@observablehq/plot/src/transforms/bin.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "bin",
    ()=>bin,
    "binX",
    ()=>binX,
    "binY",
    ()=>binY,
    "maybeDenseIntervalX",
    ()=>maybeDenseIntervalX,
    "maybeDenseIntervalY",
    ()=>maybeDenseIntervalY,
    "maybeThresholds",
    ()=>maybeThresholds
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$bisect$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__bisect$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/bisect.js [app-client] (ecmascript) <export default as bisect>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/extent.js [app-client] (ecmascript) <export default as extent>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$threshold$2f$freedmanDiaconis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__thresholdFreedmanDiaconis$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/threshold/freedmanDiaconis.js [app-client] (ecmascript) <export default as thresholdFreedmanDiaconis>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$threshold$2f$scott$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__thresholdScott$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/threshold/scott.js [app-client] (ecmascript) <export default as thresholdScott>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$threshold$2f$sturges$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__thresholdSturges$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/threshold/sturges.js [app-client] (ecmascript) <export default as thresholdSturges>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$ticks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/ticks.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$ticks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ticks$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-array/src/ticks.js [app-client] (ecmascript) <export default as ticks>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$ticks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-time/src/ticks.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/mark.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$time$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/time.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$basic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/basic.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/group.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$inset$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/inset.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
function binX() {
    let outputs = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
        y: "count"
    }, options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    [outputs, options] = mergeOptions(outputs, options);
    const { x, y } = options;
    return binn(maybeBinValue(x, options, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"]), null, null, y, outputs, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$inset$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeInsetX"])(options));
}
function binY() {
    let outputs = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
        x: "count"
    }, options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    [outputs, options] = mergeOptions(outputs, options);
    const { x, y } = options;
    return binn(null, maybeBinValue(y, options, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"]), x, null, outputs, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$inset$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeInsetY"])(options));
}
function bin() {
    let outputs = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
        fill: "count"
    }, options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    [outputs, options] = mergeOptions(outputs, options);
    const { x, y } = maybeBinValueTuple(options);
    return binn(x, y, null, null, outputs, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$inset$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeInsetX"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$inset$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeInsetY"])(options)));
}
function maybeDenseInterval(bin, k) {
    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    if ((options === null || options === void 0 ? void 0 : options.interval) == null) return options;
    const { reduce = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["reduceFirst"] } = options;
    const outputs = {
        filter: null
    };
    if (options[k] != null) outputs[k] = reduce;
    if (options["".concat(k, "1")] != null) outputs["".concat(k, "1")] = reduce;
    if (options["".concat(k, "2")] != null) outputs["".concat(k, "2")] = reduce;
    return bin(outputs, options);
}
function maybeDenseIntervalX() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return maybeDenseInterval(binX, "y", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["withTip"])(options, "x"));
}
function maybeDenseIntervalY() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return maybeDenseInterval(binY, "x", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["withTip"])(options, "y"));
}
function binn(bx, by, gx, gy) {
    let { data: reduceData = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["reduceIdentity"], filter = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["reduceCount"], sort, reverse, ...outputs // output channel definitions
     } = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {}, inputs = arguments.length > 5 && arguments[5] !== void 0 // input channels and options
     ? arguments[5] : {};
    bx = maybeBin(bx);
    by = maybeBin(by);
    // Compute the outputs.
    outputs = maybeBinOutputs(outputs, inputs);
    reduceData = maybeBinReduce(reduceData, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"]);
    sort = sort == null ? undefined : maybeBinOutput("sort", sort, inputs);
    filter = filter == null ? undefined : maybeBinEvaluator("filter", filter, inputs);
    // Don’t group on a channel if an output requires it as an input!
    if (gx != null && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasOutput"])(outputs, "x", "x1", "x2")) gx = null;
    if (gy != null && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasOutput"])(outputs, "y", "y1", "y2")) gy = null;
    // Produce x1, x2, y1, and y2 output channels as appropriate (when binning).
    const [BX1, setBX1] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColumn"])(bx);
    const [BX2, setBX2] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColumn"])(bx);
    const [BY1, setBY1] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColumn"])(by);
    const [BY2, setBY2] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColumn"])(by);
    // Produce x or y output channels as appropriate (when grouping).
    const [k, gk] = gx != null ? [
        gx,
        "x"
    ] : gy != null ? [
        gy,
        "y"
    ] : [];
    const [GK, setGK] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColumn"])(k);
    // Greedily materialize the z, fill, and stroke channels (if channels and not
    // constants) so that we can reference them for subdividing groups without
    // computing them more than once. We also want to consume options that should
    // only apply to this transform rather than passing them through to the next.
    const { x, y, z, fill, stroke, x1, x2, y1, y2, domain, cumulative, thresholds, interval, ...options } = inputs;
    const [GZ, setGZ] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColumn"])(z);
    const [vfill] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColorChannel"])(fill);
    const [vstroke] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColorChannel"])(stroke);
    const [GF, setGF] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColumn"])(vfill);
    const [GS, setGS] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColumn"])(vstroke);
    return {
        ..."z" in inputs && {
            z: GZ || z
        },
        ..."fill" in inputs && {
            fill: GF || fill
        },
        ..."stroke" in inputs && {
            stroke: GS || stroke
        },
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$basic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["basic"])(options, (data, facets, plotOptions)=>{
            const K = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeApplyInterval"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, k), plotOptions === null || plotOptions === void 0 ? void 0 : plotOptions[gk]);
            const Z = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, z);
            const F = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, vfill);
            const S = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, vstroke);
            const G = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeSubgroup"])(outputs, {
                z: Z,
                fill: F,
                stroke: S
            });
            const groupFacets = [];
            const groupData = [];
            const GK = K && setGK([]);
            const GZ = Z && setGZ([]);
            const GF = F && setGF([]);
            const GS = S && setGS([]);
            const BX1 = bx && setBX1([]);
            const BX2 = bx && setBX2([]);
            const BY1 = by && setBY1([]);
            const BY2 = by && setBY2([]);
            const bin = bing(bx, by, data);
            let i = 0;
            for (const o of outputs)o.initialize(data);
            if (sort) sort.initialize(data);
            if (filter) filter.initialize(data);
            for (const facet of facets){
                const groupFacet = [];
                for (const o of outputs)o.scope("facet", facet);
                if (sort) sort.scope("facet", facet);
                if (filter) filter.scope("facet", facet);
                for (const [f, I] of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeGroup"])(facet, G)){
                    for (const [k, g] of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeGroup"])(I, K)){
                        for (const [b, extent] of bin(g)){
                            if (G) extent.z = f;
                            if (filter && !filter.reduce(b, extent)) continue;
                            groupFacet.push(i++);
                            groupData.push(reduceData.reduceIndex(b, data, extent));
                            if (K) GK.push(k);
                            if (Z) GZ.push(G === Z ? f : Z[(b.length > 0 ? b : g)[0]]);
                            if (F) GF.push(G === F ? f : F[(b.length > 0 ? b : g)[0]]);
                            if (S) GS.push(G === S ? f : S[(b.length > 0 ? b : g)[0]]);
                            if (BX1) BX1.push(extent.x1), BX2.push(extent.x2);
                            if (BY1) BY1.push(extent.y1), BY2.push(extent.y2);
                            for (const o of outputs)o.reduce(b, extent);
                            if (sort) sort.reduce(b, extent);
                        }
                    }
                }
                groupFacets.push(groupFacet);
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeSort"])(groupFacets, sort, reverse);
            return {
                data: groupData,
                facets: groupFacets
            };
        }),
        ...!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasOutput"])(outputs, "x") && (BX1 ? {
            x1: BX1,
            x2: BX2,
            x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mid"])(BX1, BX2)
        } : {
            x,
            x1,
            x2
        }),
        ...!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasOutput"])(outputs, "y") && (BY1 ? {
            y1: BY1,
            y2: BY2,
            y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mid"])(BY1, BY2)
        } : {
            y,
            y1,
            y2
        }),
        ...GK && {
            [gk]: GK
        },
        ...Object.fromEntries(outputs.map((param)=>{
            let { name, output } = param;
            return [
                name,
                output
            ];
        }))
    };
}
// Allow bin options to be specified as part of outputs; merge them into options.
function mergeOptions(param, options) {
    let { cumulative, domain, thresholds, interval, ...outputs } = param;
    return [
        outputs,
        {
            cumulative,
            domain,
            thresholds,
            interval,
            ...options
        }
    ];
}
function maybeBinValue(value, param, defaultValue) {
    let { cumulative, domain, thresholds, interval } = param;
    value = {
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeValue"])(value)
    };
    if (value.domain === undefined) value.domain = domain;
    if (value.cumulative === undefined) value.cumulative = cumulative;
    if (value.thresholds === undefined) value.thresholds = thresholds;
    if (value.interval === undefined) value.interval = interval;
    if (value.value === undefined) value.value = defaultValue;
    value.thresholds = maybeThresholds(value.thresholds, value.interval);
    return value;
}
function maybeBinValueTuple(options) {
    let { x, y } = options;
    x = maybeBinValue(x, options);
    y = maybeBinValue(y, options);
    [x.value, y.value] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeTuple"])(x.value, y.value);
    return {
        x,
        y
    };
}
function maybeBin(options) {
    if (options == null) return;
    const { value, cumulative, domain = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__["extent"], thresholds } = options;
    const bin = (data)=>{
        let V = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(data, value);
        let T; // bin thresholds
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isTemporal"])(V) || isTimeThresholds(thresholds)) {
            V = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["map"])(V, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["coerceDate"], Float64Array); // like coerceDates, but faster
            let [min, max] = typeof domain === "function" ? domain(V) : domain;
            let t = typeof thresholds === "function" && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInterval"])(thresholds) ? thresholds(V, min, max) : thresholds;
            if (typeof t === "number") t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$time$2f$src$2f$ticks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcTickInterval"])(min, max, t);
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInterval"])(t)) {
                if (domain === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__["extent"]) {
                    min = t.floor(min);
                    max = t.offset(t.floor(max));
                }
                t = t.range(min, t.offset(max));
            }
            T = t;
        } else {
            V = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["coerceNumbers"])(V);
            let [min, max] = typeof domain === "function" ? domain(V) : domain;
            let t = typeof thresholds === "function" && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInterval"])(thresholds) ? thresholds(V, min, max) : thresholds;
            if (typeof t === "number") {
                // This differs from d3.ticks with regard to exclusive bounds: we want a
                // first threshold less than or equal to the minimum, and a last
                // threshold (strictly) greater than the maximum.
                if (domain === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__["extent"]) {
                    let step = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$ticks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["tickIncrement"])(min, max, t);
                    if (isFinite(step)) {
                        if (step > 0) {
                            let r0 = Math.round(min / step);
                            let r1 = Math.round(max / step);
                            if (!(r0 * step <= min)) --r0;
                            if (!(r1 * step > max)) ++r1;
                            let n = r1 - r0 + 1;
                            t = new Float64Array(n);
                            for(let i = 0; i < n; ++i)t[i] = (r0 + i) * step;
                        } else if (step < 0) {
                            step = -step;
                            let r0 = Math.round(min * step);
                            let r1 = Math.round(max * step);
                            if (!(r0 / step <= min)) --r0;
                            if (!(r1 / step > max)) ++r1;
                            let n = r1 - r0 + 1;
                            t = new Float64Array(n);
                            for(let i = 0; i < n; ++i)t[i] = (r0 + i) / step;
                        } else {
                            t = [
                                min
                            ];
                        }
                    } else {
                        t = [
                            min
                        ];
                    }
                } else {
                    t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$ticks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ticks$3e$__["ticks"])(min, max, t);
                }
            } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInterval"])(t)) {
                if (domain === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__["extent"]) {
                    min = t.floor(min);
                    max = t.offset(t.floor(max));
                }
                t = t.range(min, t.offset(max));
            }
            T = t;
        }
        const E = [];
        if (T.length === 1) E.push([
            T[0],
            T[0]
        ]); // collapsed domain
        else for(let i = 1; i < T.length; ++i)E.push([
            T[i - 1],
            T[i]
        ]);
        E.bin = (cumulative < 0 ? bin1cn : cumulative > 0 ? bin1cp : bin1)(E, T, V);
        return E;
    };
    bin.label = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["labelof"])(value);
    return bin;
}
function maybeThresholds(thresholds, interval) {
    let defaultThresholds = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : thresholdAuto;
    if (thresholds === undefined) {
        return interval === undefined ? defaultThresholds : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeRangeInterval"])(interval);
    }
    if (typeof thresholds === "string") {
        switch(thresholds.toLowerCase()){
            case "freedman-diaconis":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$threshold$2f$freedmanDiaconis$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__thresholdFreedmanDiaconis$3e$__["thresholdFreedmanDiaconis"];
            case "scott":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$threshold$2f$scott$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__thresholdScott$3e$__["thresholdScott"];
            case "sturges":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$threshold$2f$sturges$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__thresholdSturges$3e$__["thresholdSturges"];
            case "auto":
                return thresholdAuto;
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$time$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["utcInterval"])(thresholds);
    }
    return thresholds; // pass array, count, or function to bin.thresholds
}
function maybeBinOutputs(outputs, inputs) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeOutputs"])(outputs, inputs, maybeBinOutput);
}
function maybeBinOutput(name, reduce, inputs) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeOutput"])(name, reduce, inputs, maybeBinEvaluator);
}
function maybeBinEvaluator(name, reduce, inputs) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeEvaluator"])(name, reduce, inputs, maybeBinReduce);
}
function maybeBinReduce(reduce, value) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeReduce"])(reduce, value, maybeBinReduceFallback);
}
function maybeBinReduceFallback(reduce) {
    switch("".concat(reduce).toLowerCase()){
        case "x":
            return reduceX;
        case "x1":
            return reduceX1;
        case "x2":
            return reduceX2;
        case "y":
            return reduceY;
        case "y1":
            return reduceY1;
        case "y2":
            return reduceY2;
        case "z":
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["reduceZ"];
    }
    throw new Error("invalid bin reduce: ".concat(reduce));
}
function thresholdAuto(values, min, max) {
    return Math.min(200, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$threshold$2f$scott$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__thresholdScott$3e$__["thresholdScott"])(values, min, max));
}
function isTimeThresholds(t) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isTimeInterval"])(t) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isIterable"])(t) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isTemporal"])(t);
}
function bing(bx, by, data) {
    const EX = bx === null || bx === void 0 ? void 0 : bx(data);
    const EY = by === null || by === void 0 ? void 0 : by(data);
    return EX && EY ? function*(I) {
        const X = EX.bin(I); // first bin on x
        for (const [ix, [x1, x2]] of EX.entries()){
            const Y = EY.bin(X[ix]); // then bin on y
            for (const [iy, [y1, y2]] of EY.entries()){
                yield [
                    Y[iy],
                    {
                        data,
                        x1,
                        y1,
                        x2,
                        y2
                    }
                ];
            }
        }
    } : EX ? function*(I) {
        const X = EX.bin(I);
        for (const [i, [x1, x2]] of EX.entries()){
            yield [
                X[i],
                {
                    data,
                    x1,
                    x2
                }
            ];
        }
    } : function*(I) {
        const Y = EY.bin(I);
        for (const [i, [y1, y2]] of EY.entries()){
            yield [
                Y[i],
                {
                    data,
                    y1,
                    y2
                }
            ];
        }
    };
}
// non-cumulative distribution
function bin1(E, T, V) {
    T = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["coerceNumbers"])(T); // for faster bisection
    return (I)=>{
        var _B_;
        const B = E.map(()=>[]);
        for (const i of I)(_B_ = B[(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$bisect$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__bisect$3e$__["bisect"])(T, V[i]) - 1]) === null || _B_ === void 0 ? void 0 : _B_.push(i); // TODO quantization?
        return B;
    };
}
// cumulative distribution
function bin1cp(E, T, V) {
    const bin = bin1(E, T, V);
    return (I)=>{
        const B = bin(I);
        for(let i = 1, n = B.length; i < n; ++i){
            const C = B[i - 1];
            const b = B[i];
            for (const j of C)b.push(j);
        }
        return B;
    };
}
// complementary cumulative distribution
function bin1cn(E, T, V) {
    const bin = bin1(E, T, V);
    return (I)=>{
        const B = bin(I);
        for(let i = B.length - 2; i >= 0; --i){
            const C = B[i + 1];
            const b = B[i];
            for (const j of C)b.push(j);
        }
        return B;
    };
}
function mid1(x1, x2) {
    const m = (+x1 + +x2) / 2;
    return x1 instanceof Date ? new Date(m) : m;
}
const reduceX = {
    reduceIndex (I, X, param) {
        let { x1, x2 } = param;
        return mid1(x1, x2);
    }
};
const reduceY = {
    reduceIndex (I, X, param) {
        let { y1, y2 } = param;
        return mid1(y1, y2);
    }
};
const reduceX1 = {
    reduceIndex (I, X, param) {
        let { x1 } = param;
        return x1;
    }
};
const reduceX2 = {
    reduceIndex (I, X, param) {
        let { x2 } = param;
        return x2;
    }
};
const reduceY1 = {
    reduceIndex (I, X, param) {
        let { y1 } = param;
        return y1;
    }
};
const reduceY2 = {
    reduceIndex (I, X, param) {
        let { y2 } = param;
        return y2;
    }
};
}),
"[project]/node_modules/@observablehq/plot/src/marks/line.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Line",
    ()=>Line,
    "line",
    ()=>line,
    "lineX",
    ()=>lineX,
    "lineY",
    ()=>lineY
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$line$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__line$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/line.js [app-client] (ecmascript) <export default as line>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/context.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$curve$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/curve.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/mark.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marker$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/marker.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/style.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$bin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/bin.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
const defaults = {
    ariaLabel: "line",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: 1.5,
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeMiterlimit: 1
};
class Line extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Mark"] {
    filter(index) {
        return index;
    }
    project(channels, values, context) {
        // For the auto curve, projection is handled at render.
        if (this.curve !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$curve$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["curveAuto"]) {
            super.project(channels, values, context);
        }
    }
    render(index, scales, channels, dimensions, context) {
        const { x: X, y: Y } = channels;
        const { curve } = this;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["create"])("svg:g", context).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyIndirectStyles"], this, dimensions, context).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyTransform"], this, scales).call((g)=>g.selectAll().data((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["groupIndex"])(index, [
                X,
                Y
            ], this, channels)).enter().append("path").call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyDirectStyles"], this).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyGroupedChannelStyles"], this, channels).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marker$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyGroupedMarkers"], this, channels, context).attr("d", curve === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$curve$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["curveAuto"] && context.projection ? sphereLine(context.path(), X, Y) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$line$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__line$3e$__["line"])().curve(curve).defined((i)=>i >= 0).x((i)=>X[i]).y((i)=>Y[i]))).node();
    }
    constructor(data, options = {}){
        const { x, y, z, curve, tension } = options;
        super(data, {
            x: {
                value: x,
                scale: "x"
            },
            y: {
                value: y,
                scale: "y"
            },
            z: {
                value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeZ"])(options),
                optional: true
            }
        }, options, defaults);
        this.z = z;
        this.curve = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$curve$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeCurveAuto"])(curve, tension);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$marker$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["markers"])(this, options);
    }
}
function sphereLine(path, X, Y) {
    X = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["coerceNumbers"])(X);
    Y = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["coerceNumbers"])(Y);
    return (I)=>{
        let line = [];
        const lines = [
            line
        ];
        for (const i of I){
            // Check for undefined value; see groupIndex.
            if (i === -1) {
                line = [];
                lines.push(line);
            } else {
                line.push([
                    X[i],
                    Y[i]
                ]);
            }
        }
        return path({
            type: "MultiLineString",
            coordinates: lines
        });
    };
}
function line(data) {
    let { x, y, ...options } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    [x, y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeTuple"])(x, y);
    return new Line(data, {
        ...options,
        x,
        y
    });
}
function lineX(data) {
    let { x = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"], y = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["indexOf"], ...options } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return new Line(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$bin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeDenseIntervalY"])({
        ...options,
        x,
        y
    }));
}
function lineY(data) {
    let { x = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["indexOf"], y = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"], ...options } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return new Line(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$bin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeDenseIntervalX"])({
        ...options,
        x,
        y
    }));
}
}),
"[project]/node_modules/@observablehq/plot/src/marks/dot.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Dot",
    ()=>Dot,
    "circle",
    ()=>circle,
    "dot",
    ()=>dot,
    "dotX",
    ()=>dotX,
    "dotY",
    ()=>dotY,
    "hexagon",
    ()=>hexagon,
    "withDefaultSort",
    ()=>withDefaultSort
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_tagged_template_literal.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/d3/src/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$path$2f$src$2f$path$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/d3-path/src/path.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolCircle$3e$__ = __turbopack_context__.i("[project]/node_modules/d3-shape/src/symbol/circle.js [app-client] (ecmascript) <export default as symbolCircle>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/context.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/defined.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/mark.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/style.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$symbol$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/symbol.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$template$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/template.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$basic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/basic.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$interval$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/interval.js [app-client] (ecmascript)");
;
function _templateObject() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "translate(",
        ",",
        ")",
        ""
    ]);
    _templateObject = function() {
        return data;
    };
    return data;
}
;
;
;
;
;
;
;
;
;
;
const defaults = {
    ariaLabel: "dot",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: 1.5
};
function withDefaultSort(options) {
    return options.sort === undefined && options.reverse === undefined ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$basic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sort"])({
        channel: "-r"
    }, options) : options;
}
class Dot extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$mark$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Mark"] {
    render(index, scales, channels, dimensions, context) {
        const { x, y } = scales;
        const { x: X, y: Y, r: R, rotate: A, symbol: S } = channels;
        const { r, rotate, symbol } = this;
        const [cx, cy] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyFrameAnchor"])(this, dimensions);
        const circle = symbol === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolCircle$3e$__["symbolCircle"];
        const size = R ? undefined : r * r * Math.PI;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["negative"])(r)) index = [];
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["create"])("svg:g", context).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyIndirectStyles"], this, dimensions, context).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyTransform"], this, {
            x: X && x,
            y: Y && y
        }).call((g)=>g.selectAll().data(index).enter().append(circle ? "circle" : "path").call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyDirectStyles"], this).call(circle ? (selection)=>{
                selection.attr("cx", X ? (i)=>X[i] : cx).attr("cy", Y ? (i)=>Y[i] : cy).attr("r", R ? (i)=>R[i] : r);
            } : (selection)=>{
                selection.attr("transform", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$template$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["template"])(_templateObject(), X ? (i)=>X[i] : cx, Y ? (i)=>Y[i] : cy, A ? (i)=>" rotate(".concat(A[i], ")") : rotate ? " rotate(".concat(rotate, ")") : "")).attr("d", R && S ? (i)=>{
                    const p = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$path$2f$src$2f$path$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pathRound"])();
                    S[i].draw(p, R[i] * R[i] * Math.PI);
                    return p;
                } : R ? (i)=>{
                    const p = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$path$2f$src$2f$path$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pathRound"])();
                    symbol.draw(p, R[i] * R[i] * Math.PI);
                    return p;
                } : S ? (i)=>{
                    const p = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$path$2f$src$2f$path$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pathRound"])();
                    S[i].draw(p, size);
                    return p;
                } : (()=>{
                    const p = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$path$2f$src$2f$path$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pathRound"])();
                    symbol.draw(p, size);
                    return p;
                })());
            }).call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyChannelStyles"], this, channels)).node();
    }
    constructor(data, options = {}){
        const { x, y, r, rotate, symbol = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$shape$2f$src$2f$symbol$2f$circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__symbolCircle$3e$__["symbolCircle"], frameAnchor } = options;
        const [vrotate, crotate] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeNumberChannel"])(rotate, 0);
        const [vsymbol, csymbol] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$symbol$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeSymbolChannel"])(symbol);
        const [vr, cr] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeNumberChannel"])(r, vsymbol == null ? 3 : 4.5);
        super(data, {
            x: {
                value: x,
                scale: "x",
                optional: true
            },
            y: {
                value: y,
                scale: "y",
                optional: true
            },
            r: {
                value: vr,
                scale: "r",
                filter: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["positive"],
                optional: true
            },
            rotate: {
                value: vrotate,
                optional: true
            },
            symbol: {
                value: vsymbol,
                scale: "auto",
                optional: true
            }
        }, withDefaultSort(options), defaults);
        this.r = cr;
        this.rotate = crotate;
        this.symbol = csymbol;
        this.frameAnchor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeFrameAnchor"])(frameAnchor);
        // Give a hint to the symbol scale; this allows the symbol scale to choose
        // appropriate default symbols based on whether the dots are filled or
        // stroked, and for the symbol legend to match the appearance of the dots.
        const { channels } = this;
        const { symbol: symbolChannel } = channels;
        if (symbolChannel) {
            const { fill: fillChannel, stroke: strokeChannel } = channels;
            var _this_fill, _this_stroke;
            symbolChannel.hint = {
                fill: fillChannel ? fillChannel.value === symbolChannel.value ? "color" : "currentColor" : (_this_fill = this.fill) !== null && _this_fill !== void 0 ? _this_fill : "currentColor",
                stroke: strokeChannel ? strokeChannel.value === symbolChannel.value ? "color" : "currentColor" : (_this_stroke = this.stroke) !== null && _this_stroke !== void 0 ? _this_stroke : "none"
            };
        }
    }
}
function dot(data) {
    let { x, y, ...options } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (options.frameAnchor === undefined) [x, y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeTuple"])(x, y);
    return new Dot(data, {
        ...options,
        x,
        y
    });
}
function dotX(data) {
    let { x = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"], ...options } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return new Dot(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$interval$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeIntervalMidY"])({
        ...options,
        x
    }));
}
function dotY(data) {
    let { y = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"], ...options } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return new Dot(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$interval$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeIntervalMidX"])({
        ...options,
        y
    }));
}
function circle(data, options) {
    return dot(data, {
        ...options,
        symbol: "circle"
    });
}
function hexagon(data, options) {
    return dot(data, {
        ...options,
        symbol: "hexagon"
    });
}
}),
"[project]/node_modules/@observablehq/plot/src/transforms/dodge.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "dodgeX",
    ()=>dodgeX,
    "dodgeY",
    ()=>dodgeY
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$interval$2d$tree$2d$1d$2f$interval$2d$tree$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/interval-tree-1d/interval-tree.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/defined.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$basic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/transforms/basic.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$projection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@observablehq/plot/src/projection.js [app-client] (ecmascript)");
;
;
;
;
;
const anchorXLeft = (param)=>{
    let { marginLeft } = param;
    return [
        1,
        marginLeft
    ];
};
const anchorXRight = (param)=>{
    let { width, marginRight } = param;
    return [
        -1,
        width - marginRight
    ];
};
const anchorXMiddle = (param)=>{
    let { width, marginLeft, marginRight } = param;
    return [
        0,
        (marginLeft + width - marginRight) / 2
    ];
};
const anchorYTop = (param)=>{
    let { marginTop } = param;
    return [
        1,
        marginTop
    ];
};
const anchorYBottom = (param)=>{
    let { height, marginBottom } = param;
    return [
        -1,
        height - marginBottom
    ];
};
const anchorYMiddle = (param)=>{
    let { height, marginTop, marginBottom } = param;
    return [
        0,
        (marginTop + height - marginBottom) / 2
    ];
};
function maybeAnchor(anchor) {
    return typeof anchor === "string" ? {
        anchor
    } : anchor;
}
function dodgeX() {
    let dodgeOptions = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (arguments.length === 1) [dodgeOptions, options] = mergeOptions(dodgeOptions);
    let { anchor = "left", padding = 1, r = options.r } = maybeAnchor(dodgeOptions);
    switch("".concat(anchor).toLowerCase()){
        case "left":
            anchor = anchorXLeft;
            break;
        case "right":
            anchor = anchorXRight;
            break;
        case "middle":
            anchor = anchorXMiddle;
            break;
        default:
            throw new Error("unknown dodge anchor: ".concat(anchor));
    }
    return dodge("x", "y", anchor, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(padding), r, options);
}
function dodgeY() {
    let dodgeOptions = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (arguments.length === 1) [dodgeOptions, options] = mergeOptions(dodgeOptions);
    let { anchor = "bottom", padding = 1, r = options.r } = maybeAnchor(dodgeOptions);
    switch("".concat(anchor).toLowerCase()){
        case "top":
            anchor = anchorYTop;
            break;
        case "bottom":
            anchor = anchorYBottom;
            break;
        case "middle":
            anchor = anchorYMiddle;
            break;
        default:
            throw new Error("unknown dodge anchor: ".concat(anchor));
    }
    return dodge("y", "x", anchor, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(padding), r, options);
}
function mergeOptions(options) {
    const { anchor, padding, ...rest } = options;
    const { r } = rest; // don’t consume r; allow it to propagate
    return [
        {
            anchor,
            padding,
            r
        },
        rest
    ];
}
function dodge(y, x, anchor, padding, r, options) {
    if (r != null && typeof r !== "number") {
        let { channels, sort, reverse } = options;
        channels = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeNamed"])(channels);
        if ((channels === null || channels === void 0 ? void 0 : channels.r) === undefined) options = {
            ...options,
            channels: {
                ...channels,
                r: {
                    value: r,
                    scale: "r"
                }
            }
        };
        if (sort === undefined && reverse === undefined) options.sort = {
            channel: "-r"
        };
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$transforms$2f$basic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["initializer"])(options, function(data, facets, channels, scales, dimensions, context) {
        let { [x]: X, r: R } = channels;
        if (!channels[x]) throw new Error("missing channel: ".concat(x));
        ({ [x]: X } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$projection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyPosition"])(channels, scales, context));
        const cr = R ? undefined : r !== undefined ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["number"])(r) : this.r !== undefined ? this.r : 3;
        if (R) R = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["valueof"])(R.value, scales[R.scale] || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["identity"], Float64Array);
        let [ky, ty] = anchor(dimensions);
        const compare = ky ? compareAscending : compareSymmetric;
        const Y = new Float64Array(X.length);
        const radius = R ? (i)=>R[i] : ()=>cr;
        for (let I of facets){
            const tree = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$interval$2d$tree$2d$1d$2f$interval$2d$tree$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])();
            I = I.filter(R ? (i)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["finite"])(X[i]) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["positive"])(R[i]) : (i)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$observablehq$2f$plot$2f$src$2f$defined$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["finite"])(X[i]));
            const intervals = new Float64Array(2 * I.length + 2);
            for (const i of I){
                const ri = radius(i);
                const y0 = ky ? ri + padding : 0; // offset baseline for varying radius
                const l = X[i] - ri;
                const h = X[i] + ri;
                // The first two positions are 0 to test placing the dot on the baseline.
                let k = 2;
                // For any previously placed circles that may overlap this circle, compute
                // the y-positions that place this circle tangent to these other circles.
                // https://observablehq.com/@mbostock/circle-offset-along-line
                tree.queryInterval(l - padding, h + padding, (param)=>{
                    let [, , j] = param;
                    const yj = Y[j] - y0;
                    const dx = X[i] - X[j];
                    const dr = padding + (R ? R[i] + R[j] : 2 * cr);
                    const dy = Math.sqrt(dr * dr - dx * dx);
                    intervals[k++] = yj - dy;
                    intervals[k++] = yj + dy;
                });
                // Find the best y-value where this circle can fit.
                let candidates = intervals.slice(0, k);
                if (ky) candidates = candidates.filter((y)=>y >= 0);
                out: for (const y of candidates.sort(compare)){
                    for(let j = 0; j < k; j += 2){
                        if (intervals[j] + 1e-6 < y && y < intervals[j + 1] - 1e-6) {
                            continue out;
                        }
                    }
                    Y[i] = y + y0;
                    break;
                }
                // Insert the placed circle into the interval tree.
                tree.insert([
                    l,
                    h,
                    i
                ]);
            }
        }
        if (!ky) ky = 1;
        for (const I of facets){
            for (const i of I){
                Y[i] = Y[i] * ky + ty;
            }
        }
        return {
            data,
            facets,
            channels: {
                [y]: {
                    value: Y,
                    source: null
                },
                [x]: {
                    value: X,
                    source: channels[x]
                },
                ...R && {
                    r: {
                        value: R,
                        source: channels.r
                    }
                }
            }
        };
    });
}
function compareSymmetric(a, b) {
    return Math.abs(a) - Math.abs(b);
}
function compareAscending(a, b) {
    return a - b;
}
}),
]);

//# sourceMappingURL=node_modules_%40observablehq_plot_src_2bf8b5f6._.js.map