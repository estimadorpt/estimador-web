{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/lib/config/colors.ts"],"sourcesContent":["export const partyColors = {\n  \"AD\": \"#FF8C00\",  // Dark Orange\n  \"PS\": \"#E57373\",  // Muted Pink\n  \"CH\": \"#377EB8\",  // Blue\n  \"IL\": \"#A6CEE3\",  // Light Blue \n  \"BE\": \"#000000\",  // Black\n  \"CDU\": \"#E41A1C\", // Red\n  \"L\":  \"#90EE90\",  // Light Green\n  \"PAN\": \"#4CAF50\", // Green for PAN\n  \"OTH\": \"#A65628\"  // Brown\n};\n\nexport const partyOrder = [\"AD\", \"PS\", \"CH\", \"IL\", \"BE\", \"CDU\", \"L\", \"PAN\", \"OTH\"];\n\nexport const partyNames = {\n  \"AD\": \"Aliança Democrática\",\n  \"PS\": \"Partido Socialista\", \n  \"CH\": \"Chega\",\n  \"IL\": \"Iniciativa Liberal\",\n  \"BE\": \"Bloco de Esquerda\",\n  \"CDU\": \"CDU\",\n  \"L\": \"Livre\",\n  \"PAN\": \"PAN\",\n  \"OTH\": \"Others\"\n};"],"names":[],"mappings":";;;;;;;;AAAO,MAAM,cAAc;IACzB,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,OAAO;IACP,KAAM;IACN,OAAO;IACP,OAAO,UAAW,QAAQ;AAC5B;AAEO,MAAM,aAAa;IAAC;IAAM;IAAM;IAAM;IAAM;IAAM;IAAO;IAAK;IAAO;CAAM;AAE3E,MAAM,aAAa;IACxB,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,OAAO;IACP,KAAK;IACL,OAAO;IACP,OAAO;AACT","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/PollingChart.tsx"],"sourcesContent":["\"use client\";\n\nimport * as Plot from \"@observablehq/plot\";\nimport { useEffect, useRef } from \"react\";\nimport { partyColors } from \"@/lib/config/colors\";\n\ninterface TrendData {\n  date: string;\n  party: string;\n  metric: string;\n  value: number;\n}\n\ninterface PollingChartProps {\n  data: TrendData[];\n  height?: number;\n}\n\nexport function PollingChart({ data, height = 300 }: PollingChartProps) {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n\n    // Filter for vote share data only\n    const voteShareData = data.filter(d => d.metric === 'vote_share_mean');\n    \n    const plot = Plot.plot({\n      height,\n      marginLeft: 60,\n      marginRight: 80,\n      marginTop: 20,\n      marginBottom: 40,\n      style: {\n        backgroundColor: \"transparent\",\n        fontSize: \"12px\",\n        fontFamily: \"Inter, system-ui, sans-serif\"\n      },\n      x: {\n        type: \"time\",\n        label: null,\n        tickFormat: \"%b %Y\",\n        grid: true,\n        ticks: 4\n      },\n      y: {\n        label: \"Vote share (%)\",\n        domain: [0, 0.5],\n        tickFormat: d => `${(d * 100).toFixed(0)}%`,\n        grid: true\n      },\n      color: {\n        type: \"categorical\",\n        domain: Object.keys(partyColors),\n        range: Object.values(partyColors)\n      },\n      marks: [\n        // Background grid\n        Plot.gridY({ stroke: \"#f3f4f6\", strokeWidth: 1 }),\n        Plot.gridX({ stroke: \"#f3f4f6\", strokeWidth: 1 }),\n        \n        // Lines for each party\n        Plot.line(voteShareData, {\n          x: d => new Date(d.date),\n          y: \"value\",\n          stroke: \"party\",\n          strokeWidth: 2.5,\n          curve: \"catmull-rom\"\n        }),\n        \n        // Points for latest values\n        Plot.dot(voteShareData.filter(d => {\n          const maxDate = new Date(Math.max(...voteShareData.map(dd => new Date(dd.date).getTime())));\n          return new Date(d.date).getTime() === maxDate.getTime();\n        }), {\n          x: d => new Date(d.date),\n          y: \"value\",\n          fill: \"party\",\n          r: 4,\n          stroke: \"white\",\n          strokeWidth: 2\n        }),\n        \n        // Party labels at the end\n        Plot.text(voteShareData.filter(d => {\n          const maxDate = new Date(Math.max(...voteShareData.map(dd => new Date(dd.date).getTime())));\n          return new Date(d.date).getTime() === maxDate.getTime();\n        }), {\n          x: d => new Date(d.date),\n          y: \"value\",\n          text: d => `${d.party} ${(d.value * 100).toFixed(1)}%`,\n          fill: \"party\",\n          dx: 10,\n          fontSize: 11,\n          fontWeight: \"500\"\n        })\n      ]\n    });\n\n    if (containerRef.current) {\n      containerRef.current.replaceChildren(plot);\n    }\n\n    return () => plot.remove();\n  }, [data, height]);\n\n  return (\n    <div className=\"w-full\">\n      <div ref={containerRef} />\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AAJA;;;;AAkBO,SAAS,aAAa,KAAyC;QAAzC,EAAE,IAAI,EAAE,SAAS,GAAG,EAAqB,GAAzC;;IAC3B,MAAM,eAAe,IAAA,uKAAM,EAAiB;IAE5C,IAAA,0KAAS;kCAAC;YACR,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;YAEhC,kCAAkC;YAClC,MAAM,gBAAgB,KAAK,MAAM;wDAAC,CAAA,IAAK,EAAE,MAAM,KAAK;;YAEpD,MAAM,OAAO,gKAAS,CAAC;gBACrB;gBACA,YAAY;gBACZ,aAAa;gBACb,WAAW;gBACX,cAAc;gBACd,OAAO;oBACL,iBAAiB;oBACjB,UAAU;oBACV,YAAY;gBACd;gBACA,GAAG;oBACD,MAAM;oBACN,OAAO;oBACP,YAAY;oBACZ,MAAM;oBACN,OAAO;gBACT;gBACA,GAAG;oBACD,OAAO;oBACP,QAAQ;wBAAC;wBAAG;qBAAI;oBAChB,UAAU;uDAAE,CAAA,IAAK,AAAC,GAAuB,OAArB,CAAC,IAAI,GAAG,EAAE,OAAO,CAAC,IAAG;;oBACzC,MAAM;gBACR;gBACA,OAAO;oBACL,MAAM;oBACN,QAAQ,OAAO,IAAI,CAAC,gJAAW;oBAC/B,OAAO,OAAO,MAAM,CAAC,gJAAW;gBAClC;gBACA,OAAO;oBACL,kBAAkB;oBAClB,0KAAU,CAAC;wBAAE,QAAQ;wBAAW,aAAa;oBAAE;oBAC/C,0KAAU,CAAC;wBAAE,QAAQ;wBAAW,aAAa;oBAAE;oBAE/C,uBAAuB;oBACvB,yKAAS,CAAC,eAAe;wBACvB,CAAC;2DAAE,CAAA,IAAK,IAAI,KAAK,EAAE,IAAI;;wBACvB,GAAG;wBACH,QAAQ;wBACR,aAAa;wBACb,OAAO;oBACT;oBAEA,2BAA2B;oBAC3B,uKAAQ,CAAC,cAAc,MAAM;uDAAC,CAAA;4BAC5B,MAAM,UAAU,IAAI,KAAK,KAAK,GAAG,IAAI,cAAc,GAAG;+DAAC,CAAA,KAAM,IAAI,KAAK,GAAG,IAAI,EAAE,OAAO;;4BACtF,OAAO,IAAI,KAAK,EAAE,IAAI,EAAE,OAAO,OAAO,QAAQ,OAAO;wBACvD;uDAAI;wBACF,CAAC;2DAAE,CAAA,IAAK,IAAI,KAAK,EAAE,IAAI;;wBACvB,GAAG;wBACH,MAAM;wBACN,GAAG;wBACH,QAAQ;wBACR,aAAa;oBACf;oBAEA,0BAA0B;oBAC1B,yKAAS,CAAC,cAAc,MAAM;uDAAC,CAAA;4BAC7B,MAAM,UAAU,IAAI,KAAK,KAAK,GAAG,IAAI,cAAc,GAAG;+DAAC,CAAA,KAAM,IAAI,KAAK,GAAG,IAAI,EAAE,OAAO;;4BACtF,OAAO,IAAI,KAAK,EAAE,IAAI,EAAE,OAAO,OAAO,QAAQ,OAAO;wBACvD;uDAAI;wBACF,CAAC;2DAAE,CAAA,IAAK,IAAI,KAAK,EAAE,IAAI;;wBACvB,GAAG;wBACH,IAAI;2DAAE,CAAA,IAAK,AAAC,GAAa,OAAX,EAAE,KAAK,EAAC,KAA8B,OAA3B,CAAC,EAAE,KAAK,GAAG,GAAG,EAAE,OAAO,CAAC,IAAG;;wBACpD,MAAM;wBACN,IAAI;wBACJ,UAAU;wBACV,YAAY;oBACd;iBACD;YACH;YAEA,IAAI,aAAa,OAAO,EAAE;gBACxB,aAAa,OAAO,CAAC,eAAe,CAAC;YACvC;YAEA;0CAAO,IAAM,KAAK,MAAM;;QAC1B;iCAAG;QAAC;QAAM;KAAO;IAEjB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,KAAK;;;;;;;;;;;AAGhB;GA7FgB;KAAA","debugId":null}}]
}