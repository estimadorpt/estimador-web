{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/lib/config/colors.ts"],"sourcesContent":["export const partyColors = {\n  \"AD\": \"#FF8C00\",  // Dark Orange\n  \"PS\": \"#E57373\",  // Muted Pink\n  \"CH\": \"#377EB8\",  // Blue\n  \"IL\": \"#A6CEE3\",  // Light Blue \n  \"BE\": \"#000000\",  // Black\n  \"CDU\": \"#E41A1C\", // Red\n  \"L\":  \"#90EE90\",  // Light Green\n  \"PAN\": \"#4CAF50\", // Green for PAN\n  \"OTH\": \"#A65628\"  // Brown\n};\n\nexport const partyOrder = [\"AD\", \"PS\", \"CH\", \"IL\", \"BE\", \"CDU\", \"L\", \"PAN\", \"OTH\"];\n\nexport const partyNames = {\n  \"AD\": \"Aliança Democrática\",\n  \"PS\": \"Partido Socialista\", \n  \"CH\": \"Chega\",\n  \"IL\": \"Iniciativa Liberal\",\n  \"BE\": \"Bloco de Esquerda\",\n  \"CDU\": \"CDU\",\n  \"L\": \"Livre\",\n  \"PAN\": \"PAN\",\n  \"OTH\": \"Others\"\n};"],"names":[],"mappings":";;;;;;;;AAAO,MAAM,cAAc;IACzB,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,OAAO;IACP,KAAM;IACN,OAAO;IACP,OAAO,UAAW,QAAQ;AAC5B;AAEO,MAAM,aAAa;IAAC;IAAM;IAAM;IAAM;IAAM;IAAM;IAAO;IAAK;IAAO;CAAM;AAE3E,MAAM,aAAa;IACxB,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,OAAO;IACP,KAAK;IACL,OAAO;IACP,OAAO;AACT","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/PollingChart.tsx"],"sourcesContent":["\"use client\";\n\nimport * as Plot from \"@observablehq/plot\";\nimport { useEffect, useRef } from \"react\";\nimport { partyColors } from \"@/lib/config/colors\";\n\ninterface TrendData {\n  date: string;\n  party: string;\n  metric: string;\n  value: number;\n}\n\ninterface PollingChartProps {\n  data: TrendData[];\n  height?: number;\n}\n\nexport function PollingChart({ data, height = 300 }: PollingChartProps) {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n\n    // Filter for vote share data only\n    const voteShareData = data.filter(d => d.metric === 'vote_share_mean');\n    \n    const plot = Plot.plot({\n      height,\n      marginLeft: 60,\n      marginRight: 80,\n      marginTop: 20,\n      marginBottom: 40,\n      style: {\n        backgroundColor: \"transparent\",\n        fontSize: \"12px\",\n        fontFamily: \"Inter, system-ui, sans-serif\"\n      },\n      x: {\n        type: \"time\",\n        label: null,\n        tickFormat: \"%b %Y\",\n        grid: true,\n        ticks: 4\n      },\n      y: {\n        label: \"Vote share (%)\",\n        domain: [0, 0.5],\n        tickFormat: d => `${(d * 100).toFixed(0)}%`,\n        grid: true\n      },\n      color: {\n        type: \"categorical\",\n        domain: Object.keys(partyColors),\n        range: Object.values(partyColors)\n      },\n      marks: [\n        // Background grid\n        Plot.gridY({ stroke: \"#f3f4f6\", strokeWidth: 1 }),\n        Plot.gridX({ stroke: \"#f3f4f6\", strokeWidth: 1 }),\n        \n        // Lines for each party\n        Plot.line(voteShareData, {\n          x: d => new Date(d.date),\n          y: \"value\",\n          stroke: \"party\",\n          strokeWidth: 2.5,\n          curve: \"catmull-rom\"\n        }),\n        \n        // Points for latest values\n        Plot.dot(voteShareData.filter(d => {\n          const maxDate = new Date(Math.max(...voteShareData.map(dd => new Date(dd.date).getTime())));\n          return new Date(d.date).getTime() === maxDate.getTime();\n        }), {\n          x: d => new Date(d.date),\n          y: \"value\",\n          fill: \"party\",\n          r: 4,\n          stroke: \"white\",\n          strokeWidth: 2\n        }),\n        \n        // Party labels at the end\n        Plot.text(voteShareData.filter(d => {\n          const maxDate = new Date(Math.max(...voteShareData.map(dd => new Date(dd.date).getTime())));\n          return new Date(d.date).getTime() === maxDate.getTime();\n        }), {\n          x: d => new Date(d.date),\n          y: \"value\",\n          text: d => `${d.party} ${(d.value * 100).toFixed(1)}%`,\n          fill: \"party\",\n          dx: 10,\n          fontSize: 11,\n          fontWeight: \"500\"\n        })\n      ]\n    });\n\n    if (containerRef.current) {\n      containerRef.current.replaceChildren(plot);\n    }\n\n    return () => plot.remove();\n  }, [data, height]);\n\n  return (\n    <div className=\"w-full\">\n      <div ref={containerRef} />\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AAJA;;;;AAkBO,SAAS,aAAa,KAAyC;QAAzC,EAAE,IAAI,EAAE,SAAS,GAAG,EAAqB,GAAzC;;IAC3B,MAAM,eAAe,IAAA,uKAAM,EAAiB;IAE5C,IAAA,0KAAS;kCAAC;YACR,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;YAEhC,kCAAkC;YAClC,MAAM,gBAAgB,KAAK,MAAM;wDAAC,CAAA,IAAK,EAAE,MAAM,KAAK;;YAEpD,MAAM,OAAO,gKAAS,CAAC;gBACrB;gBACA,YAAY;gBACZ,aAAa;gBACb,WAAW;gBACX,cAAc;gBACd,OAAO;oBACL,iBAAiB;oBACjB,UAAU;oBACV,YAAY;gBACd;gBACA,GAAG;oBACD,MAAM;oBACN,OAAO;oBACP,YAAY;oBACZ,MAAM;oBACN,OAAO;gBACT;gBACA,GAAG;oBACD,OAAO;oBACP,QAAQ;wBAAC;wBAAG;qBAAI;oBAChB,UAAU;uDAAE,CAAA,IAAK,AAAC,GAAuB,OAArB,CAAC,IAAI,GAAG,EAAE,OAAO,CAAC,IAAG;;oBACzC,MAAM;gBACR;gBACA,OAAO;oBACL,MAAM;oBACN,QAAQ,OAAO,IAAI,CAAC,gJAAW;oBAC/B,OAAO,OAAO,MAAM,CAAC,gJAAW;gBAClC;gBACA,OAAO;oBACL,kBAAkB;oBAClB,0KAAU,CAAC;wBAAE,QAAQ;wBAAW,aAAa;oBAAE;oBAC/C,0KAAU,CAAC;wBAAE,QAAQ;wBAAW,aAAa;oBAAE;oBAE/C,uBAAuB;oBACvB,yKAAS,CAAC,eAAe;wBACvB,CAAC;2DAAE,CAAA,IAAK,IAAI,KAAK,EAAE,IAAI;;wBACvB,GAAG;wBACH,QAAQ;wBACR,aAAa;wBACb,OAAO;oBACT;oBAEA,2BAA2B;oBAC3B,uKAAQ,CAAC,cAAc,MAAM;uDAAC,CAAA;4BAC5B,MAAM,UAAU,IAAI,KAAK,KAAK,GAAG,IAAI,cAAc,GAAG;+DAAC,CAAA,KAAM,IAAI,KAAK,GAAG,IAAI,EAAE,OAAO;;4BACtF,OAAO,IAAI,KAAK,EAAE,IAAI,EAAE,OAAO,OAAO,QAAQ,OAAO;wBACvD;uDAAI;wBACF,CAAC;2DAAE,CAAA,IAAK,IAAI,KAAK,EAAE,IAAI;;wBACvB,GAAG;wBACH,MAAM;wBACN,GAAG;wBACH,QAAQ;wBACR,aAAa;oBACf;oBAEA,0BAA0B;oBAC1B,yKAAS,CAAC,cAAc,MAAM;uDAAC,CAAA;4BAC7B,MAAM,UAAU,IAAI,KAAK,KAAK,GAAG,IAAI,cAAc,GAAG;+DAAC,CAAA,KAAM,IAAI,KAAK,GAAG,IAAI,EAAE,OAAO;;4BACtF,OAAO,IAAI,KAAK,EAAE,IAAI,EAAE,OAAO,OAAO,QAAQ,OAAO;wBACvD;uDAAI;wBACF,CAAC;2DAAE,CAAA,IAAK,IAAI,KAAK,EAAE,IAAI;;wBACvB,GAAG;wBACH,IAAI;2DAAE,CAAA,IAAK,AAAC,GAAa,OAAX,EAAE,KAAK,EAAC,KAA8B,OAA3B,CAAC,EAAE,KAAK,GAAG,GAAG,EAAE,OAAO,CAAC,IAAG;;wBACpD,MAAM;wBACN,IAAI;wBACJ,UAAU;wBACV,YAAY;oBACd;iBACD;YACH;YAEA,IAAI,aAAa,OAAO,EAAE;gBACxB,aAAa,OAAO,CAAC,eAAe,CAAC;YACvC;YAEA;0CAAO,IAAM,KAAK,MAAM;;QAC1B;iCAAG;QAAC;QAAM;KAAO;IAEjB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,KAAK;;;;;;;;;;;AAGhB;GA7FgB;KAAA","debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/SeatChart.tsx"],"sourcesContent":["\"use client\";\n\nimport * as Plot from \"@observablehq/plot\";\nimport { useEffect, useRef } from \"react\";\nimport { partyColors, partyNames } from \"@/lib/config/colors\";\n\ninterface SeatData {\n  party: string;\n  seats: number;\n}\n\ninterface SeatChartProps {\n  data: SeatData[];\n  height?: number;\n}\n\nexport function SeatChart({ data, height = 300 }: SeatChartProps) {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n\n    // Calculate seat statistics for each party\n    const seatStats = data.reduce((acc, d) => {\n      if (!acc[d.party]) {\n        acc[d.party] = [];\n      }\n      acc[d.party].push(d.seats);\n      return acc;\n    }, {} as Record<string, number[]>);\n\n    const chartData = Object.entries(seatStats).map(([party, seats]) => {\n      const sorted = seats.sort((a, b) => a - b);\n      return {\n        party,\n        mean: Math.round(sorted.reduce((sum, s) => sum + s, 0) / sorted.length),\n        p10: sorted[Math.floor(sorted.length * 0.1)],\n        p25: sorted[Math.floor(sorted.length * 0.25)],\n        p75: sorted[Math.floor(sorted.length * 0.75)],\n        p90: sorted[Math.floor(sorted.length * 0.9)],\n        min: Math.min(...sorted),\n        max: Math.max(...sorted)\n      };\n    }).sort((a, b) => b.mean - a.mean);\n\n    const plot = Plot.plot({\n      height,\n      marginLeft: 80,\n      marginRight: 20,\n      marginTop: 20,\n      marginBottom: 40,\n      style: {\n        backgroundColor: \"transparent\",\n        fontSize: \"12px\",\n        fontFamily: \"Inter, system-ui, sans-serif\"\n      },\n      x: {\n        label: \"Projected seats\",\n        grid: true,\n        domain: [0, Math.max(...chartData.map(d => d.max)) + 10]\n      },\n      y: {\n        label: null,\n        domain: chartData.map(d => d.party),\n        tickFormat: d => partyNames[d as keyof typeof partyNames] || d\n      },\n      color: {\n        type: \"categorical\",\n        domain: Object.keys(partyColors),\n        range: Object.values(partyColors)\n      },\n      marks: [\n        // Background grid\n        Plot.gridX({ stroke: \"#f3f4f6\", strokeWidth: 1 }),\n        \n        // Uncertainty bands (80% confidence)\n        Plot.barX(chartData, {\n          x1: \"p10\",\n          x2: \"p90\",\n          y: \"party\",\n          fill: \"party\",\n          fillOpacity: 0.2,\n          height: 20\n        }),\n        \n        // Interquartile range (50% confidence)\n        Plot.barX(chartData, {\n          x1: \"p25\",\n          x2: \"p75\",\n          y: \"party\",\n          fill: \"party\",\n          fillOpacity: 0.4,\n          height: 20\n        }),\n        \n        // Mean projection\n        Plot.dot(chartData, {\n          x: \"mean\",\n          y: \"party\",\n          fill: \"party\",\n          r: 4,\n          stroke: \"white\",\n          strokeWidth: 2\n        }),\n        \n        // Mean labels\n        Plot.text(chartData, {\n          x: \"mean\",\n          y: \"party\",\n          text: \"mean\",\n          dx: 15,\n          fontSize: 11,\n          fontWeight: \"600\",\n          fill: \"#374151\"\n        })\n      ]\n    });\n\n    if (containerRef.current) {\n      containerRef.current.replaceChildren(plot);\n    }\n\n    return () => plot.remove();\n  }, [data, height]);\n\n  return (\n    <div className=\"w-full\">\n      <div ref={containerRef} />\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 389, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/DistrictSummary.tsx"],"sourcesContent":["\"use client\";\n\nimport { partyColors, partyNames } from \"@/lib/config/colors\";\n\ninterface DistrictForecast {\n  district_name: string;\n  winning_party: string;\n  probs: Record<string, number>;\n}\n\ninterface ContestedData {\n  districts: Record<string, {\n    ENSC: number;\n  }>;\n}\n\ninterface DistrictSummaryProps {\n  districtData: DistrictForecast[];\n  contestedData: ContestedData;\n}\n\nexport function DistrictSummary({ districtData, contestedData }: DistrictSummaryProps) {\n  if (!districtData || districtData.length === 0) {\n    return (\n      <div className=\"text-center py-8 text-gray-500\">\n        <p>District analysis loading...</p>\n      </div>\n    );\n  }\n\n  // Sort districts by competitiveness (ENSC score)\n  const sortedDistricts = districtData\n    .map(district => {\n      const contestedInfo = contestedData?.districts?.[district.district_name];\n      const competitiveness = contestedInfo?.ENSC || 0;\n      \n      // Get top 2 parties by probability\n      const parties = Object.entries(district.probs)\n        .sort(([,a], [,b]) => b - a)\n        .slice(0, 2);\n      \n      return {\n        ...district,\n        competitiveness,\n        topParties: parties,\n        isContested: competitiveness > 1.2\n      };\n    })\n    .sort((a, b) => b.competitiveness - a.competitiveness);\n\n  const contestedDistricts = sortedDistricts.filter(d => d.isContested);\n  const safeDistricts = sortedDistricts.filter(d => !d.isContested);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Contested Districts */}\n      {contestedDistricts.length > 0 && (\n        <div>\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n            Contested Districts ({contestedDistricts.length})\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {contestedDistricts.slice(0, 9).map(district => (\n              <div key={district.district_name} className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <h4 className=\"font-medium text-gray-900\">{district.district_name}</h4>\n                  <span className=\"text-xs bg-yellow-200 text-yellow-800 px-2 py-1 rounded\">\n                    Contested\n                  </span>\n                </div>\n                <div className=\"space-y-2\">\n                  {district.topParties.map(([party, prob]) => (\n                    <div key={party} className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-2\">\n                        <div \n                          className=\"w-3 h-3 rounded\"\n                          style={{ backgroundColor: partyColors[party as keyof typeof partyColors] }}\n                        />\n                        <span className=\"text-sm font-medium\">\n                          {partyNames[party as keyof typeof partyNames] || party}\n                        </span>\n                      </div>\n                      <span className=\"text-sm font-bold\">\n                        {(prob * 100).toFixed(1)}%\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Safe Districts Summary */}\n      <div>\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n          Likely Winners by District\n        </h3>\n        <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n            {Object.values(partyColors).map((color, index) => {\n              const party = Object.keys(partyColors)[index];\n              const wins = safeDistricts.filter(d => d.winning_party === party).length;\n              \n              if (wins === 0) return null;\n              \n              return (\n                <div key={party} className=\"text-center\">\n                  <div \n                    className=\"w-12 h-12 mx-auto mb-2 rounded-lg flex items-center justify-center text-white font-bold shadow-md\"\n                    style={{ backgroundColor: color }}\n                  >\n                    {wins}\n                  </div>\n                  <div className=\"text-sm font-medium text-gray-900\">\n                    {partyNames[party as keyof typeof partyNames] || party}\n                  </div>\n                  <div className=\"text-xs text-gray-500\">districts</div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* Summary Stats */}\n      <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\n        <div className=\"grid grid-cols-3 gap-4 text-center\">\n          <div>\n            <div className=\"text-2xl font-bold text-gray-900\">{districtData.length}</div>\n            <div className=\"text-sm text-gray-600\">Total districts</div>\n          </div>\n          <div>\n            <div className=\"text-2xl font-bold text-yellow-600\">{contestedDistricts.length}</div>\n            <div className=\"text-sm text-gray-600\">Contested</div>\n          </div>\n          <div>\n            <div className=\"text-2xl font-bold text-green-600\">{safeDistricts.length}</div>\n            <div className=\"text-sm text-gray-600\">Likely decided</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 732, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardo/estimador-web/src/components/charts/HouseEffects.tsx"],"sourcesContent":["\"use client\";\n\nimport * as Plot from \"@observablehq/plot\";\nimport { useEffect, useRef } from \"react\";\nimport { partyColors } from \"@/lib/config/colors\";\n\ninterface HouseEffect {\n  pollster: string;\n  party: string;\n  effect: number;\n  n_polls: number;\n}\n\ninterface HouseEffectsProps {\n  data: HouseEffect[];\n  height?: number;\n}\n\nexport function HouseEffects({ data, height = 300 }: HouseEffectsProps) {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n\n    // Filter for pollsters with at least 3 polls and meaningful effects\n    const filteredData = data.filter(d => \n      d.n_polls >= 3 && Math.abs(d.effect) > 0.005\n    );\n\n    const plot = Plot.plot({\n      height,\n      marginLeft: 120,\n      marginRight: 80,\n      marginTop: 20,\n      marginBottom: 40,\n      style: {\n        backgroundColor: \"transparent\",\n        fontSize: \"11px\",\n        fontFamily: \"Inter, system-ui, sans-serif\"\n      },\n      x: {\n        label: \"House effect (percentage points)\",\n        grid: true,\n        tickFormat: d => `${(d * 100).toFixed(1)}%`,\n        domain: [-0.08, 0.08]\n      },\n      y: {\n        label: null,\n        domain: [...new Set(filteredData.map(d => d.pollster))].sort()\n      },\n      color: {\n        type: \"categorical\",\n        domain: Object.keys(partyColors),\n        range: Object.values(partyColors)\n      },\n      marks: [\n        // Background grid\n        Plot.gridX({ stroke: \"#f3f4f6\", strokeWidth: 1 }),\n        Plot.ruleX([0], { stroke: \"#6b7280\", strokeWidth: 2 }),\n        \n        // House effect bars\n        Plot.barX(filteredData, {\n          x: \"effect\",\n          y: \"pollster\",\n          fill: \"party\",\n          fillOpacity: 0.8,\n          height: 15,\n          rx: 2\n        }),\n        \n        // Value labels for significant effects\n        Plot.text(filteredData.filter(d => Math.abs(d.effect) > 0.02), {\n          x: \"effect\",\n          y: \"pollster\",\n          text: d => `${(d.effect * 100).toFixed(1)}%`,\n          dx: d => d.effect > 0 ? 5 : -5,\n          textAnchor: d => d.effect > 0 ? \"start\" : \"end\",\n          fontSize: 10,\n          fontWeight: \"500\",\n          fill: \"#374151\"\n        })\n      ]\n    });\n\n    if (containerRef.current) {\n      containerRef.current.replaceChildren(plot);\n    }\n\n    return () => plot.remove();\n  }, [data, height]);\n\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"text-center py-8 text-gray-500\">\n        <p>House effects analysis loading...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <div ref={containerRef} />\n      <div className=\"mt-2 text-xs text-gray-500\">\n        Positive values indicate the pollster tends to show higher support for that party than the average.\n        Only pollsters with 3+ polls and meaningful effects (&gt;0.5pt) are shown.\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AAJA;;;;AAkBO,SAAS,aAAa,KAAyC;QAAzC,EAAE,IAAI,EAAE,SAAS,GAAG,EAAqB,GAAzC;;IAC3B,MAAM,eAAe,IAAA,uKAAM,EAAiB;IAE5C,IAAA,0KAAS;kCAAC;YACR,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;YAEhC,oEAAoE;YACpE,MAAM,eAAe,KAAK,MAAM;uDAAC,CAAA,IAC/B,EAAE,OAAO,IAAI,KAAK,KAAK,GAAG,CAAC,EAAE,MAAM,IAAI;;YAGzC,MAAM,OAAO,gKAAS,CAAC;gBACrB;gBACA,YAAY;gBACZ,aAAa;gBACb,WAAW;gBACX,cAAc;gBACd,OAAO;oBACL,iBAAiB;oBACjB,UAAU;oBACV,YAAY;gBACd;gBACA,GAAG;oBACD,OAAO;oBACP,MAAM;oBACN,UAAU;uDAAE,CAAA,IAAK,AAAC,GAAuB,OAArB,CAAC,IAAI,GAAG,EAAE,OAAO,CAAC,IAAG;;oBACzC,QAAQ;wBAAC,CAAC;wBAAM;qBAAK;gBACvB;gBACA,GAAG;oBACD,OAAO;oBACP,QAAQ;2BAAI,IAAI,IAAI,aAAa,GAAG;2DAAC,CAAA,IAAK,EAAE,QAAQ;;qBAAG,CAAC,IAAI;gBAC9D;gBACA,OAAO;oBACL,MAAM;oBACN,QAAQ,OAAO,IAAI,CAAC,gJAAW;oBAC/B,OAAO,OAAO,MAAM,CAAC,gJAAW;gBAClC;gBACA,OAAO;oBACL,kBAAkB;oBAClB,0KAAU,CAAC;wBAAE,QAAQ;wBAAW,aAAa;oBAAE;oBAC/C,0KAAU,CAAC;wBAAC;qBAAE,EAAE;wBAAE,QAAQ;wBAAW,aAAa;oBAAE;oBAEpD,oBAAoB;oBACpB,wKAAS,CAAC,cAAc;wBACtB,GAAG;wBACH,GAAG;wBACH,MAAM;wBACN,aAAa;wBACb,QAAQ;wBACR,IAAI;oBACN;oBAEA,uCAAuC;oBACvC,yKAAS,CAAC,aAAa,MAAM;uDAAC,CAAA,IAAK,KAAK,GAAG,CAAC,EAAE,MAAM,IAAI;uDAAO;wBAC7D,GAAG;wBACH,GAAG;wBACH,IAAI;2DAAE,CAAA,IAAK,AAAC,GAA8B,OAA5B,CAAC,EAAE,MAAM,GAAG,GAAG,EAAE,OAAO,CAAC,IAAG;;wBAC1C,EAAE;2DAAE,CAAA,IAAK,EAAE,MAAM,GAAG,IAAI,IAAI,CAAC;;wBAC7B,UAAU;2DAAE,CAAA,IAAK,EAAE,MAAM,GAAG,IAAI,UAAU;;wBAC1C,UAAU;wBACV,YAAY;wBACZ,MAAM;oBACR;iBACD;YACH;YAEA,IAAI,aAAa,OAAO,EAAE;gBACxB,aAAa,OAAO,CAAC,eAAe,CAAC;YACvC;YAEA;0CAAO,IAAM,KAAK,MAAM;;QAC1B;iCAAG;QAAC;QAAM;KAAO;IAEjB,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;QAC9B,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;0BAAE;;;;;;;;;;;IAGT;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,KAAK;;;;;;0BACV,6LAAC;gBAAI,WAAU;0BAA6B;;;;;;;;;;;;AAMlD;GA1FgB;KAAA","debugId":null}}]
}